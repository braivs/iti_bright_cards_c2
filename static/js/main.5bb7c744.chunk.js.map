{"version":3,"sources":["n1-main/m1-ui/common/c2-SuperButton/SuperButton.module.scss","n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox.module.css","assets/components/common/input/Input.module.scss","n2-features/f2-table/Sort/SortMain/Sort.module.scss","n2-features/f2-table/Search/SearchMain/Search.module.scss","assets/components/table/Table.module.scss","n1-main/m1-ui/common/c6-SuperRadio/SuperRadio.module.scss","assets/components/common/checkbox/CheckboxLabel.module.scss","n2-features/f2-table/Search/RangeSlider/RangeSlider.module.scss","assets/components/common/search/Search.module.scss","n1-main/m1-ui/common/c4-SuperEditableSpan/SuperEditableSpan.module.scss","n2-features/f0-test/TestForReducer/TestForReducer.module.scss","assets/components/common/title/Title.module.scss","assets/components/common/subtitle/Subtitle.module.scss","assets/components/common/button/Button.module.scss","assets/components/table/table-row/TableRow.module.scss","assets/components/table/table-button/TableButton.module.scss","assets/components/packs-list/PacksList.module.scss","n2-features/f0-test/Examples/Examples.module.scss","reportWebVitals.ts","n1-main/m2-bll/api/api.ts","n1-main/m2-bll/profileReducer.ts","n1-main/m2-bll/appReducer.ts","n1-main/m2-bll/authReducer.ts","n1-main/m1-ui/p1-header/Header.tsx","n2-features/f1-auth/Page404.tsx","n1-main/m1-ui/common/c1-SuperInputText/SuperInputText.tsx","n1-main/m1-ui/common/c2-SuperButton/SuperButton.tsx","n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","n1-main/m1-ui/common/c5-SuperSelect/SuperSelect.tsx","n1-main/m1-ui/common/c6-SuperRadio/SuperRadio.tsx","n1-main/m2-bll/testReducer.ts","n2-features/f0-test/TestForReducer/TestForReducer.tsx","n2-features/f0-test/Examples/Examples.tsx","assets/components/common/title/Title.jsx","assets/components/common/subtitle/Subtitle.jsx","assets/components/common/button/Button.jsx","assets/components/common/checkbox/CheckboxLabel.jsx","assets/img/shape.svg","assets/components/common/input/Input.tsx","n2-features/f1-auth/a1-login/LoginForm.tsx","n1-main/m2-bll/registrationReducer.ts","n2-features/f1-auth/a2-register/RegistrationForm.tsx","n1-main/m2-bll/findAndPaginationReducer.ts","n1-main/m2-bll/packsReducer.ts","n2-features/f2-table/Pagination/Pagination.tsx","n2-features/f2-table/Pagination/PaginationPacksContainer.tsx","n2-features/f2-table/Sort/SortMain/Sort.tsx","n2-features/f2-table/Sort/SortCardPacksContainer/SortCardPacksContainer.tsx","n2-features/f2-table/Search/RangeSlider/RangeSlider.tsx","n2-features/f2-table/Search/SearchMain/Search.tsx","n2-features/f2-table/Search/SearchCardsPacksContainer/SearchCardsPacksContainer.tsx","n2-features/f3-packs/Packs.tsx","n1-main/m2-bll/cardsReducer.ts","n2-features/f2-table/Pagination/PaginationCardsContainer.tsx","n2-features/f2-table/Search/SeachCardsContainer/SeachCardsContainer.tsx","n2-features/f2-table/Sort/SortCardsContainer/SortCardsContainer.tsx","n2-features/f4-cards/Cards.tsx","assets/img/photo-profile.png","assets/img/photo-icon.svg","n2-features/f1-auth/a3-profile/ProfileForm.tsx","n1-main/m2-bll/passwordRecoveryReducer.ts","n2-features/f1-auth/a4-password-recovery/PasswordRecoveryForm.tsx","n2-features/f1-auth/a4-password-recovery/PasswordNewForm.tsx","assets/components/common/search/Search.jsx","assets/components/table/cell-common/CellCommon.jsx","assets/components/table/table-button/TableButton.jsx","assets/components/table/table-row/TableRow.jsx","assets/img/arrow-icon.svg","assets/components/table/Table.jsx","assets/components/packs-list/pagination/UsePagination.jsx","assets/components/packs-list/select/Select.jsx","assets/components/packs-list/use-slider/UseSlider.jsx","assets/components/packs-list/UsePacksList.jsx","n1-main/m1-ui/p2-main/Main.tsx","n1-main/m1-ui/App.tsx","n1-main/m2-bll/store.ts","index.tsx","n1-main/m1-ui/p1-header/Header.module.scss","n2-features/f2-table/Pagination/Paginations.module.scss","n2-features/f1-auth/a1-login/LoginForm.module.scss","n2-features/f1-auth/a2-register/RegistrationForm.module.scss","n2-features/f1-auth/a4-password-recovery/PasswordRecoveryForm.module.scss","n2-features/f3-packs/Pack.module.scss","n2-features/f1-auth/a4-password-recovery/PasswordNewForm.module.scss","n1-main/m1-ui/common/c5-SuperSelect/SuperSelect.module.scss","n1-main/m1-ui/common/c1-SuperInputText/SuperInputText.module.scss","n2-features/f4-cards/Cards.module.scss","n2-features/f1-auth/a3-profile/ProfileForm.module.scss"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","withCredentials","authAPI","data","post","delete","registrationAPI","email","password","RecoveryAPI","from","message","token","resetPasswordToken","packsAPI","pageCount","page","min","max","packName","sortPacks","get","params","isPrivate","cardsPack","name","private","cardsAPI","id","cardQuestion","sortCards","cardsPack_id","card","question","answer","grade","Math","random","shots","initialState","avatar","publicCardPacksCount","_id","setProfileAC","type","isInitilize","error","loading","setAppLoading","isLoggedIn","setIsLoggedInAC","value","setIsErrorAC","Header","dispatch","useDispatch","useSelector","state","auth","className","s","header","logo","links","item","to","link","onClick","catch","e","response","finally","notDone","Page404","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","currentTarget","key","SuperButton","red","finalClassName","button","default","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","onDoubleClick","restSpanProps","editableSpan","SuperSelect","options","onChangeOption","mappedOptions","map","o","i","option","select","SuperRadio","onChangeCallback","radio","testValue","TestForReducer","reducerValue","testReducer","testForReducer","newValue","Examples","text","setText","setChecked","setValue","arr","valueForSsSr","showAlert","alert","examples","column","inputContainer","testSpanError","blue","superButton","disabled","SuperEditableSpanContainer","undefined","radioContainer","Title","title","Subtitle","props","subtitle","Button","btn","style","CheckboxLabel","checkboxLabels","Checkbox","Input","inputData","required","placeholder","htmlFor","for","icon","src","alt","inputData1","display","inputData2","LoginForm","errorFromServer","formik","useFormik","initialValues","rememberMe","onSubmit","values","res","validate","errors","test","action","handleSubmit","contentWrap","getFieldProps","touched","block","linkForgotPass","linkSignUp","status","setRegisterStatus","setRegisterError","setRegisterMessage","inputData3","styleButton1","backgroundColor","color","width","boxShadow","styleButton2","RegistrationForm","setErrorSelf","registration","createNewUserHandler","setTimeout","createNewUser","checkPassword","trim","resetForm","validationSchema","yup","shape","matches","cardPacks","totalCount","cards","selectedCardId","questionText","setSortPacksAC","payload","setSortCardsAC","pack_id","getPacksTC","getState","findAndPagination","toString","cardPacksTotalCount","Pagination","pagesCount","ceil","pages","push","portionCount","portion","setPortion","leftNumber","rightNumber","useEffect","currentPageHandler","pagination","superSelect","onClickSelectHandler","selectStyle","points","filter","p","q","PaginationPacksContainer","setCardPacksPageCountAC","setCardPacksCurrentPageAC","Sort","container","upperSortHandler","lowerSortHandler","SortCardPacksContainer","upperSort","lowerCount","RangeSlider","rangeSlider","Slider","getAriaLabel","event","numbers","valueLabelDisplay","slider","Search","search","inputValue","setInputValueHandler","inputPlaceholder","showRange","buttonFindHandler","buttonText","SearchCardsPacksContainer","Packs","packs","TableContainer","table","component","Paper","Table","sx","minWidth","TableHead","TableRow","TableCell","cell","align","TableBody","mp","border","scope","cardsCount","updated","getCardsTC","cardsTotalCount","PaginationCardsContainer","setCardsPageCountAC","setCardsCurrentPageAC","SearchCardsContainer","cardId","SortCardsContainer","Cards","useParams","addCardsTC","ProfileForm","profile","img","success","info","setSuccessAC","setNewPassAC","setErrorAC","PasswordRecoveryForm","recovery","PasswordNewForm","infoFromServer","setNewPassTC","length","inputSearch","autofocus","CellCommon","cellData","TableButton","styleButton","fontWeight","td1","td2","td3","td4","btnBlock","tableWrap","tableData","title1","title2","title3","title4","title5","dataRow1","dataRow2","dataRow3","dataRow4","dataRow5","dataRow6","dataRow7","dataRow8","List","styled","listStyle","margin","alignItems","UsePagination","items","usePagination","count","index","selected","borderWidth","height","borderRadius","fontFamily","fontSize","lineHeight","cursor","marginRight","BootstrapInput","InputBase","theme","marginTop","spacing","position","palette","background","paper","padding","transition","transitions","join","CustomizedSelects","React","age","setAge","FormControl","m","variant","Select","labelId","target","MenuItem","UseSlider","valuetext","Box","getAriaValueText","PacksList","packsList","sidebar","active","labelSlider","main","searchBlock","bottomBlock","selectBlock","label1","selectWrap","label2","Main","path","element","App","isInitialize","app","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bb7c744.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SuperButton_button__1EGkW\",\"default\":\"SuperButton_default__2WfoH\",\"red\":\"SuperButton_red__3OyBy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__21TBZ\",\"checkbox\":\"SuperCheckbox_checkbox__1-frT\",\"spanClassName\":\"SuperCheckbox_spanClassName__1f-hD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3tREn\",\"placeholder\":\"Input_placeholder__3eRBG\",\"icon\":\"Input_icon__NeuiV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Sort_container__3cs5e\",\"block\":\"Sort_block__14UER\",\"btn\":\"Sort_btn__1k8v-\",\"elem\":\"Sort_elem__YvL0f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__3emuZ\",\"input\":\"Search_input__1IZNM\",\"btn\":\"Search_btn__7QhON\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrap\":\"Table_tableWrap__3r6nh\",\"btn\":\"Table_btn__2aURl\",\"active\":\"Table_active__GtNQM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"SuperRadio_radio__32PFz\",\"label\":\"SuperRadio_label__3f7xm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkboxLabels\":\"CheckboxLabel_checkboxLabels__MhWdJ\",\"label\":\"CheckboxLabel_label__6jp3K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rangeSlider\":\"RangeSlider_rangeSlider__1Some\",\"slider\":\"RangeSlider_slider__1Awr_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__212kp\",\"inputSearch\":\"Search_inputSearch__2ScDD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableSpan\":\"SuperEditableSpan_editableSpan__2Cx5J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testForReducer\":\"TestForReducer_testForReducer__1y3D7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__3mUKG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subtitle\":\"Subtitle_subtitle__1n7I3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__2rJQ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnBlock\":\"TableRow_btnBlock__bLPlO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"TableButton_btn__taD-3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsList\":\"PacksList_packsList__1ZjvZ\",\"sidebar\":\"PacksList_sidebar__b5D8T\",\"label\":\"PacksList_label__2FS-t\",\"labelSlider\":\"PacksList_labelSlider__3GT-9\",\"btnBlock\":\"PacksList_btnBlock__3uOty\",\"btn\":\"PacksList_btn__2GvWX\",\"active\":\"PacksList_active__3aiH2\",\"main\":\"PacksList_main__1xEnE\",\"searchBlock\":\"PacksList_searchBlock__2066a\",\"bottomBlock\":\"PacksList_bottomBlock__6wydo\",\"label1\":\"PacksList_label1__3Gp1Q\",\"label2\":\"PacksList_label2__392SF\",\"selectBlock\":\"PacksList_selectBlock__3Ppa1\",\"selectWrap\":\"PacksList_selectWrap__386mf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"examples\":\"Examples_examples__3mQdr\",\"column\":\"Examples_column__3t11r\",\"testSpanError\":\"Examples_testSpanError__3fxpu\",\"blue\":\"Examples_blue__30Fno\",\"superButton\":\"Examples_superButton__3TncY\",\"inputContainer\":\"Examples_inputContainer__3v9e7\",\"SuperEditableSpanContainer\":\"Examples_SuperEditableSpanContainer__oujEe\",\"radioContainer\":\"Examples_radioContainer__11Z2z\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import axios, {AxiosResponse} from \"axios\";\r\nimport {packType} from \"../packsReducer\";\r\nimport {cardType} from \"../cardsReducer\";\r\nimport {SortCardsType, SortPackType} from \"../findAndPaginationReducer\";\r\n\r\nconst instance = axios.create({\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\nexport const authAPI = {\r\n    login(data: LoginType) {\r\n        return instance.post<AuthResponseType>('auth/login', data);\r\n    },\r\n    me() {\r\n        return instance.post<AuthResponseType>('/auth/me', {})\r\n    },\r\n    logout() {\r\n        return instance.delete('/auth/me')\r\n    }\r\n}\r\nexport const registrationAPI = {\r\n    registerUser(email: string, password: string) {\r\n        return instance.post<{ title: string }, AxiosResponse<ResponseType>>('auth/register', {\r\n            email: email,\r\n            password: password\r\n        });\r\n    },\r\n}\r\nexport const RecoveryAPI = {\r\n    recoveryPass(email: string) {\r\n        return instance.post<recoveryType>('/auth/forgot', {\r\n            email,\r\n            from: \"test-front-admin <ivanin.jay@gmail.com>\",\r\n            message: `<div style=\"background-color: lime; padding: 15px\">password recovery link: \r\n                            <a href='http://localhost:3000/#/passwordnew/$token$'>link</a></div>`\r\n        })\r\n    },\r\n\r\n    newPass(password: string, token: string) {\r\n        return instance.post<recoveryType>('/auth/set-new-password', {\r\n            password: password,\r\n            resetPasswordToken: token,\r\n        })\r\n    }\r\n};\r\n\r\nexport const packsAPI = {\r\n    getPacks(pageCount: string, page: number, min: number, max: number, packName: string, sortPacks: SortPackType) {\r\n        return instance.get<getPacksType>(`/cards/pack`, {params: {\r\n            pageCount, page, min, max, packName, sortPacks}})\r\n    },\r\n    addPacks(isPrivate:boolean) {\r\n        return instance.post<getPacksType>(`/cards/pack`, {\r\n            cardsPack: {\r\n                name: \"new Pack333\",\r\n                private: isPrivate\r\n            }\r\n        })\r\n    }\r\n}\r\nexport const cardsAPI = {\r\n    getCards(id: string, pageCount: string, page: number, cardQuestion: string, sortCards: SortCardsType) {\r\n        return instance.get<getCardType>(`/cards/card`, {params: {\r\n                cardsPack_id: id, pageCount, page, cardQuestion, sortCards\r\n            }})\r\n    },\r\n    addCards(cardsPack_id:string){\r\n        return instance.post<getCardType>(`/cards/card`, {\r\n            card:{\r\n                cardsPack_id,\r\n                question: \"no question\",\r\n                answer: \"no answer\",\r\n                grade: Math.random()*5,\r\n                shots: 0,\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport type LoginType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n}\r\nexport type AuthResponseType = {\r\n    avatar: string\r\n    email: string\r\n    name: string\r\n    publicCardPacksCount: number\r\n    _id: string\r\n}\r\nexport type ResponseType<D = {}> = {\r\n    resultCode: number\r\n    messages: Array<string>\r\n    fieldsErrors: Array<string>\r\n    data: D\r\n}\r\nexport type recoveryType = {\r\n    error: string\r\n    success: boolean\r\n    info: string\r\n}\r\n\r\nexport type getPacksType = {\r\n    cardPacks: packType[]\r\n    cardPacksTotalCount: number // количество колод\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number // выбранная страница\r\n    pageCount: number // количество элементов на странице\r\n}\r\nexport type getCardType = {\r\n    cards: cardType[]\r\n    cardsTotalCount: number\r\n}","import {AuthResponseType} from \"./api/api\";\r\n\r\nlet initialState: AuthResponseType = {\r\n    avatar: '',\r\n    email: '',\r\n    name: '',\r\n    publicCardPacksCount: 0,\r\n    _id: '',\r\n}\r\n\r\nexport const profileReducer = (state = initialState, action: ActionsType): AuthResponseType => {\r\n    switch (action.type) {\r\n        case 'PROFILE/SET-PROFILE':\r\n            return {...state, ...action.data}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n// ActionsCreators\r\nexport const setProfileAC = (data: AuthResponseType) => {\r\n    return ({type: 'PROFILE/SET-PROFILE', data} as const)\r\n}\r\n\r\n// Types\r\nexport type SetProfileType = ReturnType<typeof setProfileAC>\r\ntype ActionsType = SetProfileType","// todo: add Loader here\r\n\r\nlet initialState: InitialStateType = {\r\n    isInitilize: false,\r\n    error:null,\r\n    message:null,\r\n    loading:false,\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-IS-INITIALIZE':\r\n            return {...state, isInitilize: action.isInitilize}\r\n        case 'APP/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        case 'APP/SET-MESSAGE':\r\n            return {...state, message: action.message}\r\n        case 'APP/SET-LOADING':\r\n            return {...state, loading: action.loading}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport const setIsInitializeAC = (isInitilize: boolean) => {\r\n    return ({type: 'APP/SET-IS-INITIALIZE', isInitilize} as const)\r\n}\r\n\r\nexport const setAppError = (error: string) => {\r\n    return ({type: 'APP/SET-ERROR', error} as const)\r\n}\r\n\r\nexport const setAppMessage = (message: string) => {\r\n    return ({type: 'APP/SET-MESSAGE', message} as const)\r\n}\r\n\r\nexport const setAppLoading = (loading: boolean) => {\r\n    return ({type: 'APP/SET-LOADING', loading} as const)\r\n}\r\n\r\n// Types\r\ntype InitialStateType = {\r\n    isInitilize: boolean\r\n    error: null | string\r\n    message: null | string\r\n    loading: boolean\r\n}\r\n\r\ntype ActionsType =\r\n    | ReturnType<typeof setIsInitializeAC>\r\n    | ReturnType<typeof setAppError>\r\n    | ReturnType<typeof setAppMessage>\r\n    | ReturnType<typeof setAppLoading>\r\n\r\n\r\n","import {authAPI} from \"./api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {setProfileAC, SetProfileType} from \"./profileReducer\";\r\nimport {setAppLoading, setIsInitializeAC} from \"./appReducer\";\r\n\r\nlet initialState: InitialStateType = {\r\n    isLoggedIn: false,\r\n    error: null,\r\n}\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'AUTH/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.value}\r\n        case 'AUTH/SET-IS-ERROR':\r\n            return {...state, error: action.error}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n// ActionsCreators\r\nexport const setIsLoggedInAC = (value: boolean) => {\r\n    return ({type: 'AUTH/SET-IS-LOGGED-IN', value} as const)\r\n}\r\nexport const setIsErrorAC = (error: string | null) => {\r\n    return ({type: 'AUTH/SET-IS-ERROR', error} as const)\r\n}\r\n\r\n// Thunks\r\nexport const LoginTC = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch<ActionsType>) => {\r\n    setAppLoading(true)\r\n    authAPI.login({email, password, rememberMe})\r\n        .then(res => {\r\n                dispatch(setIsLoggedInAC(true))\r\n                dispatch(setProfileAC(res.data))\r\n            }\r\n        )\r\n        .catch(e => {\r\n                dispatch(setIsErrorAC(e.response.data.error))\r\n            }\r\n        )\r\n        .finally(() => {\r\n            setAppLoading(false)\r\n        })\r\n}\r\nexport const InitializeTC = () => (dispatch: Dispatch) => {\r\n    setAppLoading(true)\r\n    authAPI.me()\r\n        .then(res => {\r\n                dispatch(setIsLoggedInAC(true))\r\n                dispatch(setProfileAC(res.data))\r\n            }\r\n        )\r\n        .catch(() => {\r\n                dispatch(setIsLoggedInAC(false))\r\n            }\r\n        )\r\n        .finally(() => {\r\n            dispatch(setIsInitializeAC(true))\r\n            setAppLoading(false)\r\n        })\r\n}\r\nexport const LogoutTC = () => (dispatch: Dispatch) => {\r\n    setAppLoading(true)\r\n    authAPI.logout()\r\n        .then(() => {\r\n                dispatch(setIsLoggedInAC(false))\r\n                dispatch(setIsErrorAC(null))\r\n            }\r\n        )\r\n        .catch(e => {\r\n                dispatch(setIsErrorAC(e.response.data.error))\r\n            }\r\n        )\r\n        .finally(() => {\r\n            setAppLoading(false)\r\n        })\r\n}\r\n\r\n// Types\r\ntype InitialStateType = {\r\n    isLoggedIn: boolean\r\n    error: string | null\r\n}\r\ntype ActionsType =\r\n    | ReturnType<typeof setIsLoggedInAC>\r\n    | ReturnType<typeof setIsErrorAC>\r\n    | SetProfileType\r\n    | ReturnType<typeof setAppLoading>\r\n\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Header.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {LogoutTC} from \"../../m2-bll/authReducer\";\r\nimport {AppStoreType} from \"../../m2-bll/store\";\r\n\r\nexport const Header = () => {\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const onLogout = () => {\r\n        dispatch(LogoutTC())\r\n    }\r\n\r\n    return (\r\n        <div className={s.header}>\r\n            <div className={s.logo}>BrightCards</div>\r\n            <div className={s.links}>\r\n                {isLoggedIn\r\n                    ? <>\r\n                        <NavLink className={s.item} to={'/profile'}>Profile</NavLink>\r\n                        <a className={s.link} onClick={onLogout}>Log out</a>\r\n                    </>\r\n                    : <>\r\n                        <NavLink className={s.item} to={'/login'}>Login</NavLink>\r\n                        <NavLink className={s.item} to={'/registration'}>Registration</NavLink>\r\n                        <NavLink className={s.item} to={'/passwordrecovery'}>Recovery Password</NavLink>\r\n                    </>\r\n                }\r\n                <NavLink className={s.item} to={'/packs'}>Packs</NavLink>\r\n                <NavLink className={`${s.item} ${s.notDone}`} to={'/packsdesigned'}>PacksDesigned</NavLink>\r\n                {/*<NavLink className={s.item} to={'/cards'}>Cards</NavLink>*/}\r\n                <NavLink className={s.item} to={'/tests'}>Tests</NavLink>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport const Page404 = () => {\r\n    return (\r\n        <div>Page404</div>\r\n    );\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.scss'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        //type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.scss'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n  onChangeChecked?: (checked: boolean) => void\r\n  spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n  {\r\n    type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n    onChange, onChangeChecked,\r\n    className, spanClassName,\r\n    children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n    ...restProps// все остальные пропсы попадут в объект restProps\r\n  }\r\n) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e)\r\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n  }\r\n\r\n  const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      <input\r\n        type={'checkbox'}\r\n        onChange={onChangeCallback}\r\n        className={finalInputClassName}\r\n\r\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n      />\r\n      {children && <span className={s.spanClassName}>{children}</span>}\r\n    </label> // благодаря label нажатие на спан передастся в инпут\r\n  )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport s from './SuperEditableSpan.module.scss'\r\nimport SuperInputText from \"../c1-SuperInputText/SuperInputText\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n  onChangeText?: (value: string) => void\r\n  onEnter?: () => void\r\n  error?: string\r\n  spanClassName?: string\r\n\r\n  spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n  {\r\n    autoFocus, // игнорировать изменение этого пропса\r\n    onBlur,\r\n    onEnter,\r\n    spanProps,\r\n\r\n    ...restProps// все остальные пропсы попадут в объект restProps\r\n  }\r\n) => {\r\n  const [editMode, setEditMode] = useState<boolean>(false)\r\n  const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n  const onEnterCallback = () => {\r\n    setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n    onEnter && onEnter() // оставлено на будущее, чтобы можно было возвращать событие по enter\r\n  }\r\n  const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n    onBlur && onBlur(e)\r\n  }\r\n  const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n    setEditMode(true) // включить editMode при двойном клике\r\n\r\n    onDoubleClick && onDoubleClick(e)\r\n  }\r\n\r\n  const spanClassName = `${s.editableSpan} ${className}`\r\n\r\n  return (\r\n    <>\r\n      {editMode\r\n        ? (\r\n          <SuperInputText\r\n            autoFocus // пропсу с булевым значением не обязательно указывать true\r\n            onBlur={onBlurCallback}\r\n            onEnter={onEnterCallback}\r\n\r\n            {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n          />\r\n        ) : (\r\n          <span\r\n            onDoubleClick={onDoubleClickCallBack}\r\n            className={spanClassName}\r\n\r\n            {...restSpanProps}\r\n          >\r\n            {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n            ✎ {children || restProps.value}\r\n                    </span>\r\n        )\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","import React, {ChangeEvent, DetailedHTMLProps, SelectHTMLAttributes} from 'react'\r\nimport s from './SuperSelect.module.scss'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n  options?: string[]\r\n  onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n  {\r\n    options,\r\n    onChange, onChangeOption,\r\n    ...restProps\r\n  }\r\n) => {\r\n  const mappedOptions: any[] = options ? options.map((o, i) => (\r\n    <option className={s.option} key={'option-' + i} value={o}>{o}</option>\r\n  )) : []\r\n\r\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    onChange && onChange(e)\r\n    onChangeOption && onChangeOption(e.currentTarget.value)\r\n\r\n  }\r\n\r\n  return (\r\n    <select className={s.select} onChange={onChangeCallback} {...restProps}>\r\n      {mappedOptions}\r\n    </select>\r\n  )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperRadio.module.scss'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: string[]\r\n    onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n      onChange && onChange(e)\r\n      onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => { // map options with key\r\n        return <label className={s.label} key={name + '-' + i}>\r\n            <input\r\n                className={s.radio}\r\n                type={'radio'}\r\n                name={name}\r\n                checked={o === value}\r\n                value={o}\r\n                onChange={onChangeCallback}\r\n            />\r\n            {o}\r\n        </label>\r\n    }) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","const initialState: InitialStateType = {\r\n    testValue: ''\r\n}\r\n\r\nexport const testReducer = (state = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case 'SET-TEST-VALUE':\r\n            return {...state, testValue: action.newValue}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setTestValueAC = (newValue: string) =>\r\n    ({type: 'SET-TEST-VALUE', newValue} as const)\r\n\r\n\r\ntype InitialStateType = {\r\n    testValue: string\r\n}\r\n\r\ntype ActionType = ReturnType<typeof setTestValueAC>","import React from 'react';\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {setTestValueAC} from \"../../../n1-main/m2-bll/testReducer\";\r\nimport s from './TestForReducer.module.scss'\r\n\r\nexport const TestForReducer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    let reducerValue = useSelector<AppStoreType, string>(state => state.testReducer.testValue)\r\n\r\n    return <div className={s.testForReducer}>\r\n        <div>Hi, I am test for reducer. I will set 'test value' to state and will show it at the input, if you click the\r\n            button.\r\n        </div>\r\n        <div>\r\n            <SuperInputText value={reducerValue}/>\r\n            <SuperButton onClick={() => {dispatch(setTestValueAC('test value'))}}>Click Me</SuperButton>\r\n        </div>\r\n    </div>\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport s from './Examples.module.scss'\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../../n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperEditableSpan from \"../../../n1-main/m1-ui/common/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperSelect from \"../../../n1-main/m1-ui/common/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"../../../n1-main/m1-ui/common/c6-SuperRadio/SuperRadio\";\r\nimport {TestForReducer} from \"../TestForReducer/TestForReducer\";\r\n\r\nexport const Examples = () => {\r\n    const [text, setText] = useState<string>('') // for SuperInputText\r\n    const [checked, setChecked] = useState<boolean>(false) // for SuperCheckbox\r\n    const [value, setValue] = useState<string>('') // for SuperEditableSpan\r\n    const arr = ['x', 'y', 'z'] // for SuperSelect & SuperRadio\r\n    const [valueForSsSr, onChangeOption] = useState(arr[1]) // for SuperSelect & SuperRadio\r\n\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => { // for SuperButton\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div className={s.examples}>\r\n            <TestForReducer />\r\n            <h1>This is examples of common components.</h1>\r\n            <hr/>\r\n            <div className={s.column}>\r\n                <h2>с1-SuperInputText:</h2>\r\n                <div className={s.inputContainer}>\r\n                    <SuperInputText\r\n                        value={text}\r\n                        onChangeText={setText}\r\n                        onEnter={showAlert}\r\n                        error={error}\r\n                        spanClassName={s.testSpanError}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <SuperInputText\r\n                        className={s.blue} // проверьте, работает ли смешивание классов\r\n                    />\r\n                </div>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div className={s.column}>\r\n                <h2>с2-SuperButton:</h2>\r\n                <SuperButton className={s.superButton}>\r\n                    default\r\n                </SuperButton>\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                    className={s.superButton}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n                <SuperButton disabled className={s.superButton}>\r\n                    disabled\r\n                </SuperButton>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div className={s.column}>\r\n                <h2>с3-SuperCheckbox:</h2>\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div>\r\n                <h2>с4-SuperEditableSpan:</h2>\r\n                <div className={s.SuperEditableSpanContainer}>\r\n                    <SuperEditableSpan\r\n                        value={value}\r\n                        onChangeText={setValue}\r\n                        spanProps={{children: value ? undefined : 'enter text...'}}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div className={s.column}>\r\n                <h2>с5-SuperSelect and SuperRadio:</h2>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={valueForSsSr}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n                <div className={s.radioContainer}>\r\n                    <SuperRadio\r\n                        options={arr}\r\n                        value={valueForSsSr}\r\n                        onChangeOption={onChangeOption}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}","import s from \"./Title.module.scss\";\r\n\r\n\r\nexport default function Title() {\r\n   return (\r\n      <h1 className={s.title}>It-incubator</h1>\r\n   );\r\n}\r\n\r\n","import s from \"./Subtitle.module.scss\";\r\n\r\n\r\nexport default function Subtitle(props) {\r\n   return (\r\n      <h2 className={s.subtitle}>{props.subtitle}</h2>\r\n   );\r\n}\r\n\r\n","import s from \"./Button.module.scss\";\r\n\r\n// в месте, где используется кнопка, если нужно, стилизуем кнопку\r\n// const styleButton = {\r\n//    padding: \"19px 61px\",\r\n//    fontSize: \"14px\",\r\n//    letterSpacing: \"0.8px\"\r\n// }\r\n\r\n// style={styleButton}\r\n\r\nexport default function Button(props) {\r\n   return (\r\n      <button className={s.btn} style={props.style} type=\"submit\">{props.label}</button>\r\n   );\r\n}\r\n\r\n\r\n\r\n","\r\nimport s from \"./CheckboxLabel.module.scss\";\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\nexport default function CheckboxLabel(props) {\r\n   return (\r\n      <div className={s.checkboxLabels}>\r\n         <Checkbox />\r\n         <span className={s.label}>{props.label}</span>\r\n      </div>\r\n   );\r\n}","export default __webpack_public_path__ + \"static/media/shape.109a1739.svg\";","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from \"./Input.module.scss\";\r\n\r\nimport icon from './../../../img/shape.svg';\r\nimport {inputDataType} from \"../../../../n2-features/f1-auth/a1-login/LoginForm\";\r\n\r\nexport const Input: React.FC<PropsType> = ({inputData, value, onChange, ...restProps}) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n    }\r\n\r\n    const changeTypeHandler = ()=>{\r\n       inputData.type === 'password'? inputData.type = '' : inputData.type = 'password'\r\n    }\r\n\r\n\r\n   return (\r\n      <div className={s.input}>\r\n         <input\r\n             id={inputData.id}\r\n             type={inputData.type}\r\n             name={inputData.name}\r\n             required {...restProps}\r\n             value={value}\r\n             onChange={onChangeCallback}\r\n         />\r\n         <label className={s.placeholder} htmlFor={inputData.for}>{inputData.label}</label>\r\n         <img onClick={changeTypeHandler} className={s.icon} src={icon} alt=\"image\" style={inputData.style} />\r\n      </div>\r\n   );\r\n}\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype PropsType = DefaultInputPropsType & {\r\n    inputData: inputDataType\r\n    value?: string | number\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport s from \"./LoginForm.module.scss\";\r\nimport {Navigate, NavLink} from \"react-router-dom\";\r\nimport Title from \"../../../assets/components/common/title/Title.jsx\";\r\nimport Subtitle from \"../../../assets/components/common/subtitle/Subtitle.jsx\";\r\nimport Button from \"../../../assets/components/common/button/Button.jsx\";\r\nimport CheckboxLabel from \"../../../assets/components/common/checkbox/CheckboxLabel.jsx\";\r\nimport {Input} from \"../../../assets/components/common/input/Input\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {useFormik} from \"formik\";\r\nimport {LoginTC} from \"../../../n1-main/m2-bll/authReducer\";\r\n\r\n// данные для input email\r\nconst inputData1: inputDataType = {\r\n    id: \"email\",\r\n    type: \"email\",\r\n    name: \"email\",\r\n    for: \"email\",\r\n    label: \"Email\",\r\n    style: {\r\n        display: \"none\"\r\n    }\r\n}\r\n\r\n// данные для input password\r\nconst inputData2: inputDataType = {\r\n    id: \"password\",\r\n    type: \"password\",\r\n    name: \"password\",\r\n    for: \"password\",\r\n    label: \"Password\",\r\n    style: {\r\n        display: \"inlineBlock\"\r\n    }\r\n}\r\n\r\nexport default function LoginForm() {\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.auth.isLoggedIn)\r\n    const errorFromServer = useSelector<AppStoreType, string | null>(state => state.auth.error)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(LoginTC(values.email, values.password, values.rememberMe));\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            }\r\n            return errors\r\n        },\r\n    },);\r\n\r\n    if (isLoggedIn) {\r\n        return <Navigate to=\"/profile\"/>\r\n    }\r\n\r\n    return (\r\n        <form action=\"\" onSubmit={formik.handleSubmit}>\r\n            <div className={s.contentWrap}>\r\n                <Title/>\r\n                <Subtitle subtitle=\"Sign In\"/>\r\n                <Input\r\n                    inputData={inputData1}\r\n                    {...formik.getFieldProps('email')}\r\n                />\r\n                {formik.touched.email && formik.errors.email ? (\r\n                    <div className={s.error}>{formik.errors.email}</div>\r\n                ) : null}\r\n                <Input\r\n                    inputData={inputData2}\r\n                    {...formik.getFieldProps('password')}\r\n                />\r\n                {formik.touched.password && formik.errors.password ? (\r\n                    <div className={s.error}>{formik.errors.password}</div>\r\n                ) : null}\r\n                {errorFromServer ? <span className={s.error}>{errorFromServer}</span> : null}\r\n                <div className={s.block}>\r\n                    <CheckboxLabel\r\n                        id=\"rememberMe\"\r\n                        label=\"Remember Me\"\r\n                        {...formik.getFieldProps('rememberMe')}\r\n                    />\r\n                    <NavLink className={s.linkForgotPass} to={'/passwordrecovery'}>Forgot password</NavLink>\r\n                </div>\r\n                <Button label=\"Login\" type={'submit'}/>\r\n                <span className={s.question}>Don’t have an account?</span>\r\n                <NavLink className={s.linkSignUp} to={'/registration'}>Sign Up</NavLink>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport type inputDataType = {\r\n    id?: string\r\n    type?: string\r\n    name?: string\r\n    for?: string\r\n    label?: string\r\n    style: {\r\n        display: string\r\n    }\r\n}\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {registrationAPI} from \"./api/api\";\r\n\r\nconst initialState: InitialStateType = {\r\n    status: 'idle',\r\n    error: null,\r\n    message: null,\r\n}\r\n\r\nexport const registrationReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"registrationReducer/SET-REGISTER-STATUS\":\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        case \"registrationReducer/SET-REGISTER-ERROR\":\r\n            return {\r\n                ...state, error: action.error\r\n            }\r\n        case \"registrationReducer/SET-REGISTER-MESSAGE\":\r\n            return {\r\n                ...state, message: action.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setRegisterStatus = (status: RequestStatusType) =>\r\n    ({type: \"registrationReducer/SET-REGISTER-STATUS\", status} as const)\r\nexport const setRegisterError = (error: string | null) =>\r\n    ({type: \"registrationReducer/SET-REGISTER-ERROR\", error} as const)\r\nexport const setRegisterMessage = (message: string | null) =>\r\n    ({type: \"registrationReducer/SET-REGISTER-MESSAGE\", message} as const)\r\n\r\n\r\nexport const createNewUser = (email: string, password: string) => (dispatch: Dispatch<ActionsType /*| SetAppErrorActionType | SetAppStatusActionType*/>) => {\r\n    dispatch(setRegisterStatus('loading'))\r\n    registrationAPI.registerUser(email, password)\r\n        .then(res => {\r\n            dispatch(setRegisterMessage('success!'))\r\n            dispatch(setRegisterStatus('succeeded'))\r\n            setTimeout(() => {\r\n                dispatch(setRegisterStatus('register_success'))\r\n                dispatch(setRegisterMessage(null))\r\n                dispatch(setRegisterStatus('idle'))\r\n            }, 2000)\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setRegisterError(error.response.data.error))\r\n            dispatch(setRegisterStatus('failed'))\r\n            setTimeout(() => {\r\n                dispatch(setRegisterError(null))\r\n            }, 2000)\r\n        })\r\n}\r\n\r\n\r\ntype InitialStateType = {\r\n    status: RequestStatusType\r\n    error: string | null\r\n    message: string | null\r\n}\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed' | 'register_success'\r\n\r\ntype ActionsType =\r\n    | ReturnType<typeof setRegisterStatus>\r\n    | ReturnType<typeof setRegisterError>\r\n    | ReturnType<typeof setRegisterMessage>\r\n","import s from \"./RegistrationForm.module.scss\";\r\nimport Title from \"../../../assets/components/common/title/Title.jsx\";\r\nimport Subtitle from \"../../../assets/components/common/subtitle/Subtitle.jsx\";\r\nimport Button from \"../../../assets/components/common/button/Button.jsx\";\r\nimport { Input } from \"../../../assets/components/common/input/Input\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppStoreType } from \"../../../n1-main/m2-bll/store\";\r\nimport { createNewUser, RequestStatusType } from \"../../../n1-main/m2-bll/registrationReducer\";\r\nimport {Navigate, NavLink} from \"react-router-dom\";\r\nimport React, { ChangeEvent, useState } from \"react\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\n\r\n// данные для input email\r\nconst inputData1 = {\r\n   id: \"email\",\r\n   type: \"email\",\r\n   name: \"email\",\r\n   for: \"email\",\r\n   label: \"Email\",\r\n   style: {\r\n      display: \"none\"\r\n   }\r\n}\r\n\r\n// данные для input password\r\nconst inputData2 = {\r\n   id: \"password\",\r\n   type: \"password\",\r\n   name: \"password\",\r\n   for: \"password\",\r\n   label: \"Password\",\r\n   style: {\r\n      display: \"inlineBlock\"\r\n   }\r\n}\r\n\r\n// данные для input confirm password\r\nconst inputData3 = {\r\n   id: \"checkPassword\",\r\n   type: \"password\",\r\n   name: \"checkPassword\",\r\n   for: \"checkPassword\",\r\n   label: \"Confirm password\",\r\n   style: {\r\n      display: \"inlineBlock\"\r\n   }\r\n}\r\n\r\n// стилизация кнопок\r\nconst styleButton1 = {\r\n   backgroundColor: \"#D7D8EF\",\r\n   color: \"#21268F\",\r\n   width: \"124px\",\r\n   boxShadow: \"none\"\r\n}\r\n\r\nconst styleButton2 = {\r\n   width: \"187px\"\r\n}\r\n\r\nexport default function RegistrationForm() {\r\n   const schemeCreator = () => {\r\n      return yup.object().shape({\r\n         email: yup.string().email('Invalid email').required('Required').trim(),\r\n         password: yup.string()\r\n            .matches(/^[a-zA-Z0-9]+/, 'Password can only contain Latin letters and numbers.')\r\n            .required('Required')\r\n            .min(7, 'Password must be more than 7 characters...'),\r\n         checkPassword: yup.string()\r\n            .required('Required'),\r\n      })\r\n   }\r\n\r\n   const dispatch = useDispatch()\r\n   const [errorSelf, setErrorSelf] = useState<string | null>(null)\r\n   const [showPas, setShowPass] = useState(false)\r\n\r\n   const error = useSelector<AppStoreType, string | null>(state => state.registration.error)\r\n   const message = useSelector<AppStoreType, string | null>(state => state.registration.message)\r\n   const status = useSelector<AppStoreType, RequestStatusType>(state => state.registration.status)\r\n\r\n   const createNewUserHandler = (email: string, password: string) => {\r\n      dispatch(createNewUser(email, password))\r\n   }\r\n   const showPasswordHandler = (value: ChangeEvent<HTMLInputElement>) => {\r\n      setShowPass(value.currentTarget.checked)\r\n   }\r\n   const onKeypressHandler = () => {\r\n      setErrorSelf(null)\r\n   }\r\n\r\n   const formik = useFormik({\r\n      initialValues: {\r\n         email: '',\r\n         password: '',\r\n         checkPassword: '',\r\n      },\r\n      onSubmit: (values) => {\r\n         if (values.email.trim() !== \"\" && values.password === values.checkPassword) {\r\n            formik.resetForm()\r\n            createNewUserHandler(values.email, values.password)\r\n         } else {\r\n            if (values.password !== values.checkPassword) {\r\n               setErrorSelf('password dont equal')\r\n               setTimeout(() => {\r\n                  setErrorSelf(null)\r\n               }, 2000)\r\n            }\r\n         }\r\n      },\r\n      validationSchema: schemeCreator()\r\n   });\r\n\r\n   if (status === 'register_success') {\r\n      return <Navigate to={\"/login\"} />\r\n   }\r\n\r\n   return (\r\n      <form onSubmit={formik.handleSubmit}>\r\n         {status === 'loading'\r\n            ? <h1>...loading</h1>\r\n            : <div>\r\n               <div className={s.contentWrap}>\r\n                  <Title />\r\n                  <Subtitle subtitle=\"Sign Up\" />\r\n                  <span style={{ color: 'red' }}>{error && error}</span>\r\n                  <span style={{ color: 'green' }}>{message && message}</span>\r\n                  <Input\r\n                     inputData={inputData1}\r\n                     {...formik.getFieldProps('email')}\r\n                  />\r\n                  <span className={s.error}>{formik.touched.email ? formik.errors.email : ''}</span>\r\n                  <Input\r\n                     inputData={inputData2}\r\n                     {...formik.getFieldProps('password')}\r\n                  />\r\n                  <span className={s.error}>{formik.touched.password && formik.errors.password ? formik.errors.password : ''}</span>\r\n                  <Input\r\n                     inputData={inputData3}\r\n                     {...formik.getFieldProps('checkPassword')}\r\n                  />\r\n                  <span className={s.error}>{formik.touched.checkPassword && formik.errors.checkPassword ? formik.errors.checkPassword : ''}</span>\r\n                  <div className={s.block}>\r\n                     <Button label=\"Cancel\" style={styleButton1} />\r\n                     <Button type=\"submit\" label=\"Register\" style={styleButton2} />\r\n                  </div>\r\n                  <NavLink className={s.link} to=\"/login\">Login</NavLink>\r\n               </div>\r\n            </div>\r\n         }\r\n      </form >\r\n   );\r\n}\r\n\r\n\r\n","const initialState: InitialStateType = {\r\n    cardPacks: {\r\n        totalCount: 10, // for pagination\r\n        pageCount: 10, // for pagination\r\n        page: 1, // for pagination\r\n        max: 200, // for range slider\r\n        min: 0, // for range slider\r\n        packName: '', // for search\r\n        sortPacks: null, // for sorting\r\n    },\r\n    cards: {\r\n        totalCount: 10,\r\n        pageCount: 10,\r\n        page: 1,\r\n        selectedCardId: '',\r\n        questionText: '',\r\n        sortCards: null\r\n    }\r\n}\r\n\r\nexport const findAndPaginationReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        // for CardPacks\r\n        case \"FIND-AND-PAGINATION/SET-CARDS-PACKS-COUNT\":\r\n            return {...state, cardPacks: {...state.cardPacks, max: action.max, min: action.min}}\r\n        case \"FIND-AND-PAGINATION/SET-CARD-PACKS-CURRENT-PAGE\":\r\n        case \"FIND-AND-PAGINATION/SET-CARD-PACKS-PAGE-COUNT\":\r\n        case \"FIND-AND-PAGINATION/SET-CARD-PACKS-TOTAL-COUNT\":\r\n        case \"FIND-AND-PAGINATION/SET-SEARCH-PACK-NAME\":\r\n        case \"FIND-AND-PAGINATION/SET-SORT-PACKS\":\r\n            return {...state, cardPacks: {...state.cardPacks, ...action.payload}}\r\n\r\n        // for Cards\r\n        case \"FIND-AND-PAGINATION/SET-CARDS-TOTAL-COUNT\":\r\n        case \"FIND-AND-PAGINATION/SET-CARDS-PAGE-COUNT\":\r\n        case 'FIND-AND-PAGINATION/SET-CARDS-CURRENT-PAGE':\r\n        case 'FIND-AND-PAGINATION/SET-SEARCH-QUESTION':\r\n        case \"FIND-AND-PAGINATION/SET-SELECTED-CARD-ID\":\r\n        case \"FIND-AND-PAGINATION/SET-SORT-CARDS\":\r\n            return {...state, cards: {...state.cards, ...action.payload}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype InitialStateType = {\r\n    cardPacks: {\r\n        totalCount: number\r\n        pageCount: number\r\n        page: number\r\n        min: number\r\n        max: number\r\n        packName: string\r\n        sortPacks: SortPackType\r\n    }\r\n    cards: {\r\n        totalCount: number\r\n        pageCount: number\r\n        page: number\r\n        selectedCardId: string\r\n        questionText: string\r\n        sortCards: SortCardsType\r\n    }\r\n}\r\n\r\n//AC for CardPacks:\r\nexport const setCardPacksTotalCountAC = (totalCount: number) =>\r\n    ({type: 'FIND-AND-PAGINATION/SET-CARD-PACKS-TOTAL-COUNT', payload: {totalCount}} as const)\r\nexport const setCardPacksPageCountAC = (pageCount: number) =>\r\n    ({type: 'FIND-AND-PAGINATION/SET-CARD-PACKS-PAGE-COUNT', payload: {pageCount}} as const)\r\nexport const setCardPacksCurrentPageAC = (page: number) =>\r\n    ({type: 'FIND-AND-PAGINATION/SET-CARD-PACKS-CURRENT-PAGE', payload: {page}} as const)\r\nexport const setCardsPacksCountAC = (numbers: Array<number> ) =>  // min and max cardsPacks\r\n    ({type: 'FIND-AND-PAGINATION/SET-CARDS-PACKS-COUNT', min: numbers[0], max: numbers[1]} as const)\r\nexport const setSearchPackNameAC = (packName: string) =>\r\n    ({type: 'FIND-AND-PAGINATION/SET-SEARCH-PACK-NAME', payload: {packName}} as const)\r\nexport const setSortPacksAC = (sortPacks: SortPackType) =>\r\n    ({type: 'FIND-AND-PAGINATION/SET-SORT-PACKS', payload: {sortPacks}} as const)\r\n\r\n//AC for Cards:\r\nexport const setCardsTotalCountAC = (totalCount: number) =>\r\n    ({type: 'FIND-AND-PAGINATION/SET-CARDS-TOTAL-COUNT', payload: {totalCount}} as const)\r\nexport const setCardsPageCountAC = (pageCount: number) =>\r\n    ({type: 'FIND-AND-PAGINATION/SET-CARDS-PAGE-COUNT', payload: {pageCount}} as const)\r\nexport const setCardsCurrentPageAC = (page: number) =>\r\n    ({type: 'FIND-AND-PAGINATION/SET-CARDS-CURRENT-PAGE', payload: {page}} as const)\r\nexport const setSearchQuestionAC = (questionText: string) =>\r\n    ({type: 'FIND-AND-PAGINATION/SET-SEARCH-QUESTION', payload: {questionText}} as const)\r\nexport const setSelectedCardIdAC = (selectedCardId: string) =>\r\n    ({type: 'FIND-AND-PAGINATION/SET-SELECTED-CARD-ID', payload: {selectedCardId}} as const)\r\nexport const setSortCardsAC = (sortCards: SortCardsType) =>\r\n    ({type: 'FIND-AND-PAGINATION/SET-SORT-CARDS', payload: {sortCards}} as const)\r\n\r\nexport type SetCardPacksTotalCountType = ReturnType<typeof setCardPacksTotalCountAC>\r\nexport type SetCardsTotalCountType = ReturnType<typeof setCardsTotalCountAC>\r\nexport type SetSelectedCardIdType = ReturnType<typeof setSelectedCardIdAC>\r\n\r\ntype ActionType =\r\n    | SetCardPacksTotalCountType\r\n    | ReturnType<typeof setCardPacksPageCountAC>\r\n    | ReturnType<typeof setCardPacksCurrentPageAC>\r\n    | ReturnType<typeof setCardsPacksCountAC>\r\n    | SetCardsTotalCountType\r\n    | ReturnType<typeof setCardsPageCountAC>\r\n    | ReturnType<typeof setCardsCurrentPageAC>\r\n    | ReturnType<typeof setSearchPackNameAC>\r\n    | ReturnType<typeof setSortPacksAC>\r\n    | ReturnType<typeof setSearchQuestionAC>\r\n    | SetSelectedCardIdType\r\n    | ReturnType<typeof setSortCardsAC>\r\n\r\nexport type SortPackType = '0name' | '1name' | '0cardsCount' | '1cardsCount' | '0updated'| '1updated' | null\r\nexport type SortCardsType = '0answer' | '1answer' | '0question' | '1question' | '0grade' | '1grade' | '0updated' | '1updated' | null\r\n","import {Dispatch} from \"redux\";\r\nimport {packsAPI} from \"./api/api\";\r\nimport {AppStoreType} from \"./store\";\r\nimport {setCardPacksTotalCountAC, SetCardPacksTotalCountType} from \"./findAndPaginationReducer\";\r\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\n\r\nexport const initialState: packsStateType = {\r\n    cardPacks: [],\r\n    pack_id: '',\r\n}\r\n\r\nexport const packsReducer = (state = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case 'pack/GET-CARD-PACKS':\r\n            return {...state, cardPacks: action.cardPacks}\r\n        case 'pack/GET-USER-ID':\r\n            return {...state, pack_id: action.pack_id}\r\n        case \"pack/ADD-CARD-PACKS\":\r\n            return {...state, name: action.name}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const getPacksAC = (cardPacks: packType[]) => ({type: \"pack/GET-CARD-PACKS\", cardPacks} as const)\r\nexport const getUserIdAC = (pack_id: string) => ({type: \"pack/GET-USER-ID\", pack_id} as const)\r\nexport const addPacksAC = (name: string) => ({type: \"pack/ADD-CARD-PACKS\", name} as const)\r\n\r\nexport const getPacksTC = (): ThunkType => (dispatch: Dispatch<ActionType>, getState: () => AppStoreType) => {\r\n    const page = getState().findAndPagination.cardPacks.page\r\n    const pageCount = getState().findAndPagination.cardPacks.pageCount.toString()\r\n    const min = getState().findAndPagination.cardPacks.min\r\n    const max = getState().findAndPagination.cardPacks.max\r\n    const packName = getState().findAndPagination.cardPacks.packName\r\n    const sortPacks = getState().findAndPagination.cardPacks.sortPacks\r\n\r\n    packsAPI.getPacks(pageCount, page, min, max, packName, sortPacks)\r\n        .then((res) => {\r\n            if (res.data.cardPacks) {\r\n                dispatch(getPacksAC(res.data.cardPacks))\r\n                dispatch(setCardPacksTotalCountAC(res.data.cardPacksTotalCount))\r\n            }\r\n        })\r\n}\r\n\r\n\r\nexport const addPacksTC = (): ThunkType => (dispatch:ThunkDispatch<AppStoreType, unknown, ActionType>) => {\r\n    packsAPI.addPacks(false)\r\n        .then((res) => {\r\n            dispatch(addPacksAC(\"New Pack333\"))\r\n            dispatch(getPacksTC())\r\n        })\r\n}\r\n\r\ntype ThunkType = ThunkAction<void, AppStoreType, unknown, ActionType>\r\n\r\nexport type packType = {\r\n    _id: string\r\n    user_id: string\r\n    user_name: string\r\n    private: boolean\r\n    name: string\r\n    path: string\r\n    grade: number\r\n    cardsCount: number\r\n    type: string\r\n    rating: number\r\n    created: string\r\n    updated: string\r\n}\r\n\r\nexport type packsStateType = {\r\n    cardPacks: packType[]\r\n    pack_id: string\r\n}\r\n\r\ntype ActionType =\r\n    | ReturnType<typeof getPacksAC>\r\n    | ReturnType<typeof getUserIdAC>\r\n    | SetCardPacksTotalCountType\r\n    | ReturnType<typeof addPacksAC>","import React, {useEffect, useState} from 'react';\r\nimport s from './Paginations.module.scss'\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport SuperSelect from \"../../../n1-main/m1-ui/common/c5-SuperSelect/SuperSelect\";\r\nimport selectStyle from '../../../n1-main/m1-ui/common/c5-SuperSelect/SuperSelect.module.scss'\r\nimport {useSelector} from \"react-redux\";\r\nimport {getPacksTC} from \"../../../n1-main/m2-bll/packsReducer\";\r\n\r\nexport const Pagination: React.FC<PropsType> = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.cardPacksTotalCount / props.pageCount); // count of ALL pages, before the paginator\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    const portionSize = 10; // Hom much pagination buttons to how\r\n    const portionCount = Math.ceil(pagesCount / portionSize) // how much total pagination buttons\r\n\r\n    const [portion, setPortion] = useState(1)\r\n    const leftNumber = (portion - 1) * portionSize + 1\r\n    const rightNumber = portion * portionSize\r\n\r\n    const onFirstPageClick = () => {\r\n        props.currentPageHandler(1)\r\n        setPortion(1)\r\n    }\r\n\r\n    const onLastPageClick = () => {\r\n        props.currentPageHandler(pagesCount)\r\n        setPortion(portionCount)\r\n    }\r\n\r\n    const arrowClicked = false;\r\n\r\n    useEffect(() => {\r\n        props.currentPageHandler(leftNumber)\r\n    }, [arrowClicked])\r\n\r\n    return (\r\n        <div className={s.pagination}>\r\n            <SuperSelect\r\n                options={props.superSelect.arr}\r\n                value={props.superSelect.valueForSsSr}\r\n                onChangeOption={props.superSelect.onChangeOption}\r\n                onClick={props.onClickSelectHandler}\r\n                className={`${selectStyle.select} ${s.superSelect}`}\r\n            />\r\n            {portion > 1 &&\r\n              <>\r\n                <SuperButton className={s.btn} onClick={() => {\r\n                    props.currentPageHandler((portionSize * (portion - 2)) + 1)\r\n                    setPortion(portion - 1)\r\n                }}>&lt;</SuperButton>\r\n                <div className={s.item} onClick={onFirstPageClick}>1</div> {/*first page click*/}\r\n                <div className={s.points}>...</div>\r\n              </>}\r\n\r\n            {pages\r\n                .filter((p) => p ? p >= leftNumber && p <= rightNumber : '')\r\n                .map(q => {\r\n                    return <div\r\n                        key={q}\r\n                        className={`${s.item} ${props.page === q ? s.select : s.item}`}\r\n                        onClick={() => {\r\n                            props.currentPageHandler(q)\r\n                        }}>\r\n                        {q}\r\n                    </div>\r\n                })}\r\n            {portion !== portionCount &&\r\n              <>\r\n                <div className={s.points}>...</div>\r\n                <div className={s.item} onClick={onLastPageClick}>{pagesCount}</div> {/*last page click*/}\r\n              </>\r\n            }\r\n            {portionCount > portion &&\r\n              <SuperButton className={s.btn} onClick={() => {\r\n                  setPortion( portion + 1)\r\n                  props.currentPageHandler(portionSize * portion + 1)\r\n              }}>&gt;</SuperButton>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\ntype PropsType = {\r\n    cardPacksTotalCount: number\r\n    pageCount: number\r\n    onClickSelectHandler: () => void\r\n    superSelect: {\r\n        valueForSsSr: string\r\n        onChangeOption: React.Dispatch<React.SetStateAction<string>>\r\n        arr: Array<string>\r\n    }\r\n    page: number\r\n    currentPageHandler(page: number): void\r\n}","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {setCardPacksCurrentPageAC, setCardPacksPageCountAC} from \"../../../n1-main/m2-bll/findAndPaginationReducer\";\r\nimport {Pagination} from \"./Pagination\";\r\n\r\nexport const PaginationPacksContainer = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    // count of elements at one page\r\n    let pageCount = useSelector<AppStoreType, number>(state => state.findAndPagination.cardPacks.pageCount)\r\n    // count of Card Packs\r\n    let cardPacksTotalCount = useSelector<AppStoreType, number>(state => state.findAndPagination.cardPacks.totalCount)\r\n    // selected page\r\n    let page = useSelector<AppStoreType, number>(state => state.findAndPagination.cardPacks.page)\r\n\r\n    const currentPageHandler = (page: number) => {\r\n        dispatch(setCardPacksCurrentPageAC(page))\r\n    }\r\n\r\n    const arr = ['5', '10', '20', '50', '100'] // for SuperSelect\r\n\r\n    const [valueForSsSr, onChangeOption] = useState(arr[1]) // for SuperSelect\r\n\r\n    const onClickSelectHandler = () => {\r\n        dispatch(setCardPacksPageCountAC(+valueForSsSr))\r\n    }\r\n\r\n    return <Pagination\r\n        cardPacksTotalCount={cardPacksTotalCount}\r\n        pageCount={pageCount}\r\n        onClickSelectHandler={onClickSelectHandler}\r\n        superSelect={{\r\n            valueForSsSr,\r\n            onChangeOption,\r\n            arr\r\n        }}\r\n        page = {page}\r\n        currentPageHandler={currentPageHandler}\r\n    />\r\n}","import React from 'react';\r\nimport SuperButton from \"../../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport s from \"./Sort.module.scss\";\r\n\r\nexport function Sort (props: PropsType) {\r\n    return <div className={s.container}>\r\n        <SuperButton className={s.btn} onClick={props.upperSortHandler}>^</SuperButton>\r\n        <SuperButton className={s.btn} onClick={props.lowerSortHandler}>v</SuperButton>\r\n    </div>\r\n}\r\n\r\ntype PropsType = {\r\n    upperSortHandler: () => void\r\n    lowerSortHandler: () => void\r\n}\r\n\r\n","import React from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setSortPacksAC, SortPackType} from \"../../../../n1-main/m2-bll/findAndPaginationReducer\";\r\nimport {Sort} from \"../SortMain/Sort\";\r\n\r\nexport const SortCardPacksContainer: React.FC<PropsType> = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const upperSortHandler = () => {\r\n        dispatch(setSortPacksAC(props.upperSort))\r\n    }\r\n    const lowerSortHandler = () => {\r\n        dispatch(setSortPacksAC(props.lowerCount))\r\n\r\n    }\r\n\r\n    return <Sort upperSortHandler={upperSortHandler} lowerSortHandler={lowerSortHandler}/>\r\n}\r\n\r\ntype PropsType = {\r\n    upperSort: SortPackType\r\n    lowerCount: SortPackType\r\n}\r\n","import React from 'react';\r\nimport {Slider, Typography} from \"@mui/material\";\r\nimport s from './RangeSlider.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../n1-main/m2-bll/store\";\r\nimport {setCardsPacksCountAC} from \"../../../../n1-main/m2-bll/findAndPaginationReducer\";\r\n\r\nexport const RangeSlider = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleChange = (event: Event, newValue: number | number[]) => {\r\n        dispatch(setCardsPacksCountAC(newValue as number[]))\r\n    };\r\n\r\n    const min = useSelector<AppStoreType, number>(state => state.findAndPagination.cardPacks.min)\r\n    const max = useSelector<AppStoreType, number>(state => state.findAndPagination.cardPacks.max)\r\n\r\n    return <div className={s.rangeSlider}>\r\n        <div>\r\n            How much Cards in Pack to show:\r\n        </div>\r\n        <Slider\r\n            getAriaLabel={() => 'Temperature range'}\r\n            value={[min,max]}\r\n            onChange={handleChange}\r\n            valueLabelDisplay=\"on\"\r\n            className={s.slider}\r\n            min={0}\r\n            max={200}\r\n        />\r\n    </div>\r\n}","import React, {ChangeEvent} from 'react';\r\nimport SuperInputText from \"../../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport s from './Search.module.scss'\r\nimport SuperButton from \"../../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {RangeSlider} from \"../RangeSlider/RangeSlider\";\r\n\r\nexport const Search = (props: PropsType) => {\r\n\r\n    return (\r\n        <div className={s.search}>\r\n            <SuperInputText\r\n                value={props.inputValue}\r\n                onChange={props.setInputValueHandler}\r\n                placeholder={props.inputPlaceholder}\r\n                className={s.input}\r\n            />\r\n            {props.showRange && <RangeSlider/>}\r\n            <SuperButton onClick={props.buttonFindHandler} className={s.btn}>{props.buttonText}</SuperButton>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype PropsType = {\r\n    inputValue: string\r\n    inputPlaceholder: string\r\n    setInputValueHandler: (e: ChangeEvent<HTMLInputElement>) => void\r\n    buttonFindHandler: () => void\r\n    buttonText: string\r\n    showRange: boolean\r\n}\r\n","import React, {ChangeEvent} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../n1-main/m2-bll/store\";\r\nimport {setSearchPackNameAC} from \"../../../../n1-main/m2-bll/findAndPaginationReducer\";\r\nimport {getPacksTC} from \"../../../../n1-main/m2-bll/packsReducer\";\r\nimport {Search} from \"../SearchMain/Search\";\r\n\r\nexport const SearchCardsPacksContainer = () => {\r\n    const dispatch = useDispatch()\r\n    const value = useSelector<AppStoreType, string>(state => state.findAndPagination.cardPacks.packName)\r\n\r\n    const setInputValueHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setSearchPackNameAC(e.currentTarget.value))\r\n    }\r\n\r\n    const buttonFindHandler = () => {\r\n        dispatch(getPacksTC())\r\n    }\r\n\r\n    return <Search\r\n        inputValue={value}\r\n        inputPlaceholder={'Enter Cards Pack name'}\r\n        setInputValueHandler={setInputValueHandler}\r\n        buttonFindHandler={buttonFindHandler}\r\n        buttonText={'Find Cards Packs'}\r\n        showRange={true}\r\n    />\r\n}","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../n1-main/m2-bll/store\";\r\nimport {addPacksTC, getPacksTC, packsStateType} from \"../../n1-main/m2-bll/packsReducer\";\r\nimport * as React from 'react';\r\nimport {useEffect} from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PaginationPacksContainer} from \"../f2-table/Pagination/PaginationPacksContainer\";\r\nimport {SortCardPacksContainer} from \"../f2-table/Sort/SortCardPacksContainer/SortCardPacksContainer\";\r\nimport s from './Pack.module.scss'\r\nimport {SearchCardsPacksContainer} from \"../f2-table/Search/SearchCardsPacksContainer/SearchCardsPacksContainer\";\r\nimport {SortPackType} from \"../../n1-main/m2-bll/findAndPaginationReducer\";\r\n\r\nexport const Packs = () => {\r\n    const {cardPacks} = useSelector<AppStoreType, packsStateType>(state => state.packs)\r\n    const pack_id = useSelector<AppStoreType, string>(state => state.packs.pack_id)\r\n    const pageCount = useSelector<AppStoreType, number>(state => state.findAndPagination.cardPacks.pageCount).toString()\r\n    const page = useSelector<AppStoreType, number>(state => state.findAndPagination.cardPacks.page)\r\n    const sortPacks = useSelector<AppStoreType, SortPackType>(state => state.findAndPagination.cardPacks.sortPacks)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getPacksTC())\r\n    }, [dispatch, pageCount, page, sortPacks])\r\n\r\n    // function createData(\r\n    //     name: string,\r\n    //     cardsCount: number,\r\n    //     updated: string,\r\n    // ) {\r\n    //     return {name, cardsCount, updated};\r\n    // }\r\n\r\n        const addPacksHandler = ()=>{\r\n        dispatch(addPacksTC())\r\n    }\r\n\r\n    return (\r\n        <TableContainer className={s.table} component={Paper}>\r\n            <PaginationPacksContainer/>\r\n            <SearchCardsPacksContainer />\r\n            <Table sx={{minWidth: 650}} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>\r\n                            <div className={s.cell}>Name<SortCardPacksContainer upperSort={'0name'}\r\n                                                                                lowerCount={'1name'}/></div>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\" className={s.cell}>\r\n                            <div className={s.cell}>Cards Count<SortCardPacksContainer upperSort={'0cardsCount'}\r\n                                                                                       lowerCount={'1cardsCount'}/>\r\n                            </div>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                            <div className={s.cell}>Updated<SortCardPacksContainer upperSort={'0updated'}\r\n                                                                                   lowerCount={'1updated'}/></div>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">url</TableCell>\r\n                        <TableCell align='center'><button onClick={addPacksHandler}>add</button></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {cardPacks.map((mp) => (\r\n                        <TableRow\r\n                            key={mp._id}\r\n                            sx={{'&:last-child td, &:last-child th': {border: 0}}}>\r\n                            <TableCell component=\"th\" scope=\"row\">{mp.name}\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">{mp.cardsCount}</TableCell>\r\n                            <TableCell align=\"center\">{mp.updated}</TableCell>\r\n                            <TableCell align=\"center\"></TableCell>\r\n                            <TableCell align='center'><button>del</button></TableCell>\r\n                            <TableCell align='center'><button>update</button></TableCell>\r\n                            <TableCell align=\"center\"> <NavLink to={`/cards/${mp._id}`}>cards</NavLink></TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n\r\n// todo: cards link is not user friendly. Maybe good idea to do it more visible or \"click on card pack show it\".\r\n","import {Dispatch} from \"redux\";\r\nimport {cardsAPI} from \"./api/api\";\r\nimport {AppStoreType} from \"./store\";\r\nimport {\r\n    setCardsTotalCountAC,\r\n    SetCardsTotalCountType,\r\n    setSelectedCardIdAC,\r\n    SetSelectedCardIdType\r\n} from \"./findAndPaginationReducer\";\r\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\n\r\nexport const initialState:cardType[] = []\r\n\r\nexport const cardsReducer = (state = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case 'cards/GET-CARDS':\r\n            return [...action.cards]\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const getCardsAC = (cards: cardType[]) => ({type: \"cards/GET-CARDS\", cards} as const)\r\n\r\nexport const getCardsTC = (id:string):ThunkType => (dispatch: Dispatch<ActionType>, getState: () => AppStoreType) => {\r\n    const page = getState().findAndPagination.cards.page\r\n    const pageCount = getState().findAndPagination.cards.pageCount.toString()\r\n    const cardQuestion = getState().findAndPagination.cards.questionText\r\n    const sortCards = getState().findAndPagination.cards.sortCards\r\n\r\n    cardsAPI.getCards(id, pageCount, page, cardQuestion, sortCards)\r\n        .then((res) => {\r\n            if (res.data.cards) {\r\n                dispatch(getCardsAC(res.data.cards))\r\n                dispatch(setCardsTotalCountAC(res.data.cardsTotalCount))\r\n                dispatch(setSelectedCardIdAC(id))\r\n            }\r\n        })\r\n}\r\nexport const addCardsTC = (id:string):ThunkType => (dispatch:ThunkDispatch<AppStoreType, unknown, ActionType>) => {\r\n    cardsAPI.addCards(id)\r\n        .then((res) => {\r\n            dispatch(getCardsTC(id))\r\n        })\r\n}\r\n\r\ntype ActionType = ReturnType<typeof getCardsAC> | SetCardsTotalCountType | SetSelectedCardIdType\r\ntype ThunkType = ThunkAction<void, AppStoreType, unknown, ActionType>\r\n\r\nexport type cardType = {\r\n    _id: string\r\n    cardsPack_id: string\r\n    user_id: string\r\n    answer: string\r\n    question: string\r\n    grade: number\r\n    shots: number\r\n    comments: string\r\n    type: string\r\n    rating: number\r\n    more_id: string\r\n    created: string\r\n    updated: string\r\n}\r\n\r\n","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {setCardsPageCountAC, setCardsCurrentPageAC} from \"../../../n1-main/m2-bll/findAndPaginationReducer\";\r\nimport {Pagination} from \"./Pagination\";\r\n\r\nexport const PaginationCardsContainer = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    // count of elements at one page\r\n    let pageCount = useSelector<AppStoreType, number>(state => state.findAndPagination.cards.pageCount)\r\n    // count of Cards\r\n    let cardPacksTotalCount = useSelector<AppStoreType, number>(state => state.findAndPagination.cards.totalCount)\r\n    // selected page\r\n    let page = useSelector<AppStoreType, number>(state => state.findAndPagination.cards.page)\r\n\r\n    const currentPageHandler = (page: number) => {\r\n        dispatch(setCardsCurrentPageAC(page))\r\n    }\r\n\r\n    const arr = ['5', '10', '20', '50', '100'] // for SuperSelect\r\n\r\n    const [valueForSsSr, onChangeOption] = useState(arr[1]) // for SuperSelect\r\n\r\n    const onClickSelectHandler = () => {\r\n        dispatch(setCardsPageCountAC(+valueForSsSr))\r\n    }\r\n\r\n    return <Pagination\r\n        cardPacksTotalCount={cardPacksTotalCount}\r\n        pageCount={pageCount}\r\n        onClickSelectHandler={onClickSelectHandler}\r\n        superSelect={{\r\n            valueForSsSr,\r\n            onChangeOption,\r\n            arr\r\n        }}\r\n        page = {page}\r\n        currentPageHandler={currentPageHandler}\r\n    />\r\n}","import React, {ChangeEvent} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../n1-main/m2-bll/store\";\r\nimport {setSearchQuestionAC} from \"../../../../n1-main/m2-bll/findAndPaginationReducer\";\r\nimport {Search} from \"../SearchMain/Search\";\r\nimport {getCardsTC} from \"../../../../n1-main/m2-bll/cardsReducer\";\r\n\r\nexport const SearchCardsContainer = () => {\r\n    const dispatch = useDispatch()\r\n    const value = useSelector<AppStoreType, string>(state => state.findAndPagination.cards.questionText)\r\n    const cardId = useSelector<AppStoreType, string>(state => state.findAndPagination.cards.selectedCardId)\r\n\r\n    const setInputValueHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setSearchQuestionAC(e.currentTarget.value))\r\n    }\r\n\r\n    const buttonFindHandler = () => {\r\n        dispatch(getCardsTC(cardId))\r\n    }\r\n\r\n    return <Search\r\n        inputValue={value}\r\n        inputPlaceholder={'Enter question text'}\r\n        setInputValueHandler={setInputValueHandler}\r\n        buttonFindHandler={buttonFindHandler}\r\n        buttonText={'Find Cards'}\r\n        showRange={false}\r\n    />\r\n}","import React from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {\r\n    setSortCardsAC,\r\n    setSortPacksAC,\r\n    SortCardsType,\r\n    SortPackType\r\n} from \"../../../../n1-main/m2-bll/findAndPaginationReducer\";\r\nimport {Sort} from \"../SortMain/Sort\";\r\n\r\nexport const SortCardsContainer: React.FC<PropsType> = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const upperSortHandler = () => {\r\n        dispatch(setSortCardsAC(props.upperSort))\r\n    }\r\n    const lowerSortHandler = () => {\r\n        dispatch(setSortCardsAC(props.lowerCount))\r\n\r\n    }\r\n\r\n    return <Sort upperSortHandler={upperSortHandler} lowerSortHandler={lowerSortHandler}/>\r\n}\r\n\r\ntype PropsType = {\r\n    upperSort: SortCardsType\r\n    lowerCount: SortCardsType\r\n}\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../n1-main/m2-bll/store\";\r\nimport * as React from 'react';\r\nimport {useEffect} from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport {addCardsTC, cardType, getCardsTC} from \"../../n1-main/m2-bll/cardsReducer\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {PaginationCardsContainer} from \"../f2-table/Pagination/PaginationCardsContainer\";\r\nimport {SearchCardsContainer} from \"../f2-table/Search/SeachCardsContainer/SeachCardsContainer\";\r\nimport s from './Cards.module.scss'\r\nimport {SortCardPacksContainer} from \"../f2-table/Sort/SortCardPacksContainer/SortCardPacksContainer\";\r\nimport {SortCardsContainer} from \"../f2-table/Sort/SortCardsContainer/SortCardsContainer\";\r\nimport {SortCardsType} from \"../../n1-main/m2-bll/findAndPaginationReducer\";\r\n\r\nexport const Cards = () => {\r\n\r\n    let {id} = useParams()\r\n\r\n    const cards = useSelector<AppStoreType, cardType[]>(state => state.cards)\r\n    const pageCount = useSelector<AppStoreType, number>(state => state.findAndPagination.cards.pageCount).toString()\r\n    const page = useSelector<AppStoreType, number>(state => state.findAndPagination.cards.page)\r\n    const sortCards = useSelector<AppStoreType, SortCardsType>(state => state.findAndPagination.cards.sortCards)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (id)\r\n        dispatch(getCardsTC(id))\r\n    }, [dispatch, id, pageCount, page, sortCards])\r\n\r\n    const addCardHandler = ()=>{\r\n        if (id) dispatch(addCardsTC(id))\r\n    }\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <PaginationCardsContainer />\r\n            <SearchCardsContainer />\r\n            <Table sx={{minWidth: 650}} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>\r\n                            <div className={s.cell}>Question<SortCardsContainer upperSort={'0question'}\r\n                                                                                lowerCount={'1question'}/>\r\n                            </div>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                            <div className={s.cell}>answer<SortCardsContainer upperSort={'0answer'}\r\n                                                                              lowerCount={'1answer'}/>\r\n                            </div>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                            <div className={s.cell}>Grade<SortCardsContainer upperSort={'0grade'}\r\n                                                                             lowerCount={'1grade'}/>\r\n                            </div>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                            <div className={s.cell}>updated<SortCardsContainer upperSort={'0updated'}\r\n                                                                             lowerCount={'1updated'}/>\r\n                            </div>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">url</TableCell>\r\n                        <TableCell align=\"center\"><button onClick={addCardHandler}>add</button></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {cards.map((card: cardType) => (\r\n                        <TableRow\r\n                            key={card.cardsPack_id}\r\n                            sx={{'&:last-child td, &:last-child th': {border: 0}}}\r\n                        >\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {card.question}\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">{card.answer}</TableCell>\r\n                            <TableCell align=\"center\">{card.grade}</TableCell>\r\n                            <TableCell align=\"center\">{card.updated}</TableCell>\r\n\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/photo-profile.ae88cd5b.png\";","export default __webpack_public_path__ + \"static/media/photo-icon.c128641c.svg\";","import s from \"./ProfileForm.module.scss\";\r\nimport Subtitle from \"../../../assets/components/common/subtitle/Subtitle.jsx\";\r\nimport Button from \"../../../assets/components/common/button/Button.jsx\";\r\nimport { Input } from \"../../../assets/components/common/input/Input\";\r\n\r\nimport img from \"../../../assets/img/photo-profile.png\";\r\nimport icon from \"../../../assets/img/photo-icon.svg\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {AuthResponseType} from \"../../../n1-main/m2-bll/api/api\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\n// данные для input nickname\r\nconst inputData1 = {\r\n   id: \"nickname\",\r\n   type: \"text\",\r\n   name: \"nickname\",\r\n   for: \"nickname\",\r\n   label: \"Nickname\",\r\n   style: {\r\n      display: \"none\"\r\n   }\r\n}\r\n\r\n// данные для input email\r\nconst inputData2 = {\r\n   id: \"email\",\r\n   type: \"email\",\r\n   name: \"email\",\r\n   for: \"email\",\r\n   label: \"Email\",\r\n   style: {\r\n      display: \"none\"\r\n   }\r\n}\r\n\r\n// данные для input publicCardPacksCount\r\nconst inputData3 = {\r\n   id: \"publicCardPacksCount\",\r\n   type: \"text\",\r\n   name: \"publicCardPacksCount\",\r\n   for: \"publicCardPacksCount\",\r\n   label: \"Cards packs count\",\r\n   style: {\r\n      display: \"none\"\r\n   }\r\n}\r\n\r\n\r\n// стилизация кнопок\r\nconst styleButton1 = {\r\n   backgroundColor: \"#D7D8EF\",\r\n   color: \"#21268F\",\r\n   width: \"124px\",\r\n   boxShadow: \"none\"\r\n}\r\n\r\nconst styleButton2 = {\r\n   width: \"124px\"\r\n}\r\n\r\nexport default function ProfileForm() {\r\n   const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.auth.isLoggedIn)\r\n   const { name, email, publicCardPacksCount} = useSelector<AppStoreType, AuthResponseType>(state => state.profile)\r\n\r\n   if (!isLoggedIn) {\r\n      return <Navigate to=\"/login\"/>\r\n   }\r\n\r\n   return (\r\n      <form action=\"\">\r\n         <div className={s.contentWrap}>\r\n            <Subtitle subtitle=\"Personal Information\" />\r\n            <div className={s.img}>\r\n               <img src={img} alt=\"img\" />\r\n               <div className={s.icon}>\r\n                  <img src={icon} alt=\"icon\" />\r\n               </div>\r\n            </div>\r\n            <Input inputData={inputData1} value={name} onChange={() => {}}/>\r\n            <Input inputData={inputData2} value={email} onChange={() => {}}/>\r\n            <Input inputData={inputData3} value={publicCardPacksCount} onChange={() => {}}/>\r\n            <div className={s.block}>\r\n               <Button label=\"Cancel\" style={styleButton1} />\r\n               <Button label=\"Save\" style={styleButton2} />\r\n            </div>\r\n         </div>\r\n      </form >\r\n   );\r\n}\r\n\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {RecoveryAPI} from \"./api/api\";\r\n\r\nconst initialState: InitialStateType = {\r\n    success: false,\r\n    error: null,\r\n    info: null\r\n}\r\n\r\nexport const passwordRecoveryReducer = (state = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case 'recovery/SET-SUCCESS':\r\n            return {...state, success: action.success, error: ''}\r\n        case 'recovery/SET-ERROR':\r\n            return {...state, error: action.error, success: false}\r\n        case 'recovery/SET-PASS':\r\n            return {...state, info: action.info, error: ''}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sendPassRecoveryTC = (email: string) => (dispatch: Dispatch<ActionType>) => {\r\n    RecoveryAPI.recoveryPass(email)\r\n        .then((res) => {\r\n            if (res.data.success) {\r\n                dispatch(setSuccessAC(true))\r\n                alert('Письмо отправлено')\r\n            }\r\n        })\r\n        .catch(e => {\r\n            dispatch(setErrorAC(e.response.data.error))\r\n        })\r\n}\r\n\r\nexport const setNewPassTC = (password: string, token: string) => (dispatch: Dispatch<ActionType>) => {\r\n    RecoveryAPI.newPass(password, token)\r\n        .then((res) => {\r\n            dispatch(setNewPassAC(res.data.info))\r\n            alert('Пароль изменен')\r\n\r\n        })\r\n        .catch(e => {\r\n            dispatch(setErrorAC(e.response.data.error))\r\n        })\r\n}\r\n\r\nexport const setSuccessAC = (success: boolean) => ({type: 'recovery/SET-SUCCESS', success} as const)\r\nexport const setNewPassAC = (info: string) => ({type: 'recovery/SET-PASS', info} as const)\r\nexport const setErrorAC = (error: string) => ({type: 'recovery/SET-ERROR', error} as const)\r\n\r\n\r\ntype InitialStateType = {\r\n    success: boolean\r\n    error: null | string\r\n    info: null | string\r\n\r\n}\r\n\r\ntype ActionType =\r\n    | ReturnType<typeof setSuccessAC>\r\n    | ReturnType<typeof setErrorAC>\r\n    | ReturnType<typeof setNewPassAC>\r\n\r\n\r\n\r\n\r\n","import s from \"./PasswordRecoveryForm.module.scss\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Title from \"../../../assets/components/common/title/Title.jsx\";\r\nimport Subtitle from \"../../../assets/components/common/subtitle/Subtitle.jsx\";\r\nimport Button from \"../../../assets/components/common/button/Button.jsx\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {useFormik} from \"formik\";\r\nimport {sendPassRecoveryTC} from \"../../../n1-main/m2-bll/passwordRecoveryReducer\";\r\nimport React from \"react\";\r\nimport {Input} from \"../../../assets/components/common/input/Input\";\r\n\r\n// данные для input email\r\nconst inputData1:inputDataType = {\r\n    id: \"email\",\r\n    type: \"email\",\r\n    name: \"email\",\r\n    for: \"email\",\r\n    label: \"Email\",\r\n    style: {\r\n        display: \"none\"\r\n    }\r\n}\r\n\r\nexport default function PasswordRecoveryForm() {\r\n\r\n    const dispatch = useDispatch()\r\n    const errorFromServer = useSelector<AppStoreType, string | null>(state => state.recovery.error)\r\n\r\n    const formik = useFormik({\r\n\r\n        initialValues: {\r\n            email: '',\r\n        },\r\n\r\n        validate: (values) => {\r\n            const errors: Partial<FormikErrorType> = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: values => {\r\n            // alert(JSON.stringify(values))\r\n            formik.resetForm()\r\n            dispatch(sendPassRecoveryTC(values.email))\r\n        },\r\n    })\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div className={s.contentWrap}>\r\n                <Title/>\r\n                <Subtitle subtitle=\"Forgot your password?\"/>\r\n                <Input inputData={inputData1}\r\n                       {...formik.getFieldProps('email')}/>\r\n                {formik.touched.email && formik.errors.email ? (\r\n                    <div className={s.error}>{formik.errors.email}</div>) : null}\r\n                {errorFromServer ? <span className={s.error}>{errorFromServer}</span> : null}\r\n                <span className={s.text}>Enter your email address and we will send you further instructions </span>\r\n                <Button label=\"Send Instructions\"/>\r\n                <span className={s.question}>Did you remember your password?</span>\r\n                <NavLink className={s.link} to={'/login'}>Try logging in</NavLink>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\ntype FormikErrorType = {\r\n    email: string\r\n}\r\nexport type inputDataType = {\r\n    id?: string\r\n    type?: string\r\n    name?: string\r\n    for?: string\r\n    label?: string\r\n    style: {\r\n        display: string\r\n    }\r\n}\r\n\r\n\r\n\r\n","import s from \"./PasswordNewForm.module.scss\";\r\nimport Title from \"../../../assets/components/common/title/Title.jsx\";\r\nimport Subtitle from \"../../../assets/components/common/subtitle/Subtitle.jsx\";\r\nimport {Input} from \"../../../assets/components/common/input/Input\";\r\nimport Button from \"../../../assets/components/common/button/Button.jsx\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Navigate,useParams} from \"react-router-dom\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {useFormik} from \"formik\";\r\nimport {setNewPassTC} from \"../../../n1-main/m2-bll/passwordRecoveryReducer\";\r\nimport React from \"react\";\r\n\r\n// данные для input password\r\nconst inputData2:inputDataType = {\r\n    id: \"password\",\r\n    type: \"password\",\r\n    name: \"password\",\r\n    for: \"password\",\r\n    label: \"Password\",\r\n    style: {\r\n        display: \"inlineBlock\"\r\n    }\r\n}\r\n\r\nexport default function PasswordNewForm() {\r\n    const dispatch = useDispatch()\r\n    const {token} = useParams<'token'>();\r\n\r\n    const errorFromServer = useSelector<AppStoreType, string | null>(state => state.recovery.error)\r\n    const infoFromServer = useSelector<AppStoreType, string | null>(state => state.recovery.info)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            password: '',\r\n        },\r\n        onSubmit: values => {\r\n            if (token)\r\n                dispatch(setNewPassTC(values.password, token));\r\n        },\r\n        validate: (values) => {\r\n            const errors: Partial<FormikErrorType> = {};\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 7) {\r\n                errors.password = 'Must be 7 characters or more';\r\n            }\r\n            return errors\r\n        },\r\n    },);\r\n\r\n    if (infoFromServer) {\r\n        return <Navigate to={\"/login\"}/>\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div className={s.contentWrap}>\r\n                <Title/>\r\n                <Subtitle subtitle=\"Create new password\"/>\r\n                <Input inputData={inputData2}\r\n                       {...formik.getFieldProps('password')}/>\r\n                {formik.touched.password && formik.errors.password ? (\r\n                    <div className={s.error}>{formik.errors.password}</div>\r\n                ) : null}\r\n                {errorFromServer ? <span className={s.error}>{errorFromServer}</span> : null}\r\n                <span className={s.text}>Create new password and we will send you further instructions to email</span>\r\n                <div className={s.btn}>\r\n                    <Button label=\"Create new password\"/>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\ntype FormikErrorType = {\r\n    password: string\r\n}\r\n\r\nexport type inputDataType = {\r\n    id?: string\r\n    type?: string\r\n    name?: string\r\n    for?: string\r\n    label?: string\r\n    style: {\r\n        display: string\r\n    }\r\n}\r\n\r\n","import s from \"./Search.module.scss\";\r\n\r\n\r\nexport default function Search() {\r\n   return (\r\n      <div className={s.search}>\r\n         <input className={s.inputSearch} name=\"name\" type=\"text\" placeholder=\"Search...\" autofocus />\r\n      </div>\r\n   );\r\n}\r\n","import s from \"./CellCommon.module.scss\";\r\n\r\n\r\nfunction CellCommon(props) {\r\n   return (\r\n      <div className={s.text}>\r\n         <span>{props.cellData}</span>\r\n      </div>\r\n   );     \r\n}\r\n\r\nexport default CellCommon;","import s from \"./TableButton.module.scss\";\r\n\r\n// в месте, где используется кнопка, если нужно, стилизуем кнопку\r\n// const styleButton = {\r\n//    padding: \"19px 61px\",\r\n//    fontSize: \"14px\",\r\n//    letterSpacing: \"0.8px\"\r\n// }\r\n\r\n// style={styleButton}\r\n\r\nexport default function TableButton(props) {\r\n   return (\r\n      <button className={s.btn} style={props.style}>{props.label}</button>\r\n   );\r\n}\r\n\r\n\r\n\r\n","import s from \"./TableRow.module.scss\";\r\nimport CellCommon from \"../cell-common/CellCommon.jsx\";\r\nimport TableButton from \"../table-button/TableButton.jsx\";\r\n\r\n\r\n// стилизация кнопки\r\nconst styleButton = {\r\n   backgroundColor: \"#F1453D\",\r\n   color: \"#FFFFFF\",\r\n   fontWeight: 500\r\n}\r\n\r\n\r\nexport default function TableRow(props) {\r\n   return (\r\n      <tr>\r\n         <td style={props.style}><CellCommon cellData={props.cellData.td1} /></td>\r\n         <td style={props.style}><CellCommon cellData={props.cellData.td2} /></td>\r\n         <td style={props.style}><CellCommon cellData={props.cellData.td3} /></td>\r\n         <td style={props.style}><CellCommon cellData={props.cellData.td4} /></td>\r\n         <td style={props.style}>\r\n            <div className={s.btnBlock}>\r\n               <TableButton label=\"Delete\" style={styleButton}/>\r\n               <TableButton label=\"Edit\" />\r\n               <TableButton label=\"Learn\" />\r\n            </div>\r\n         </td>\r\n      </tr>\r\n   );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/arrow-icon.f30a3c93.svg\";","import s from \"./Table.module.scss\";\r\nimport TableRow from './table-row/TableRow.jsx';\r\nimport icon from \"./../../img/arrow-icon.svg\";\r\n\r\n\r\nexport default function Table(props) {\r\n   return (\r\n      <div className={s.tableWrap}>\r\n         <table>\r\n            <thead >\r\n               <tr>\r\n                  <th>{props.tableData.title1}</th>\r\n                  <th>{props.tableData.title2}</th>\r\n                  <th>{props.tableData.title3}<button className={s.btn} ><img className={s.icon} src={icon} alt=\"icon\" /></button></th>\r\n                  <th>{props.tableData.title4}</th>\r\n                  <th>{props.tableData.title5}</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               <TableRow cellData={props.tableData.dataRow1} />\r\n               <TableRow cellData={props.tableData.dataRow2} />\r\n               <TableRow cellData={props.tableData.dataRow3} />\r\n               <TableRow cellData={props.tableData.dataRow4} />\r\n               <TableRow cellData={props.tableData.dataRow5} />\r\n               <TableRow cellData={props.tableData.dataRow6} />\r\n               <TableRow cellData={props.tableData.dataRow7} />\r\n               <TableRow cellData={props.tableData.dataRow8} />\r\n               {/* <TableRow cellData={props.tableData.dataRow7} />\r\n               <TableRow cellData={props.tableData.dataRow8} /> */}\r\n            </tbody>\r\n         </table>\r\n      </div>\r\n   );\r\n}\r\n","import s from './UsePagination.module.scss';\r\nimport usePagination from '@mui/material/usePagination';\r\nimport { styled } from '@mui/material/styles';\r\n\r\n\r\nconst List = styled('ul')({\r\n   listStyle: 'none',\r\n   // paddingLeft: \"20px\",\r\n   margin: 0,\r\n   display: 'flex',\r\n   alignItems: \"center\",\r\n});\r\n\r\n\r\nexport default function UsePagination() {\r\n   const { items } = usePagination({\r\n      count: 10,\r\n   });\r\n\r\n   return (\r\n      <div className={s.UsePagination}>\r\n         <nav >\r\n            <List >\r\n               {items.map(({ page, type, selected, ...item }, index) => {\r\n                  let children = null;\r\n\r\n                  if (type === 'start-ellipsis' || type === 'end-ellipsis') {\r\n                     children = '…';\r\n                  } else if (type === 'page') {\r\n                     children = (\r\n                        <button\r\n                           type=\"button\"\r\n                           style={{\r\n                              borderWidth: 0,\r\n                              backgroundColor: selected ? \"#21268F\" : \"transparent\",\r\n                              color: selected ? \"#F2F5F7\" : \"#2D2E46\",\r\n                              width: \"24px\",\r\n                              height: \"24px\",\r\n                              borderRadius: \"3px\",\r\n                              fontFamily: \"Lato\",\r\n                              fontSize: \"12px\",\r\n                              lineHeight: \"120%\",\r\n                              cursor: \"pointer\",\r\n                           }}\r\n                           {...item}\r\n                        >\r\n                           {page}\r\n                        </button>\r\n                     );\r\n                  }\r\n                  //  else {\r\n                  //    children = (\r\n                  //      <button type=\"button\" {...item}>\r\n                  //         style={{\r\n                  //             background: \"red\"\r\n                  //                }}\r\n                  //        {type}\r\n                  //      </button>\r\n                  //    );\r\n                  //  }  \r\n                  else {\r\n            children = (\r\n              <button type=\"button\" {...item}>\r\n                {type}\r\n              </button>\r\n            );\r\n          }                \r\n\r\n                  return <li\r\n                     style={{\r\n                        marginRight: \"15px\",\r\n                     }}\r\n                     key={index}>{children}</li>;\r\n               })}\r\n            </List>\r\n         </nav>\r\n      </div>\r\n   );\r\n}\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport InputBase from '@mui/material/InputBase';\r\n\r\nconst BootstrapInput = styled(InputBase)(({ theme }) => ({\r\n   'label + &': {\r\n      marginTop: theme.spacing(3),\r\n   },\r\n   '& .MuiInputBase-input': {\r\n      borderRadius: 0,\r\n      position: 'relative',\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '1px solid #C0BECC',\r\n      fontSize: \"12px\",\r\n      padding: '0 0 0 6px',\r\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n      // Use the system font instead of the default Roboto font.\r\n      fontFamily: [\r\n         'Roboto',\r\n      ].join(','),\r\n      '&:focus': {\r\n         // borderColor: '#80bdff',\r\n         // boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n      },\r\n   },\r\n}));\r\n\r\nexport default function CustomizedSelects() {\r\n   const [age, setAge] = React.useState(10);\r\n   const handleChange = (event) => {\r\n      setAge(event.target.value);\r\n   };\r\n   return (\r\n      <div>\r\n         <FormControl sx={{ m: 1 }} variant=\"standard\">\r\n            {/* <InputLabel id=\"demo-customized-select-label\">Age</InputLabel> */}\r\n            <Select\r\n               labelId=\"demo-customized-select-label\"\r\n               id=\"demo-customized-select\"\r\n               value={age}\r\n               onChange={handleChange}\r\n               input={<BootstrapInput />}\r\n            >\r\n               <MenuItem value={10}>10</MenuItem>\r\n               <MenuItem value={20}>20</MenuItem>\r\n               <MenuItem value={30}>30</MenuItem>\r\n            </Select>\r\n         </FormControl>\r\n      </div>\r\n   );\r\n}","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Slider from '@mui/material/Slider';\r\nimport { styled } from '@mui/material/styles';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction ValueLabelComponent(props) {\r\n   const { children, value } = props;\r\n \r\n   return (\r\n     <Tooltip enterTouchDelay={0} placement=\"top\" title={value}>\r\n       {children}\r\n     </Tooltip>\r\n   );\r\n }\r\n \r\n ValueLabelComponent.propTypes = {\r\n   children: PropTypes.element.isRequired,\r\n   value: PropTypes.number.isRequired,\r\n };\r\n \r\n//  const marks = [\r\n//    {\r\n//      value: 0,\r\n//    },\r\n//    {\r\n//      value: 4,\r\n//    },\r\n//    {\r\n//      value: 112,\r\n//    },\r\n//    {\r\n//      value: 140,\r\n//    },\r\n//  ];\r\n \r\n\r\n const UseSlider = styled(Slider)({\r\n   color: '#21268F',\r\n   height: 5,\r\n   '& .MuiSlider-track': {\r\n     border: 'none',\r\n   },\r\n   '& .MuiSlider-thumb': {\r\n     height: 16,\r\n     width: 16,\r\n     backgroundColor: '#fff',\r\n     border: '4px solid currentColor',\r\n     '&:focus, &:hover, &.Mui-active, &.Mui-focusVisible': {\r\n       boxShadow: 'inherit',\r\n     },\r\n     '&:before': {\r\n       display: 'none',\r\n     },\r\n   },\r\n   '& .MuiSlider-valueLabel': {\r\n     lineHeight: 1.2,\r\n     fontSize: 12,\r\n     background: 'unset',\r\n     padding: 0,\r\n     width: 32,\r\n     height: 24,\r\n     borderRadius: 3,\r\n     backgroundColor: '#21268F',    \r\n     '&:before': { display: 'none' },     \r\n   },\r\n });\r\n\r\n\r\n \r\n function valuetext(value) {\r\n   return `${value}number`;\r\n }\r\n \r\n export default function RangeSlider() {\r\n   const [value, setValue] = React.useState([4, 112]);\r\n \r\n   const handleChange = (event, newValue) => {\r\n     setValue(newValue);\r\n   };\r\n \r\n   return (\r\n     <Box sx={{ width: 195 }}>\r\n       <UseSlider\r\n         // marks={marks}\r\n         max={150}\r\n         getAriaLabel={() => 'Number of cards'}\r\n         value={value}\r\n         onChange={handleChange}\r\n         valueLabelDisplay=\"auto\"\r\n         getAriaValueText={valuetext}\r\n       />\r\n     </Box>\r\n   );\r\n }\r\n \r\n\r\n\r\n ","import s from \"./PacksList.module.scss\";\r\nimport Subtitle from \"./../common/subtitle/Subtitle.jsx\";\r\nimport Button from \"./../common/button/Button.jsx\";\r\nimport Search from \"./../common/search/Search.jsx\";\r\nimport Table from \"./../table/Table.jsx\";\r\nimport UsePagination from \"./pagination/UsePagination.jsx\";\r\nimport Select from \"./select/Select.jsx\";\r\nimport UseSlider from \"./../packs-list/use-slider/UseSlider.jsx\";\r\n\r\n\r\n// стилизация синей кнопоки\r\nconst styleButton = {\r\n   width: \"184px\"\r\n}\r\n\r\n// данные для таблицы\r\nconst tableData = {\r\n   title1: \"Name\",\r\n   title2: \"Cards\",\r\n   title3: \"Last Updated\",\r\n   title4: \"Created by\",\r\n   title5: \"Actions\",\r\n   dataRow1: {\r\n      td1: \"Pack Name\",\r\n      td2: \"4\",\r\n      td3: \"18.03.2021\",\r\n      td4: \"Ivan Ivanov\"\r\n   },\r\n   dataRow2: {\r\n      td1: \"Pack Name\",\r\n      td2: \"4\",\r\n      td3: \"18.03.2021\",\r\n      td4: \"Ivan Ivanov\"\r\n   },\r\n   dataRow3: {\r\n      td1: \"Pack Name\",\r\n      td2: \"4\",\r\n      td3: \"18.03.2021\",\r\n      td4: \"Ivan Ivanov\"\r\n   },\r\n   dataRow4: {\r\n      td1: \"Pack Name\",\r\n      td2: \"4\",\r\n      td3: \"18.03.2021\",\r\n      td4: \"Ivan Ivanov\"\r\n   },\r\n   dataRow5: {\r\n      td1: \"Pack Name\",\r\n      td2: \"4\",\r\n      td3: \"18.03.2021\",\r\n      td4: \"Ivan Ivanov\"\r\n   },\r\n   dataRow6: {\r\n      td1: \"Pack Name\",\r\n      td2: \"4\",\r\n      td3: \"18.03.2021\",\r\n      td4: \"Ivan Ivanov\"\r\n   },\r\n   dataRow7: {\r\n      td1: \"Pack Name\",\r\n      td2: \"4\",\r\n      td3: \"18.03.2021\",\r\n      td4: \"Ivan Ivanov\"\r\n   },\r\n   dataRow8: {\r\n      td1: \"Pack Name\",\r\n      td2: \"4\",\r\n      td3: \"18.03.2021\",\r\n      td4: \"Ivan Ivanov\"\r\n   }\r\n}\r\n\r\nexport default function PacksList() {\r\n   return (\r\n      <div className={s.packsList}>\r\n         <aside className={s.sidebar}>\r\n            <span className={s.label}>Show packs cards</span>\r\n            <div className={s.btnBlock}>\r\n               <button className={`${s.btn} ${s.active}`}>My</button>\r\n               <button className={s.btn}>All</button>\r\n            </div>\r\n            <span className={`${s.label} ${s.labelSlider}`}>Number of cards</span>\r\n            <UseSlider />\r\n         </aside>\r\n         <main className={s.main}>\r\n            <div className={s.title}>\r\n               <Subtitle subtitle=\"Packs list\" />\r\n            </div>\r\n            <div className={s.searchBlock}>\r\n               <Search />\r\n               <Button label=\"Add new pack\" style={styleButton} />\r\n            </div>\r\n            <Table tableData={tableData} />\r\n            <div className={s.bottomBlock}>\r\n               <UsePagination />\r\n               <div className={s.selectBlock}>\r\n                  <span className={s.label1}>Show</span>\r\n                  <div className={s.selectWrap}>\r\n                     <Select />\r\n                  </div>\r\n                  <span className={s.label2}>Cards per Page</span>\r\n               </div>\r\n            </div>\r\n         </main>\r\n      </div>\r\n   );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport \"./../App.css\"\r\nimport {Header} from \"../p1-header/Header\";\r\nimport {Navigate, Route, Routes} from \"react-router-dom\";\r\nimport {Page404} from \"../../../n2-features/f1-auth/Page404\";\r\nimport {Examples} from \"../../../n2-features/f0-test/Examples/Examples\";\r\nimport LoginForm from \"../../../n2-features/f1-auth/a1-login/LoginForm\";\r\nimport RegistrationForm from \"../../../n2-features/f1-auth/a2-register/RegistrationForm\";\r\nimport {Packs} from '../../../n2-features/f3-packs/Packs';\r\nimport {Cards} from '../../../n2-features/f4-cards/Cards';\r\nimport ProfileForm from \"../../../n2-features/f1-auth/a3-profile/ProfileForm\";\r\nimport PasswordRecoveryForm from \"../../../n2-features/f1-auth/a4-password-recovery/PasswordRecoveryForm\";\r\nimport PasswordNewForm from \"../../../n2-features/f1-auth/a4-password-recovery/PasswordNewForm\";\r\nimport PacksList from \"../../../assets/components/packs-list/UsePacksList\";\r\n\r\nexport const Main = () => {\r\n   return (\r\n      <div className='main'>\r\n         <Header />\r\n         <div className='content'>\r\n            <Routes>\r\n               <Route path={'/registration'} element={<RegistrationForm />} />\r\n               <Route path={'/login'} element={<LoginForm/>} />\r\n               <Route path={'/profile'} element={<ProfileForm />} />\r\n               <Route path={'/404'} element={<Page404 />} />\r\n               <Route path={'/passwordrecovery'} element={<PasswordRecoveryForm/>} />\r\n               <Route path={'/passwordnew/:token'} element={<PasswordNewForm />} />\r\n               <Route path={'/tests'} element={<Examples />} />\r\n               <Route path=\"/\" element={<Navigate to=\"/login\" />} />\r\n               <Route path=\"*\" element={<Navigate to=\"/404\" />} />\r\n               <Route path={'/packs'} element={<Packs/>}/>\r\n               <Route path={'/cards/:id'} element={<Cards/>}/>\r\n               <Route path={'/packsdesigned'} element={<PacksList/>}/>\r\n               <Route />\r\n            </Routes>\r\n         </div>\r\n      </div>\r\n   );\r\n}","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Main} from \"./p2-main/Main\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../m2-bll/store\";\r\nimport {InitializeTC} from \"../m2-bll/authReducer\";\r\n\r\nexport const App = () => {\r\n    const dispatch = useDispatch()\r\n    const isInitialize = useSelector<AppStoreType, boolean>(state => state.app.isInitilize)\r\n    useEffect(() => {\r\n        dispatch(InitializeTC())\r\n    }, [])\r\n    return (\r\n        <div className=\"App\">\r\n            {isInitialize && <Main />}\r\n        </div>\r\n    );\r\n}\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {testReducer} from \"./testReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {authReducer} from \"./authReducer\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {registrationReducer} from \"./registrationReducer\";\r\nimport {passwordRecoveryReducer} from \"./passwordRecoveryReducer\";\r\nimport {appReducer} from \"./appReducer\";\r\nimport {packsReducer} from \"./packsReducer\";\r\nimport {cardsReducer} from \"./cardsReducer\";\r\nimport {findAndPaginationReducer} from \"./findAndPaginationReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    testReducer: testReducer,\r\n    auth: authReducer,\r\n    profile: profileReducer,\r\n    registration: registrationReducer,\r\n    recovery: passwordRecoveryReducer,\r\n    app: appReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer,\r\n    findAndPagination: findAndPaginationReducer,\r\n})\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store; // for dev","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {App} from \"./n1-main/m1-ui/App\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./n1-main/m2-bll/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n// todo: I noticed this error: Encountered two children with the same key, `617ff51fd7b1030004090a1f`\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2LBWd\",\"links\":\"Header_links__1ciEN\",\"link\":\"Header_link__1Es1h\",\"logo\":\"Header_logo__Tdvix\",\"notDone\":\"Header_notDone__1Lux_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Paginations_pagination__gujkh\",\"select\":\"Paginations_select__2DUzP\",\"item\":\"Paginations_item__3-urb\",\"btn\":\"Paginations_btn__3TyaY\",\"points\":\"Paginations_points__2_t7E\",\"lastPaginationPage\":\"Paginations_lastPaginationPage__DOZq7\",\"superSelect\":\"Paginations_superSelect__3EAMF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentWrap\":\"LoginForm_contentWrap__3txpI\",\"block\":\"LoginForm_block__3HIHd\",\"linkForgotPass\":\"LoginForm_linkForgotPass__PO7_n\",\"question\":\"LoginForm_question__7yz2w\",\"linkSignUp\":\"LoginForm_linkSignUp__34chF\",\"error\":\"LoginForm_error__2hR6i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentWrap\":\"RegistrationForm_contentWrap__2FBf_\",\"block\":\"RegistrationForm_block__2lXZF\",\"error\":\"RegistrationForm_error__1OiNd\",\"link\":\"RegistrationForm_link__Q_1MX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentWrap\":\"PasswordRecoveryForm_contentWrap__3QE9g\",\"text\":\"PasswordRecoveryForm_text__wXhut\",\"question\":\"PasswordRecoveryForm_question__1ypJA\",\"link\":\"PasswordRecoveryForm_link__1jJhp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Pack_table__lOMXg\",\"cell\":\"Pack_cell__2AO60\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentWrap\":\"PasswordNewForm_contentWrap__2Qv-Q\",\"text\":\"PasswordNewForm_text__2-aRc\",\"btn\":\"PasswordNewForm_btn__2GsD0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__pfhQz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__1efK7\",\"superInput\":\"SuperInputText_superInput__-n5r7\",\"errorInput\":\"SuperInputText_errorInput__3ob-2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"Cards_cell__1G1oG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentWrap\":\"ProfileForm_contentWrap__39819\",\"img\":\"ProfileForm_img__fZFLY\",\"icon\":\"ProfileForm_icon__3lCcd\",\"block\":\"ProfileForm_block__2NtDA\"};"],"sourceRoot":""}