{"version":3,"sources":["n1-main/m1-ui/common/c2-SuperButton/SuperButton.module.scss","n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox.module.css","assets/components/common/input/Input.module.scss","n2-features/f2-table/Sort/SortMain/Sort.module.scss","n2-features/f2-table/Search/SearchMain/Search.module.scss","assets/components/common/modal-title-block/ModalTitleBlock.module.scss","assets/components/table/table-row/TableRow.module.scss","assets/components/table/head-button-cell/HeadButtonCell.module.scss","n1-main/m1-ui/common/c6-SuperRadio/SuperRadio.module.scss","assets/components/common/checkbox/CheckboxLabel.module.scss","n2-features/f2-table/Search/RangeSlider/RangeSlider.module.scss","n2-features/f5-modal/CommonBackground/CommonBackground.module.scss","assets/components/common/search/Search.module.scss","assets/components/common/slider/UseSlider.Module.scss","n1-main/m1-ui/common/c4-SuperEditableSpan/SuperEditableSpan.module.scss","n2-features/f0-test/TestForReducer/TestForReducer.module.scss","assets/components/common/title/Title.module.scss","assets/components/common/subtitle/Subtitle.module.scss","assets/components/common/button/Button.module.scss","assets/components/common/modal-button-block/ModalButtonBlock.module.scss","assets/components/table/cell-common/CellCommon.module.scss","assets/components/table/table-button/TableButton.module.scss","assets/components/table/rating-cell/RatingCell.module.scss","assets/components/table/head-cell/HeadCell.module.scss","n2-features/f0-test/Examples/Examples.module.scss","n1-main/m1-ui/p1-header/Header.module.scss","n2-features/f2-table/Pagination/Paginations.module.scss","assets/components/packs-list/PacksList.module.scss","reportWebVitals.ts","n1-main/m2-bll/api/api.ts","n1-main/m2-bll/profileReducer.ts","n1-main/m2-bll/appReducer.ts","n1-main/m2-bll/authReducer.ts","n1-main/m1-ui/p1-header/Header.tsx","n2-features/f1-auth/Page404.tsx","n1-main/m1-ui/common/c1-SuperInputText/SuperInputText.tsx","n1-main/m1-ui/common/c2-SuperButton/SuperButton.tsx","n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","n1-main/m1-ui/common/c5-SuperSelect/SuperSelect.tsx","n1-main/m1-ui/common/c6-SuperRadio/SuperRadio.tsx","n1-main/m2-bll/testReducer.ts","n2-features/f0-test/TestForReducer/TestForReducer.tsx","n2-features/f0-test/Examples/Examples.tsx","assets/components/common/title/Title.jsx","assets/components/common/subtitle/Subtitle.jsx","assets/components/common/checkbox/CheckboxLabel.jsx","assets/img/shape.svg","assets/components/common/input/Input.tsx","assets/components/common/button/Button.tsx","n2-features/f1-auth/a1-login/LoginForm.tsx","n1-main/m2-bll/registrationReducer.ts","n2-features/f1-auth/a2-register/RegistrationForm.tsx","n1-main/m2-bll/findAndPaginationReducer.ts","n1-main/m2-bll/packsReducer.ts","n2-features/f2-table/Pagination/Pagination.tsx","n2-features/f2-table/Pagination/PaginationPacksContainer.tsx","n2-features/f2-table/Sort/SortMain/Sort.tsx","n2-features/f2-table/Sort/SortCardPacksContainer/SortCardPacksContainer.tsx","n2-features/f2-table/Search/RangeSlider/RangeSlider.tsx","n2-features/f2-table/Search/SearchMain/Search.tsx","n2-features/f2-table/Search/SearchCardsPacksContainer/SearchCardsPacksContainer.tsx","n1-main/m2-bll/modalReducer.ts","n2-features/f5-modal/CommonBackground/CommonBackground.tsx","assets/img/close-icon.svg","assets/components/common/modal-title-block/ModalTitleBlock.tsx","assets/components/common/modal-button-block/ModalButtonBlock.tsx","n2-features/f5-modal/CommonAddUpdate/CommonAddUpdate.tsx","n2-features/f5-modal/ModalAddPack/ModalAddPack.tsx","n1-main/m1-ui/common/components/styles/inlineVariables.ts","n2-features/f5-modal/CommonDel/CommonDel.tsx","n2-features/f5-modal/ModalDelPack/ModalDelPack.tsx","n2-features/f5-modal/ModalUpdatePack/ModalUpdatePack.tsx","n2-features/f3-packs/Packs.tsx","n1-main/m2-bll/cardsReducer.ts","n2-features/f2-table/Pagination/PaginationCardsContainer.tsx","n2-features/f2-table/Search/SeachCardsContainer/SeachCardsContainer.tsx","n2-features/f2-table/Sort/SortCardsContainer/SortCardsContainer.tsx","n2-features/f5-modal/ModalDelCard/ModalDelCard.tsx","n2-features/f5-modal/ModalAddCard/ModalAddCard.tsx","n2-features/f5-modal/ModalUpdateCard/ModalUpdateCard.tsx","n2-features/f4-cards/Cards.tsx","assets/img/photo-profile.png","assets/img/photo-icon.svg","n2-features/f1-auth/a3-profile/ProfileForm.tsx","n1-main/m2-bll/passwordRecoveryReducer.ts","n2-features/f1-auth/a4-password-recovery/PasswordRecoveryForm.tsx","n2-features/f1-auth/a4-password-recovery/PasswordNewForm.tsx","assets/components/common/search/Search.jsx","assets/components/table/cell-common/CellCommon.jsx","assets/components/table/table-button/TableButton.tsx","assets/components/common/rating/UseRating.jsx","assets/components/table/rating-cell/RatingCell.jsx","assets/components/table/table-row/TableRow.jsx","assets/components/table/head-cell/HeadCell.jsx","assets/img/arrow-icon.svg","assets/components/table/head-button-cell/HeadButtonCell.jsx","assets/components/table/Table.jsx","assets/components/common/slider/MySlider.jsx","assets/components/common/slider/UseSlider.jsx","assets/components/common/pagination/UsePagination.jsx","assets/components/common/select/Select.jsx","assets/components/common/bottom-block/BottomBlock.jsx","assets/components/packs-list/UsePacksList.jsx","n2-features/f5-modal/ModalUp/ModalIgn.tsx","n2-features/f5-modal/ModalUp/ModalUp.tsx","n2-features/f6-learn/LearnQuestionAnswer.tsx","n1-main/m1-ui/p2-main/Main.tsx","n1-main/m1-ui/App.tsx","n1-main/m2-bll/store.ts","index.tsx","n2-features/f6-learn/LearnQuestionAnswer.module.scss","n2-features/f1-auth/a1-login/LoginForm.module.scss","n2-features/f1-auth/a2-register/RegistrationForm.module.scss","n2-features/f1-auth/a4-password-recovery/PasswordRecoveryForm.module.scss","n2-features/f3-packs/Pack.module.scss","n2-features/f1-auth/a4-password-recovery/PasswordNewForm.module.scss","assets/components/common/bottom-block/BottomBlock.module.scss","n1-main/m1-ui/common/c5-SuperSelect/SuperSelect.module.scss","n1-main/m1-ui/common/c1-SuperInputText/SuperInputText.module.scss","n2-features/f5-modal/CommonAddUpdate/CommonAddUpdate.module.scss","n2-features/f5-modal/CommonDel/CommonDel.module.scss","n2-features/f4-cards/Cards.module.scss","n2-features/f1-auth/a3-profile/ProfileForm.module.scss","assets/components/table/Table.module.scss"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","withCredentials","authAPI","data","post","delete","registrationAPI","email","password","RecoveryAPI","from","message","token","resetPasswordToken","packsAPI","user_id","pageCount","page","min","max","packName","sortPacks","get","params","isPrivate","name","cardsPack","private","id","put","_id","cardsAPI","cardQuestion","sortCards","cardsPack_id","question","answer","card","grade","Math","random","shots","card_id","initialState","avatar","publicCardPacksCount","setProfileAC","type","isInitilize","error","status","setAppStatusAC","isLoggedIn","setIsLoggedInAC","value","setIsErrorAC","Header","dispatch","useDispatch","useSelector","state","auth","className","s","header","logo","links","item","to","link","onClick","catch","e","response","finally","notDone","Page404","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","currentTarget","key","SuperButton","red","finalClassName","button","default","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","onDoubleClick","restSpanProps","editableSpan","SuperSelect","options","onChangeOption","mappedOptions","map","o","i","option","select","SuperRadio","onChangeCallback","radio","testValue","TestForReducer","reducerValue","testReducer","testForReducer","newValue","Examples","text","setText","setChecked","setValue","arr","valueForSsSr","showAlert","alert","examples","column","inputContainer","testSpanError","blue","superButton","disabled","SuperEditableSpanContainer","undefined","radioContainer","Title","title","Subtitle","props","subtitle","style","CheckboxLabel","checkboxLabels","Checkbox","Input","inputData","required","placeholder","htmlFor","for","icon","src","alt","Button","btn","inputData1","display","inputData2","LoginForm","errorFromServer","formik","useFormik","initialValues","rememberMe","onSubmit","values","res","validate","errors","test","action","handleSubmit","contentWrap","getFieldProps","touched","block","linkForgotPass","linkSignUp","setRegisterStatus","setRegisterError","setRegisterMessage","inputData3","styleButton1","backgroundColor","color","width","boxShadow","styleButton2","RegistrationForm","setErrorSelf","registration","createNewUserHandler","setTimeout","createNewUser","checkPassword","trim","resetForm","validationSchema","yup","shape","matches","cardPacks","totalCount","cards","selectedCardId","questionText","setSortPacksAC","payload","setCardsPageCountAC","setSortCardsAC","packUser_id","getPacksTC","getState","findAndPagination","toString","packs","cardPacksTotalCount","Pagination","pagesCount","ceil","pages","push","portionCount","portion","setPortion","leftNumber","rightNumber","useEffect","currentPageHandler","pagination","superSelect","onClickSelectHandler","selectStyle","points","filter","p","q","PaginationPacksContainer","setCardPacksPageCountAC","setCardPacksCurrentPageAC","Sort","appStatus","app","container","upperSortHandler","lowerSortHandler","SortCardPacksContainer","upperSort","lowerCount","RangeSlider","rangeSlider","Slider","getAriaLabel","event","numbers","valueLabelDisplay","slider","Search","search","inputValue","setInputValueHandler","inputPlaceholder","showRange","buttonFindHandler","buttonText","SearchCardsPacksContainer","modalDelCardsPackShowHide","modalAddCardsPackShowHide","modalUpdateCardsPackShowHide","modalDelCardShowHide","modalAddCardShowHide","modalUpdateCardShowHide","clickedCardsPackId","clickedCardId","setClickedCardPackId","setClickedCardId","CommonBackground","modalShowHide","modalBackground","modalContent","stopPropagation","ModalTitleBlock","modalTitleBlock","onClose","ModalButtonBlock","modalButtonBlock","label1","style1","callback1","label2","style2","callback2","CommonAddUpdate","newPackModal","titleBlock","closeHandler","content","inputs","yesButtonText","yesButtonHandler","styleNPButton1","styleNPButton2","inputNPData","ModalAddPack","cardPackNameInModal","setCardPackNameInModal","modalAddCardPackShowHide","modal","cardPackName","styleDPButton1","styleDPButton2","CommonDel","deletePackModal","ReactHtmlParser","delHandler","ModalDelPack","modalDelCardPackShowHide","clickedCardPackId","pack","find","modalYesDelCardPackHandler","delPacksTC","ModalUpdatePack","cardsPackName","setCardPackName","oldCardsPackName","buttonHandler","updatePacksTC","Packs","profile","packUserId","myPacks","setMyPacks","navigate","useNavigate","TableContainer","table","component","Paper","Table","sx","minWidth","TableHead","TableRow","TableCell","cell","align","target","TableBody","mp","border","scope","cardsCount","updated","packId","localStorage","setItem","JSON","stringify","replace","getCardsTC","cardsTotalCount","PaginationCardsContainer","setCardsCurrentPageAC","SearchCardsContainer","cardId","SortCardsContainer","ModalDelCard","useParams","delCardTC","inputNCData1","inputNCData2","ModalAddCard","setQuestion","setAnswer","addCard","ModalUpdateCard","oldCardQuestion","oldCardAnswer","updateCardTC","Cards","addCardsTC","showDelCardModalHandler","showUpdateCardModalHandler","ProfileForm","img","success","info","setSuccessAC","setNewPassAC","setErrorAC","PasswordRecoveryForm","recovery","PasswordNewForm","infoFromServer","setNewPassTC","length","inputSearch","autofocus","CellCommon","td","cellData","TableButton","StyledRating","styled","Rating","marginRight","marginTop","fontSize","UseRating","readOnly","precision","defaultValue","emptyIcon","RatingCell","ratingCell","buttonStyle","fontWeight","tr","td1","td2","td3","rating","btnBlock","TheadCell","th","cellStyle","tableWrap","thead","th1","tableData","title1","th2","title2","th3","title3","th4","title4","th5","title5","dataRow1","MySlider","height","lineHeight","background","padding","borderRadius","valuetext","React","Box","getAriaValueText","UseSlider","useSlider","List","listStyle","margin","alignItems","UsePagination","items","usePagination","count","index","selected","borderWidth","fontFamily","cursor","BootstrapInput","InputBase","theme","spacing","position","palette","paper","transition","transitions","join","CustomizedSelects","age","setAge","FormControl","m","variant","Select","labelId","MenuItem","BottomBlock","bottomBlock","selectBlock","selectWrap","marginLeft","tableStyle","td4","dataRow2","dataRow3","dataRow4","dataRow5","dataRow6","dataRow7","dataRow8","PacksList","packsList","sidebar","active","main","searchBlock","Modal","enableBackground","backgroundStyle","backgroundOnClick","modalStyle","modalOnClick","show","top","left","opacity","zIndex","flexFlow","justifyContent","ModalUp","speed","setShow","handleScroll","window","pageYOffset","addEventListener","step","lastState","innerTimer","setInterval","clearInterval","scroll","tableButtonStyle1","textAligne","marginBottom","tableButtonStyle2","grades","getCard","sum","reduce","acc","rand","newSum","LearnQuestionAnswer","cardsPacksFromLS","getItem","cardsPacksFromLSParsed","parse","selectedCardPack","packid","isFirstRun","setIsFirstRun","answerImg","answerVideo","comments","created","more_id","questionImg","questionVideo","__v","setCard","isAnswerHidden","setIsAnswerHidden","getNextCard","sandGradeHandler","updateGradeAC","updateGradeTC","textTop","answerBlock","textBottom","topButtonBlock","g","buttonBlock","Main","LinearProgress","path","element","App","isInitialized","textAlign","CircularProgress","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7b37839.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SuperButton_button__1EGkW\",\"default\":\"SuperButton_default__2WfoH\",\"red\":\"SuperButton_red__3OyBy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__21TBZ\",\"checkbox\":\"SuperCheckbox_checkbox__1-frT\",\"spanClassName\":\"SuperCheckbox_spanClassName__1f-hD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3tREn\",\"placeholder\":\"Input_placeholder__3eRBG\",\"icon\":\"Input_icon__NeuiV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Sort_container__3cs5e\",\"block\":\"Sort_block__14UER\",\"btn\":\"Sort_btn__1k8v-\",\"elem\":\"Sort_elem__YvL0f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__3emuZ\",\"input\":\"Search_input__1IZNM\",\"btn\":\"Search_btn__7QhON\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalTitleBlock\":\"ModalTitleBlock_modalTitleBlock__2L1cu\",\"title\":\"ModalTitleBlock_title__lvqWF\",\"icon\":\"ModalTitleBlock_icon__20sxz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnBlock\":\"TableRow_btnBlock__bLPlO\",\"td\":\"TableRow_td__oBlVM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"th\":\"HeadButtonCell_th__2-nBQ\",\"btn\":\"HeadButtonCell_btn__2Hu2H\",\"icon\":\"HeadButtonCell_icon__3OoZ2\",\"active\":\"HeadButtonCell_active__q6KH9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"SuperRadio_radio__32PFz\",\"label\":\"SuperRadio_label__3f7xm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkboxLabels\":\"CheckboxLabel_checkboxLabels__MhWdJ\",\"label\":\"CheckboxLabel_label__6jp3K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rangeSlider\":\"RangeSlider_rangeSlider__1Some\",\"slider\":\"RangeSlider_slider__1Awr_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBackground\":\"CommonBackground_modalBackground__2aBsH\",\"modalWindow\":\"CommonBackground_modalWindow__k0JhQ\",\"modalContent\":\"CommonBackground_modalContent__2tsQ3\",\"close\":\"CommonBackground_close__29ceE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__212kp\",\"inputSearch\":\"Search_inputSearch__2ScDD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"_4O2YTCftG2jark+BcsCviQ==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableSpan\":\"SuperEditableSpan_editableSpan__2Cx5J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testForReducer\":\"TestForReducer_testForReducer__1y3D7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__3mUKG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subtitle\":\"Subtitle_subtitle__1n7I3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__2rJQ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalButtonBlock\":\"ModalButtonBlock_modalButtonBlock__sWlQ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"td\":\"CellCommon_td__51AyE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"TableButton_btn__taD-3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ratingCell\":\"RatingCell_ratingCell__2H_kw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"th\":\"HeadCell_th__1grkX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"examples\":\"Examples_examples__3mQdr\",\"column\":\"Examples_column__3t11r\",\"testSpanError\":\"Examples_testSpanError__3fxpu\",\"blue\":\"Examples_blue__30Fno\",\"superButton\":\"Examples_superButton__3TncY\",\"inputContainer\":\"Examples_inputContainer__3v9e7\",\"SuperEditableSpanContainer\":\"Examples_SuperEditableSpanContainer__oujEe\",\"radioContainer\":\"Examples_radioContainer__11Z2z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2LBWd\",\"links\":\"Header_links__1ciEN\",\"link\":\"Header_link__1Es1h\",\"logo\":\"Header_logo__Tdvix\",\"notDone\":\"Header_notDone__1Lux_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Paginations_pagination__gujkh\",\"select\":\"Paginations_select__2DUzP\",\"item\":\"Paginations_item__3-urb\",\"btn\":\"Paginations_btn__3TyaY\",\"points\":\"Paginations_points__2_t7E\",\"lastPaginationPage\":\"Paginations_lastPaginationPage__DOZq7\",\"superSelect\":\"Paginations_superSelect__3EAMF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsList\":\"PacksList_packsList__1ZjvZ\",\"sidebar\":\"PacksList_sidebar__b5D8T\",\"label\":\"PacksList_label__2FS-t\",\"btnBlock\":\"PacksList_btnBlock__3uOty\",\"btn\":\"PacksList_btn__2GvWX\",\"active\":\"PacksList_active__3aiH2\",\"main\":\"PacksList_main__1xEnE\",\"searchBlock\":\"PacksList_searchBlock__2066a\",\"search\":\"PacksList_search__1gFqH\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import axios, {AxiosResponse} from \"axios\";\r\nimport {PackType} from \"../packsReducer\";\r\nimport {CardType} from \"../cardsReducer\";\r\nimport {SortCardsType, SortPackType} from \"../findAndPaginationReducer\";\r\n\r\nconst instance = axios.create({\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\nexport const authAPI = {\r\n    login(data: LoginType) {\r\n        return instance.post<AuthResponseType>('auth/login', data);\r\n    },\r\n    me() {\r\n        return instance.post<AuthResponseType>('/auth/me', {})\r\n    },\r\n    logout() {\r\n        return instance.delete('/auth/me')\r\n    }\r\n}\r\nexport const registrationAPI = {\r\n    registerUser(email: string, password: string) {\r\n        return instance.post<{ title: string }, AxiosResponse<ResponseType>>('auth/register', {\r\n            email: email,\r\n            password: password\r\n        });\r\n    },\r\n}\r\nexport const RecoveryAPI = {\r\n    recoveryPass(email: string) {\r\n        return instance.post<recoveryType>('/auth/forgot', {\r\n            email,\r\n            from: \"test-front-admin <ivanin.jay@gmail.com>\",\r\n            message: `<div style=\"background-color: lime; padding: 15px\">password recovery link: \r\n                            <a href='http://localhost:3000/#/passwordnew/$token$'>link</a></div>`\r\n        })\r\n    },\r\n\r\n    newPass(password: string, token: string) {\r\n        return instance.post<recoveryType>('/auth/set-new-password', {\r\n            password: password,\r\n            resetPasswordToken: token,\r\n        })\r\n    }\r\n};\r\n\r\nexport const packsAPI = {\r\n    getPacks(user_id:string,pageCount: string, page: number, min: number, max: number, packName: string, sortPacks: SortPackType) {\r\n        return instance.get<getPacksType>(`/cards/pack`, {\r\n            params: {\r\n            user_id: (user_id ? user_id : ''),\r\n            pageCount, page, min, max, packName, sortPacks\r\n            }\r\n        })\r\n    },\r\n    addPacks(isPrivate: boolean, name: string) {\r\n        return instance.post<getPacksType>(`/cards/pack`, {\r\n            cardsPack: {\r\n                name,\r\n                private: isPrivate\r\n            }\r\n        })\r\n    },\r\n    delPacks(id: string) {\r\n        return instance.delete<getPacksType>(`/cards/pack?id=${id}`)\r\n    },\r\n    updatePacks(id: string, name: string) {\r\n        return instance.put<getPacksType>(`/cards/pack`, {\r\n                cardsPack: {\r\n                    _id: id,\r\n                    name: name\r\n                }\r\n            }\r\n        )\r\n    },\r\n}\r\n\r\nexport const cardsAPI = {\r\n    getCards(id: string, pageCount: string, page: number, cardQuestion: string, sortCards: SortCardsType) {\r\n        return instance.get<getCardType>(`/cards/card`, {\r\n            params: {\r\n                cardsPack_id: id, pageCount, page, cardQuestion, sortCards\r\n            }\r\n        })\r\n    },\r\n    addCards(cardsPack_id: string, question: string, answer: string) {\r\n        return instance.post<getCardType>(`/cards/card`, {\r\n            card: {\r\n                cardsPack_id,\r\n                question,\r\n                answer,\r\n                grade: Math.random() * 5,\r\n                shots: 0,\r\n            }\r\n        })\r\n    },\r\n    delCard(id: string) {\r\n        return instance.delete<getCardType>(`/cards/card?id=${id}`)\r\n    },\r\n    updateCard(id: string, question: string, answer: string) {\r\n        return instance.put<getCardType>(`/cards/card`, {\r\n                card: {\r\n                    _id: id,\r\n                    question: question,\r\n                    answer: answer\r\n                }\r\n            }\r\n        )\r\n    },\r\n    updateGrade(grade: number, card_id: string) {\r\n        return instance.put<getCardType>(`/cards/grade`, {\r\n                grade: grade,\r\n                card_id: card_id\r\n            }\r\n        )\r\n    },\r\n}\r\n\r\nexport type LoginType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n}\r\nexport type AuthResponseType = {\r\n    avatar: string\r\n    email: string\r\n    name: string\r\n    publicCardPacksCount: number\r\n    _id: string\r\n}\r\nexport type ResponseType<D = {}> = {\r\n    resultCode: number\r\n    messages: Array<string>\r\n    fieldsErrors: Array<string>\r\n    data: D\r\n}\r\nexport type recoveryType = {\r\n    error: string\r\n    success: boolean\r\n    info: string\r\n}\r\n\r\nexport type getPacksType = {\r\n    user_id?:string\r\n    cardPacks: PackType[]\r\n    cardPacksTotalCount: number // количество колод\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number // выбранная страница\r\n    pageCount: number // количество элементов на странице\r\n}\r\nexport type getCardType = {\r\n    cards: CardType[]\r\n    cardsTotalCount: number\r\n}","import {AuthResponseType} from \"./api/api\";\r\n\r\nlet initialState: AuthResponseType = {\r\n    avatar: '',\r\n    email: '',\r\n    name: '',\r\n    publicCardPacksCount: 0,\r\n    _id: '',\r\n}\r\n\r\nexport const profileReducer = (state = initialState, action: ActionsType): AuthResponseType => {\r\n    switch (action.type) {\r\n        case 'PROFILE/SET-PROFILE':\r\n            return {...state, ...action.data}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n// ActionsCreators\r\nexport const setProfileAC = (data: AuthResponseType) => {\r\n    return ({type: 'PROFILE/SET-PROFILE', data} as const)\r\n}\r\n\r\n// Types\r\nexport type SetProfileType = ReturnType<typeof setProfileAC>\r\ntype ActionsType = SetProfileType","// todo: add Loader here\r\n\r\nlet initialState: InitialStateType = {\r\n    isInitilize: false,\r\n    error:null,\r\n    message:null,\r\n    status: 'idle',\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-IS-INITIALIZE':\r\n            return {...state, isInitilize: action.isInitilize}\r\n        case 'APP/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        case 'APP/SET-MESSAGE':\r\n            return {...state, message: action.message}\r\n        case 'APP/SET-STATUS':\r\n            return {...state, status: action.status}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport const setIsInitializeAC = (isInitilize: boolean) => {\r\n    return ({type: 'APP/SET-IS-INITIALIZE', isInitilize} as const)\r\n}\r\n\r\nexport const setAppError = (error: string) => {\r\n    return ({type: 'APP/SET-ERROR', error} as const)\r\n}\r\n\r\nexport const setAppMessage = (message: string) => {\r\n    return ({type: 'APP/SET-MESSAGE', message} as const)\r\n}\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: 'APP/SET-STATUS', status} as const)\r\n\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n// Types\r\ntype InitialStateType = {\r\n    isInitilize: boolean\r\n    error: null | string\r\n    message: null | string\r\n    status: RequestStatusType\r\n}\r\n\r\nexport type SetAppStatusAT = ReturnType<typeof setAppStatusAC>\r\n\r\ntype ActionsType =\r\n    | ReturnType<typeof setIsInitializeAC>\r\n    | ReturnType<typeof setAppError>\r\n    | ReturnType<typeof setAppMessage>\r\n    | SetAppStatusAT\r\n\r\n\r\n","import {authAPI} from \"./api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {setProfileAC, SetProfileType} from \"./profileReducer\";\r\nimport {setAppStatusAC, SetAppStatusAT, setIsInitializeAC} from \"./appReducer\";\r\n\r\nlet initialState: InitialStateType = {\r\n    isLoggedIn: false,\r\n    error: null,\r\n}\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'AUTH/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.value}\r\n        case 'AUTH/SET-IS-ERROR':\r\n            return {...state, error: action.error}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n// ActionsCreators\r\nexport const setIsLoggedInAC = (value: boolean) => {\r\n    return ({type: 'AUTH/SET-IS-LOGGED-IN', value} as const)\r\n}\r\nexport const setIsErrorAC = (error: string | null) => {\r\n    return ({type: 'AUTH/SET-IS-ERROR', error} as const)\r\n}\r\n\r\n// Thunks\r\nexport const LoginTC = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    authAPI.login({email, password, rememberMe})\r\n        .then(res => {\r\n                dispatch(setIsLoggedInAC(true))\r\n                dispatch(setProfileAC(res.data))\r\n            }\r\n        )\r\n        .catch(e => {\r\n                dispatch(setIsErrorAC(e.response.data.error))\r\n            }\r\n        )\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\nexport const InitializeTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    authAPI.me()\r\n        .then(res => {\r\n                dispatch(setIsLoggedInAC(true))\r\n                dispatch(setProfileAC(res.data))\r\n            }\r\n        )\r\n        .catch(() => {\r\n                dispatch(setIsLoggedInAC(false))\r\n            }\r\n        )\r\n        .finally(() => {\r\n            dispatch(setIsInitializeAC(true))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\nexport const LogoutTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    authAPI.logout()\r\n        .then(() => {\r\n                dispatch(setIsLoggedInAC(false))\r\n                dispatch(setIsErrorAC(null))\r\n            }\r\n        )\r\n        .catch(e => {\r\n                dispatch(setIsErrorAC(e.response.data.error))\r\n            }\r\n        )\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\n// Types\r\ntype InitialStateType = {\r\n    isLoggedIn: boolean\r\n    error: string | null\r\n}\r\ntype ActionsType =\r\n    | ReturnType<typeof setIsLoggedInAC>\r\n    | ReturnType<typeof setIsErrorAC>\r\n    | SetProfileType\r\n    | SetAppStatusAT\r\n\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Header.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {LogoutTC} from \"../../m2-bll/authReducer\";\r\nimport {AppStoreType} from \"../../m2-bll/store\";\r\nimport {LinearProgress} from \"@mui/material\";\r\n\r\nexport const Header = () => {\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const onLogout = () => {\r\n        dispatch(LogoutTC())\r\n    }\r\n\r\n    return (\r\n        <div className={s.header}>\r\n            <div className={s.logo}>BrightCards</div>\r\n            <div className={s.links}>\r\n                {isLoggedIn\r\n                    ? <>\r\n                        <NavLink className={s.item} to={'/profile'}>Profile</NavLink>\r\n                        <a className={s.link} onClick={onLogout}>Log out</a>\r\n                    </>\r\n                    : <>\r\n                        <NavLink className={s.item} to={'/login'}>Login</NavLink>\r\n                        <NavLink className={s.item} to={'/registration'}>Registration</NavLink>\r\n                        <NavLink className={s.item} to={'/passwordrecovery'}>Recovery Password</NavLink>\r\n                    </>\r\n                }\r\n                <NavLink className={s.item} to={'/packs'}>Packs</NavLink>\r\n                <NavLink className={`${s.item} ${s.notDone}`} to={'/packsdesigned'}>PacksDesigned</NavLink>\r\n                {/*<NavLink className={s.item} to={'/cards'}>Cards</NavLink>*/}\r\n                {/*<NavLink className={s.item} to={'/tests'}>Tests</NavLink>*/} {/*type /test to see*/}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport const Page404 = () => {\r\n    return (\r\n        <div>Page404</div>\r\n    );\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.scss'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        //type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.scss'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n  onChangeChecked?: (checked: boolean) => void\r\n  spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n  {\r\n    type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n    onChange, onChangeChecked,\r\n    className, spanClassName,\r\n    children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n    ...restProps// все остальные пропсы попадут в объект restProps\r\n  }\r\n) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e)\r\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n  }\r\n\r\n  const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      <input\r\n        type={'checkbox'}\r\n        onChange={onChangeCallback}\r\n        className={finalInputClassName}\r\n\r\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n      />\r\n      {children && <span className={s.spanClassName}>{children}</span>}\r\n    </label> // благодаря label нажатие на спан передастся в инпут\r\n  )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport s from './SuperEditableSpan.module.scss'\r\nimport SuperInputText from \"../c1-SuperInputText/SuperInputText\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n  onChangeText?: (value: string) => void\r\n  onEnter?: () => void\r\n  error?: string\r\n  spanClassName?: string\r\n\r\n  spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n  {\r\n    autoFocus, // игнорировать изменение этого пропса\r\n    onBlur,\r\n    onEnter,\r\n    spanProps,\r\n\r\n    ...restProps// все остальные пропсы попадут в объект restProps\r\n  }\r\n) => {\r\n  const [editMode, setEditMode] = useState<boolean>(false)\r\n  const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n  const onEnterCallback = () => {\r\n    setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n    onEnter && onEnter() // оставлено на будущее, чтобы можно было возвращать событие по enter\r\n  }\r\n  const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n    onBlur && onBlur(e)\r\n  }\r\n  const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n    setEditMode(true) // включить editMode при двойном клике\r\n\r\n    onDoubleClick && onDoubleClick(e)\r\n  }\r\n\r\n  const spanClassName = `${s.editableSpan} ${className}`\r\n\r\n  return (\r\n    <>\r\n      {editMode\r\n        ? (\r\n          <SuperInputText\r\n            autoFocus // пропсу с булевым значением не обязательно указывать true\r\n            onBlur={onBlurCallback}\r\n            onEnter={onEnterCallback}\r\n\r\n            {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n          />\r\n        ) : (\r\n          <span\r\n            onDoubleClick={onDoubleClickCallBack}\r\n            className={spanClassName}\r\n\r\n            {...restSpanProps}\r\n          >\r\n            {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n            ✎ {children || restProps.value}\r\n                    </span>\r\n        )\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","import React, {ChangeEvent, DetailedHTMLProps, SelectHTMLAttributes} from 'react'\r\nimport s from './SuperSelect.module.scss'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n  options?: string[]\r\n  onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n  {\r\n    options,\r\n    onChange, onChangeOption,\r\n    ...restProps\r\n  }\r\n) => {\r\n  const mappedOptions: any[] = options ? options.map((o, i) => (\r\n    <option className={s.option} key={'option-' + i} value={o}>{o}</option>\r\n  )) : []\r\n\r\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    onChange && onChange(e)\r\n    onChangeOption && onChangeOption(e.currentTarget.value)\r\n\r\n  }\r\n\r\n  return (\r\n    <select className={s.select} onChange={onChangeCallback} {...restProps}>\r\n      {mappedOptions}\r\n    </select>\r\n  )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperRadio.module.scss'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: string[]\r\n    onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n      onChange && onChange(e)\r\n      onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => { // map options with key\r\n        return <label className={s.label} key={name + '-' + i}>\r\n            <input\r\n                className={s.radio}\r\n                type={'radio'}\r\n                name={name}\r\n                checked={o === value}\r\n                value={o}\r\n                onChange={onChangeCallback}\r\n            />\r\n            {o}\r\n        </label>\r\n    }) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","const initialState: InitialStateType = {\r\n    testValue: ''\r\n}\r\n\r\nexport const testReducer = (state = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case 'SET-TEST-VALUE':\r\n            return {...state, testValue: action.newValue}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setTestValueAC = (newValue: string) =>\r\n    ({type: 'SET-TEST-VALUE', newValue} as const)\r\n\r\n\r\ntype InitialStateType = {\r\n    testValue: string\r\n}\r\n\r\ntype ActionType = ReturnType<typeof setTestValueAC>","import React from 'react';\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {setTestValueAC} from \"../../../n1-main/m2-bll/testReducer\";\r\nimport s from './TestForReducer.module.scss'\r\n\r\nexport const TestForReducer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    let reducerValue = useSelector<AppStoreType, string>(state => state.testReducer.testValue)\r\n\r\n    return <div className={s.testForReducer}>\r\n        <div>Hi, I am test for reducer. I will set 'test value' to state and will show it at the input, if you click the\r\n            button.\r\n        </div>\r\n        <div>\r\n            <SuperInputText value={reducerValue}/>\r\n            <SuperButton onClick={() => {dispatch(setTestValueAC('test value'))}}>Click Me</SuperButton>\r\n        </div>\r\n    </div>\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport s from './Examples.module.scss'\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../../n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperEditableSpan from \"../../../n1-main/m1-ui/common/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperSelect from \"../../../n1-main/m1-ui/common/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"../../../n1-main/m1-ui/common/c6-SuperRadio/SuperRadio\";\r\nimport {TestForReducer} from \"../TestForReducer/TestForReducer\";\r\n\r\nexport const Examples = () => {\r\n    const [text, setText] = useState<string>('') // for SuperInputText\r\n    const [checked, setChecked] = useState<boolean>(false) // for SuperCheckbox\r\n    const [value, setValue] = useState<string>('') // for SuperEditableSpan\r\n    const arr = ['x', 'y', 'z'] // for SuperSelect & SuperRadio\r\n    const [valueForSsSr, onChangeOption] = useState(arr[1]) // for SuperSelect & SuperRadio\r\n\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => { // for SuperButton\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div className={s.examples}>\r\n            <TestForReducer />\r\n            <h1>This is examples of common components.</h1>\r\n            <hr/>\r\n            <div className={s.column}>\r\n                <h2>с1-SuperInputText:</h2>\r\n                <div className={s.inputContainer}>\r\n                    <SuperInputText\r\n                        value={text}\r\n                        onChangeText={setText}\r\n                        onEnter={showAlert}\r\n                        error={error}\r\n                        spanClassName={s.testSpanError}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <SuperInputText\r\n                        className={s.blue} // проверьте, работает ли смешивание классов\r\n                    />\r\n                </div>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div className={s.column}>\r\n                <h2>с2-SuperButton:</h2>\r\n                <SuperButton className={s.superButton}>\r\n                    default\r\n                </SuperButton>\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                    className={s.superButton}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n                <SuperButton disabled className={s.superButton}>\r\n                    disabled\r\n                </SuperButton>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div className={s.column}>\r\n                <h2>с3-SuperCheckbox:</h2>\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div>\r\n                <h2>с4-SuperEditableSpan:</h2>\r\n                <div className={s.SuperEditableSpanContainer}>\r\n                    <SuperEditableSpan\r\n                        value={value}\r\n                        onChangeText={setValue}\r\n                        spanProps={{children: value ? undefined : 'enter text...'}}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div className={s.column}>\r\n                <h2>с5-SuperSelect and SuperRadio:</h2>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={valueForSsSr}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n                <div className={s.radioContainer}>\r\n                    <SuperRadio\r\n                        options={arr}\r\n                        value={valueForSsSr}\r\n                        onChangeOption={onChangeOption}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}","import s from \"./Title.module.scss\";\r\n\r\n\r\nexport default function Title() {\r\n   return (\r\n      <h1 className={s.title}>It-incubator</h1>\r\n   );\r\n}\r\n\r\n","import s from \"./Subtitle.module.scss\";\r\n\r\n\r\nexport default function Subtitle(props) {\r\n   return (\r\n      <h2 className={s.subtitle} style={props.style}>{props.subtitle}</h2>\r\n   );\r\n}\r\n\r\n","\r\nimport s from \"./CheckboxLabel.module.scss\";\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\nexport default function CheckboxLabel(props) {\r\n   return (\r\n      <div className={s.checkboxLabels}>\r\n         <Checkbox />\r\n         <span className={s.label}>{props.label}</span>\r\n      </div>\r\n   );\r\n}","export default __webpack_public_path__ + \"static/media/shape.109a1739.svg\";","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from \"./Input.module.scss\";\r\n\r\nimport icon from './../../../img/shape.svg';\r\nimport {inputDataType} from \"../../../../n2-features/f1-auth/a1-login/LoginForm\";\r\n\r\nexport const Input: React.FC<PropsType> = (\r\n    {inputData, value, onChange, onChangeText, ...restProps}\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n\r\n    const changeTypeHandler = ()=>{\r\n       inputData.type === 'password'? inputData.type = '' : inputData.type = 'password'\r\n    }\r\n\r\n\r\n   return (\r\n      <div className={s.input}>\r\n         <input\r\n             id={inputData.id}\r\n             type={inputData.type}\r\n             name={inputData.name}\r\n             required {...restProps}\r\n             value={value}\r\n             onChange={onChangeCallback}\r\n         />\r\n         <label className={s.placeholder} htmlFor={inputData.for}>{inputData.label}</label>\r\n         <img onClick={changeTypeHandler} className={s.icon} src={icon} alt=\"image\" style={inputData.style} />\r\n      </div>\r\n   );\r\n}\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype PropsType = DefaultInputPropsType & {\r\n    inputData: inputDataType\r\n    value?: string | number\r\n    onChangeText?: (value: string) => void\r\n}\r\n\r\n\r\n","import s from \"./Button.module.scss\";\r\nimport {StyleType} from \"../../../../types/types\";\r\n\r\n// в месте, где используется кнопка, если нужно, стилизуем кнопку\r\n// const styleButton = {\r\n//    padding: \"19px 61px\",\r\n//    fontSize: \"14px\",\r\n//    letterSpacing: \"0.8px\"\r\n// }\r\n\r\n// style={styleButton}\r\n\r\nexport default function Button(props: PropsType) {\r\n    return (\r\n        <button className={s.btn} style={props.style} type=\"submit\" onClick={props.onClick}\r\n                disabled={props.disabled}>{props.label}</button>\r\n    );\r\n}\r\n\r\ntype PropsType = {\r\n    style?: StyleType\r\n    type?: string\r\n    label?: string\r\n    onClick?: () => void\r\n    disabled?: boolean\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport s from \"./LoginForm.module.scss\";\r\nimport {Navigate, NavLink} from \"react-router-dom\";\r\nimport Title from \"../../../assets/components/common/title/Title.jsx\";\r\nimport Subtitle from \"../../../assets/components/common/subtitle/Subtitle.jsx\";\r\nimport CheckboxLabel from \"../../../assets/components/common/checkbox/CheckboxLabel.jsx\";\r\nimport {Input} from \"../../../assets/components/common/input/Input\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {useFormik} from \"formik\";\r\nimport {LoginTC} from \"../../../n1-main/m2-bll/authReducer\";\r\nimport Button from \"../../../assets/components/common/button/Button\";\r\n\r\n// данные для input email\r\nconst inputData1: inputDataType = {\r\n    id: \"email\",\r\n    type: \"email\",\r\n    name: \"email\",\r\n    for: \"email\",\r\n    label: \"Email\",\r\n    style: {\r\n        display: \"none\"\r\n    }\r\n}\r\n\r\n// данные для input password\r\nconst inputData2: inputDataType = {\r\n    id: \"password\",\r\n    type: \"password\",\r\n    name: \"password\",\r\n    for: \"password\",\r\n    label: \"Password\",\r\n    style: {\r\n        display: \"inlineBlock\"\r\n    }\r\n}\r\n\r\nexport default function LoginForm() {\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.auth.isLoggedIn)\r\n    const errorFromServer = useSelector<AppStoreType, string | null>(state => state.auth.error)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(LoginTC(values.email, values.password, values.rememberMe));\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            }\r\n            return errors\r\n        },\r\n    },);\r\n\r\n    if (isLoggedIn) {\r\n        return <Navigate to=\"/profile\"/>\r\n    }\r\n\r\n    return (\r\n        <form action=\"\" onSubmit={formik.handleSubmit}>\r\n            <div className={s.contentWrap}>\r\n                <Title/>\r\n                <Subtitle subtitle=\"Sign In\"/>\r\n                <Input\r\n                    inputData={inputData1}\r\n                    {...formik.getFieldProps('email')}\r\n                />\r\n                {formik.touched.email && formik.errors.email ? (\r\n                    <div className={s.error}>{formik.errors.email}</div>\r\n                ) : null}\r\n                <Input\r\n                    inputData={inputData2}\r\n                    {...formik.getFieldProps('password')}\r\n                />\r\n                {formik.touched.password && formik.errors.password ? (\r\n                    <div className={s.error}>{formik.errors.password}</div>\r\n                ) : null}\r\n                {errorFromServer ? <span className={s.error}>{errorFromServer}</span> : null}\r\n                <div className={s.block}>\r\n                    <CheckboxLabel\r\n                        id=\"rememberMe\"\r\n                        label=\"Remember Me\"\r\n                        {...formik.getFieldProps('rememberMe')}\r\n                    />\r\n                    <NavLink className={s.linkForgotPass} to={'/passwordrecovery'}>Forgot password</NavLink>\r\n                </div>\r\n                <Button label=\"Login\" type={'submit'}/>\r\n                <span className={s.question}>Don’t have an account?</span>\r\n                <NavLink className={s.linkSignUp} to={'/registration'}>Sign Up</NavLink>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport type inputDataType = {\r\n    id?: string\r\n    type?: string\r\n    name?: string\r\n    for?: string\r\n    label?: string\r\n    style: {\r\n        display: string\r\n    }\r\n}\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {registrationAPI} from \"./api/api\";\r\nimport {setAppStatusAC, SetAppStatusAT} from \"./appReducer\";\r\n\r\nconst initialState: InitialStateType = {\r\n    status: 'idle',\r\n    error: null,\r\n    message: null,\r\n}\r\n\r\nexport const registrationReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"registrationReducer/SET-REGISTER-STATUS\":\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        case \"registrationReducer/SET-REGISTER-ERROR\":\r\n            return {\r\n                ...state, error: action.error\r\n            }\r\n        case \"registrationReducer/SET-REGISTER-MESSAGE\":\r\n            return {\r\n                ...state, message: action.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setRegisterStatus = (status: RequestStatusType) =>\r\n    ({type: \"registrationReducer/SET-REGISTER-STATUS\", status} as const)\r\nexport const setRegisterError = (error: string | null) =>\r\n    ({type: \"registrationReducer/SET-REGISTER-ERROR\", error} as const)\r\nexport const setRegisterMessage = (message: string | null) =>\r\n    ({type: \"registrationReducer/SET-REGISTER-MESSAGE\", message} as const)\r\n\r\n\r\nexport const createNewUser = (email: string, password: string) => (dispatch: Dispatch<ActionsType /*| SetAppErrorActionType | SetAppStatusActionType*/>) => {\r\n    dispatch(setRegisterStatus('loading'))\r\n    dispatch(setAppStatusAC('loading'))\r\n    registrationAPI.registerUser(email, password)\r\n        .then(res => {\r\n            dispatch(setRegisterMessage('success!'))\r\n            dispatch(setRegisterStatus('succeeded'))\r\n            setTimeout(() => {\r\n                dispatch(setRegisterStatus('register_success'))\r\n                dispatch(setRegisterMessage(null))\r\n                dispatch(setRegisterStatus('idle'))\r\n            }, 2000)\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setRegisterError(error.response.data.error))\r\n            dispatch(setRegisterStatus('failed'))\r\n            setTimeout(() => {\r\n                dispatch(setRegisterError(null))\r\n            }, 2000)\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\n\r\ntype InitialStateType = {\r\n    status: RequestStatusType\r\n    error: string | null\r\n    message: string | null\r\n}\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed' | 'register_success'\r\n\r\ntype ActionsType =\r\n    | ReturnType<typeof setRegisterStatus>\r\n    | ReturnType<typeof setRegisterError>\r\n    | ReturnType<typeof setRegisterMessage>\r\n    | SetAppStatusAT\r\n","import s from \"./RegistrationForm.module.scss\";\r\nimport Title from \"../../../assets/components/common/title/Title.jsx\";\r\nimport Subtitle from \"../../../assets/components/common/subtitle/Subtitle.jsx\";\r\nimport { Input } from \"../../../assets/components/common/input/Input\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppStoreType } from \"../../../n1-main/m2-bll/store\";\r\nimport { createNewUser, RequestStatusType } from \"../../../n1-main/m2-bll/registrationReducer\";\r\nimport {Navigate, NavLink} from \"react-router-dom\";\r\nimport React, { ChangeEvent, useState } from \"react\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport Button from \"../../../assets/components/common/button/Button\";\r\n\r\n// данные для input email\r\nconst inputData1 = {\r\n   id: \"email\",\r\n   type: \"email\",\r\n   name: \"email\",\r\n   for: \"email\",\r\n   label: \"Email\",\r\n   style: {\r\n      display: \"none\"\r\n   }\r\n}\r\n\r\n// данные для input password\r\nconst inputData2 = {\r\n   id: \"password\",\r\n   type: \"password\",\r\n   name: \"password\",\r\n   for: \"password\",\r\n   label: \"Password\",\r\n   style: {\r\n      display: \"inlineBlock\"\r\n   }\r\n}\r\n\r\n// данные для input confirm password\r\nconst inputData3 = {\r\n   id: \"checkPassword\",\r\n   type: \"password\",\r\n   name: \"checkPassword\",\r\n   for: \"checkPassword\",\r\n   label: \"Confirm password\",\r\n   style: {\r\n      display: \"inlineBlock\"\r\n   }\r\n}\r\n\r\n// стилизация кнопок\r\nconst styleButton1 = {\r\n   backgroundColor: \"#D7D8EF\",\r\n   color: \"#21268F\",\r\n   width: \"124px\",\r\n   boxShadow: \"none\"\r\n}\r\n\r\nconst styleButton2 = {\r\n   width: \"187px\"\r\n}\r\n\r\nexport default function RegistrationForm() {\r\n   const schemeCreator = () => {\r\n      return yup.object().shape({\r\n         email: yup.string().email('Invalid email').required('Required').trim(),\r\n         password: yup.string()\r\n            .matches(/^[a-zA-Z0-9]+/, 'Password can only contain Latin letters and numbers.')\r\n            .required('Required')\r\n            .min(7, 'Password must be more than 7 characters...'),\r\n         checkPassword: yup.string()\r\n            .required('Required'),\r\n      })\r\n   }\r\n\r\n   const dispatch = useDispatch()\r\n   const [errorSelf, setErrorSelf] = useState<string | null>(null)\r\n   const [showPas, setShowPass] = useState(false)\r\n\r\n   const error = useSelector<AppStoreType, string | null>(state => state.registration.error)\r\n   const message = useSelector<AppStoreType, string | null>(state => state.registration.message)\r\n   const status = useSelector<AppStoreType, RequestStatusType>(state => state.registration.status)\r\n\r\n   const createNewUserHandler = (email: string, password: string) => {\r\n      dispatch(createNewUser(email, password))\r\n   }\r\n   const showPasswordHandler = (value: ChangeEvent<HTMLInputElement>) => {\r\n      setShowPass(value.currentTarget.checked)\r\n   }\r\n   const onKeypressHandler = () => {\r\n      setErrorSelf(null)\r\n   }\r\n\r\n   const formik = useFormik({\r\n      initialValues: {\r\n         email: '',\r\n         password: '',\r\n         checkPassword: '',\r\n      },\r\n      onSubmit: (values) => {\r\n         if (values.email.trim() !== \"\" && values.password === values.checkPassword) {\r\n            formik.resetForm()\r\n            createNewUserHandler(values.email, values.password)\r\n         } else {\r\n            if (values.password !== values.checkPassword) {\r\n               setErrorSelf('password dont equal')\r\n               setTimeout(() => {\r\n                  setErrorSelf(null)\r\n               }, 2000)\r\n            }\r\n         }\r\n      },\r\n      validationSchema: schemeCreator()\r\n   });\r\n\r\n   if (status === 'register_success') {\r\n      return <Navigate to={\"/login\"} />\r\n   }\r\n\r\n   return (\r\n      <form onSubmit={formik.handleSubmit}>\r\n         {status === 'loading'\r\n            ? <h1>...loading</h1>\r\n            : <div>\r\n               <div className={s.contentWrap}>\r\n                  <Title />\r\n                  <Subtitle subtitle=\"Sign Up\" />\r\n                  <span style={{ color: 'red' }}>{error && error}</span>\r\n                  <span style={{ color: 'green' }}>{message && message}</span>\r\n                  <Input\r\n                     inputData={inputData1}\r\n                     {...formik.getFieldProps('email')}\r\n                  />\r\n                  <span className={s.error}>{formik.touched.email ? formik.errors.email : ''}</span>\r\n                  <Input\r\n                     inputData={inputData2}\r\n                     {...formik.getFieldProps('password')}\r\n                  />\r\n                  <span className={s.error}>{formik.touched.password && formik.errors.password ? formik.errors.password : ''}</span>\r\n                  <Input\r\n                     inputData={inputData3}\r\n                     {...formik.getFieldProps('checkPassword')}\r\n                  />\r\n                  <span className={s.error}>{formik.touched.checkPassword && formik.errors.checkPassword ? formik.errors.checkPassword : ''}</span>\r\n                  <div className={s.block}>\r\n                     <Button label=\"Cancel\" style={styleButton1} />\r\n                     <Button type=\"submit\" label=\"Register\" style={styleButton2} />\r\n                  </div>\r\n                  <NavLink className={s.link} to=\"/login\">Login</NavLink>\r\n               </div>\r\n            </div>\r\n         }\r\n      </form >\r\n   );\r\n}\r\n\r\n\r\n","const initialState: InitialStateType = {\r\n    cardPacks: {\r\n        totalCount: 10, // for pagination\r\n        pageCount: 10, // for pagination\r\n        page: 1, // for pagination\r\n        max: 200, // for range slider\r\n        min: 0, // for range slider\r\n        packName: '', // for search\r\n        sortPacks: null, // for sorting\r\n    },\r\n    cards: {\r\n        totalCount: 10,\r\n        pageCount: 10,\r\n        page: 1,\r\n        selectedCardId: '',\r\n        questionText: '',\r\n        sortCards: null\r\n    }\r\n}\r\n\r\nexport const findAndPaginationReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        // for CardPacks\r\n        case \"FIND-AND-PAGINATION/SET-CARDS-PACKS-COUNT\":\r\n            return {...state, cardPacks: {...state.cardPacks, max: action.max, min: action.min}}\r\n        case \"FIND-AND-PAGINATION/SET-CARD-PACKS-CURRENT-PAGE\":\r\n        case \"FIND-AND-PAGINATION/SET-CARD-PACKS-PAGE-COUNT\":\r\n        case \"FIND-AND-PAGINATION/SET-CARD-PACKS-TOTAL-COUNT\":\r\n        case \"FIND-AND-PAGINATION/SET-SEARCH-PACK-NAME\":\r\n        case \"FIND-AND-PAGINATION/SET-SORT-PACKS\":\r\n            return {...state, cardPacks: {...state.cardPacks, ...action.payload}}\r\n\r\n        // for Cards\r\n        case \"FIND-AND-PAGINATION/SET-CARDS-TOTAL-COUNT\":\r\n        case \"FIND-AND-PAGINATION/SET-CARDS-PAGE-COUNT\":\r\n        case 'FIND-AND-PAGINATION/SET-CARDS-CURRENT-PAGE':\r\n        case 'FIND-AND-PAGINATION/SET-SEARCH-QUESTION':\r\n        case \"FIND-AND-PAGINATION/SET-SELECTED-CARD-ID\":\r\n        case \"FIND-AND-PAGINATION/SET-SORT-CARDS\":\r\n            return {...state, cards: {...state.cards, ...action.payload}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype InitialStateType = {\r\n    cardPacks: {\r\n        totalCount: number\r\n        pageCount: number\r\n        page: number\r\n        min: number\r\n        max: number\r\n        packName: string\r\n        sortPacks: SortPackType\r\n    }\r\n    cards: {\r\n        totalCount: number\r\n        pageCount: number\r\n        page: number\r\n        selectedCardId: string\r\n        questionText: string\r\n        sortCards: SortCardsType\r\n    }\r\n}\r\n\r\n//AC for CardPacks:\r\nexport const setCardPacksTotalCountAC = (totalCount: number) =>\r\n    ({type: 'FIND-AND-PAGINATION/SET-CARD-PACKS-TOTAL-COUNT', payload: {totalCount}} as const)\r\nexport const setCardPacksPageCountAC = (pageCount: number) =>\r\n    ({type: 'FIND-AND-PAGINATION/SET-CARD-PACKS-PAGE-COUNT', payload: {pageCount}} as const)\r\nexport const setCardPacksCurrentPageAC = (page: number) =>\r\n    ({type: 'FIND-AND-PAGINATION/SET-CARD-PACKS-CURRENT-PAGE', payload: {page}} as const)\r\nexport const setCardsPacksCountAC = (numbers: Array<number> ) =>  // min and max cardsPacks\r\n    ({type: 'FIND-AND-PAGINATION/SET-CARDS-PACKS-COUNT', min: numbers[0], max: numbers[1]} as const)\r\nexport const setSearchPackNameAC = (packName: string) =>\r\n    ({type: 'FIND-AND-PAGINATION/SET-SEARCH-PACK-NAME', payload: {packName}} as const)\r\nexport const setSortPacksAC = (sortPacks: SortPackType) =>\r\n    ({type: 'FIND-AND-PAGINATION/SET-SORT-PACKS', payload: {sortPacks}} as const)\r\n\r\n//AC for Cards:\r\nexport const setCardsTotalCountAC = (totalCount: number) =>\r\n    ({type: 'FIND-AND-PAGINATION/SET-CARDS-TOTAL-COUNT', payload: {totalCount}} as const)\r\nexport const setCardsPageCountAC = (pageCount: number) =>\r\n    ({type: 'FIND-AND-PAGINATION/SET-CARDS-PAGE-COUNT', payload: {pageCount}} as const)\r\nexport const setCardsCurrentPageAC = (page: number) =>\r\n    ({type: 'FIND-AND-PAGINATION/SET-CARDS-CURRENT-PAGE', payload: {page}} as const)\r\nexport const setSearchQuestionAC = (questionText: string) =>\r\n    ({type: 'FIND-AND-PAGINATION/SET-SEARCH-QUESTION', payload: {questionText}} as const)\r\nexport const setSelectedCardIdAC = (selectedCardId: string) =>\r\n    ({type: 'FIND-AND-PAGINATION/SET-SELECTED-CARD-ID', payload: {selectedCardId}} as const)\r\nexport const setSortCardsAC = (sortCards: SortCardsType) =>\r\n    ({type: 'FIND-AND-PAGINATION/SET-SORT-CARDS', payload: {sortCards}} as const)\r\n\r\nexport type SetCardPacksTotalCountType = ReturnType<typeof setCardPacksTotalCountAC>\r\nexport type SetCardsTotalCountType = ReturnType<typeof setCardsTotalCountAC>\r\nexport type SetSelectedCardIdType = ReturnType<typeof setSelectedCardIdAC>\r\n\r\ntype ActionType =\r\n    | SetCardPacksTotalCountType\r\n    | ReturnType<typeof setCardPacksPageCountAC>\r\n    | ReturnType<typeof setCardPacksCurrentPageAC>\r\n    | ReturnType<typeof setCardsPacksCountAC>\r\n    | SetCardsTotalCountType\r\n    | ReturnType<typeof setCardsPageCountAC>\r\n    | ReturnType<typeof setCardsCurrentPageAC>\r\n    | ReturnType<typeof setSearchPackNameAC>\r\n    | ReturnType<typeof setSortPacksAC>\r\n    | ReturnType<typeof setSearchQuestionAC>\r\n    | SetSelectedCardIdType\r\n    | ReturnType<typeof setSortCardsAC>\r\n\r\nexport type SortPackType = '0name' | '1name' | '0cardsCount' | '1cardsCount' | '0updated'| '1updated' | null\r\nexport type SortCardsType = '0answer' | '1answer' | '0question' | '1question' | '0grade' | '1grade' | '0updated' | '1updated' | null\r\n","import {Dispatch} from \"redux\";\r\nimport {packsAPI} from \"./api/api\";\r\nimport {AppStoreType} from \"./store\";\r\nimport {setCardPacksTotalCountAC, SetCardPacksTotalCountType} from \"./findAndPaginationReducer\";\r\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {setAppStatusAC, SetAppStatusAT} from \"./appReducer\";\r\n\r\nexport const initialState: packsStateType = {\r\n    cardPacks: [],\r\n    packUser_id: '',\r\n}\r\n\r\nexport const packsReducer = (state = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case 'pack/GET-CARD-PACKS':\r\n            return {...state, cardPacks: action.cardPacks}\r\n        case 'pack/GET-USER-ID':\r\n            return {...state, packUser_id: action.packUser_id}\r\n        case \"pack/ADD-CARD-PACKS\":\r\n            return {...state, name: action.name}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const getPacksAC = (cardPacks: PackType[]) => ({type: \"pack/GET-CARD-PACKS\", cardPacks} as const)\r\nexport const getUserIdAC = (packUser_id: string) => ({type: \"pack/GET-USER-ID\", packUser_id} as const)\r\nexport const addPacksAC = (name: string) => ({type: \"pack/ADD-CARD-PACKS\", name} as const)\r\n\r\n\r\nexport const getPacksTC = (): ThunkType => (dispatch: Dispatch<ActionType>, getState: () => AppStoreType) => {\r\n    const {page, min, max, packName, sortPacks} = getState().findAndPagination.cardPacks\r\n    const pageCount = getState().findAndPagination.cardPacks.pageCount.toString()\r\n    const user_id = getState().packs.packUser_id\r\n\r\n    dispatch(setAppStatusAC('loading'))\r\n    return packsAPI.getPacks(user_id,pageCount, page, min, max, packName, sortPacks)\r\n        .then((res) => {\r\n            dispatch(getPacksAC(res.data.cardPacks))\r\n            dispatch(setCardPacksTotalCountAC(res.data.cardPacksTotalCount))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\nexport const addPacksTC = (cardPackName: string): ThunkType => (dispatch: ThunkDispatch<AppStoreType, unknown, ActionType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    packsAPI.addPacks(false, cardPackName)\r\n        .then((res) => {\r\n            dispatch(addPacksAC(cardPackName))\r\n            dispatch(getPacksTC())\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\n\r\nexport const delPacksTC = (id:string)=>(dispatch: ThunkDispatch<AppStoreType, unknown, ActionType>)=>{\r\n    dispatch(setAppStatusAC('loading'))\r\n    packsAPI.delPacks(id)\r\n        .then(()=>{\r\n            dispatch(getPacksTC())\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\nexport const updatePacksTC = (id:string,name:string)=>(dispatch: ThunkDispatch<AppStoreType, unknown, ActionType>)=>{\r\n    dispatch(setAppStatusAC('loading'))\r\n    packsAPI.updatePacks(id,name)\r\n        .then(()=>{\r\n            dispatch(getPacksTC())\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\ntype ThunkType = ThunkAction<void, AppStoreType, unknown, ActionType>\r\n\r\nexport type PackType = {\r\n    _id: string\r\n    user_id: string\r\n    user_name: string\r\n    private: boolean\r\n    name: string\r\n    path: string\r\n    grade: number\r\n    cardsCount: number\r\n    type: string\r\n    rating: number\r\n    created: string\r\n    updated: string\r\n}\r\n\r\nexport type packsStateType = {\r\n    cardPacks: PackType[]\r\n    packUser_id: string\r\n}\r\n\r\ntype ActionType =\r\n    | ReturnType<typeof getPacksAC>\r\n    | ReturnType<typeof getUserIdAC>\r\n    | SetCardPacksTotalCountType\r\n    | ReturnType<typeof addPacksAC>\r\n    | SetAppStatusAT\r\n\r\n\r\n//todo: add catch. For example if no internet.","import React, {useEffect, useState} from 'react';\r\nimport s from './Paginations.module.scss'\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport SuperSelect from \"../../../n1-main/m1-ui/common/c5-SuperSelect/SuperSelect\";\r\nimport selectStyle from '../../../n1-main/m1-ui/common/c5-SuperSelect/SuperSelect.module.scss'\r\nimport {useSelector} from \"react-redux\";\r\nimport {getPacksTC} from \"../../../n1-main/m2-bll/packsReducer\";\r\n\r\nexport const Pagination: React.FC<PropsType> = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.cardPacksTotalCount / props.pageCount); // count of ALL pages, before the paginator\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    const portionSize = 10; // Hom much pagination buttons to how\r\n    const portionCount = Math.ceil(pagesCount / portionSize) // how much total pagination buttons\r\n\r\n    const [portion, setPortion] = useState(1)\r\n    const leftNumber = (portion - 1) * portionSize + 1\r\n    const rightNumber = portion * portionSize\r\n\r\n    const onFirstPageClick = () => {\r\n        props.currentPageHandler(1)\r\n        setPortion(1)\r\n    }\r\n\r\n    const onLastPageClick = () => {\r\n        props.currentPageHandler(pagesCount)\r\n        setPortion(portionCount)\r\n    }\r\n\r\n    const arrowClicked = false;\r\n\r\n    useEffect(() => {\r\n        props.currentPageHandler(leftNumber)\r\n    }, [arrowClicked])\r\n\r\n    return (\r\n        <div className={s.pagination}>\r\n            <SuperSelect\r\n                options={props.superSelect.arr}\r\n                value={props.superSelect.valueForSsSr}\r\n                onChangeOption={props.superSelect.onChangeOption}\r\n                onClick={props.onClickSelectHandler}\r\n                className={`${selectStyle.select} ${s.superSelect}`}\r\n            />\r\n            {portion > 1 &&\r\n              <>\r\n                <SuperButton className={s.btn} onClick={() => {\r\n                    props.currentPageHandler((portionSize * (portion - 2)) + 1)\r\n                    setPortion(portion - 1)\r\n                }}>&lt;</SuperButton>\r\n                <div className={s.item} onClick={onFirstPageClick}>1</div> {/*first page click*/}\r\n                <div className={s.points}>...</div>\r\n              </>}\r\n\r\n            {pages\r\n                .filter((p) => p ? p >= leftNumber && p <= rightNumber : '')\r\n                .map(q => {\r\n                    return <div\r\n                        key={q}\r\n                        className={`${s.item} ${props.page === q ? s.select : s.item}`}\r\n                        onClick={() => {\r\n                            props.currentPageHandler(q)\r\n                        }}>\r\n                        {q}\r\n                    </div>\r\n                })}\r\n            {portion !== portionCount &&\r\n              <>\r\n                <div className={s.points}>...</div>\r\n                <div className={s.item} onClick={onLastPageClick}>{pagesCount}</div> {/*last page click*/}\r\n              </>\r\n            }\r\n            {portionCount > portion &&\r\n              <SuperButton className={s.btn} onClick={() => {\r\n                  setPortion( portion + 1)\r\n                  props.currentPageHandler(portionSize * portion + 1)\r\n              }}>&gt;</SuperButton>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\ntype PropsType = {\r\n    cardPacksTotalCount: number\r\n    pageCount: number\r\n    onClickSelectHandler: () => void\r\n    superSelect: {\r\n        valueForSsSr: string\r\n        onChangeOption: React.Dispatch<React.SetStateAction<string>>\r\n        arr: Array<string>\r\n    }\r\n    page: number\r\n    currentPageHandler(page: number): void\r\n}","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {setCardPacksCurrentPageAC, setCardPacksPageCountAC} from \"../../../n1-main/m2-bll/findAndPaginationReducer\";\r\nimport {Pagination} from \"./Pagination\";\r\n\r\nexport const PaginationPacksContainer = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    // count of elements at one page\r\n    let pageCount = useSelector<AppStoreType, number>(state => state.findAndPagination.cardPacks.pageCount)\r\n    // count of Card Packs\r\n    let cardPacksTotalCount = useSelector<AppStoreType, number>(state => state.findAndPagination.cardPacks.totalCount)\r\n    // selected page\r\n    let page = useSelector<AppStoreType, number>(state => state.findAndPagination.cardPacks.page)\r\n\r\n    const currentPageHandler = (page: number) => {\r\n        dispatch(setCardPacksCurrentPageAC(page))\r\n    }\r\n\r\n    const arr = ['5', '10', '20', '50', '100'] // for SuperSelect\r\n\r\n    const [valueForSsSr, onChangeOption] = useState(arr[1]) // for SuperSelect\r\n\r\n    const onClickSelectHandler = () => {\r\n        dispatch(setCardPacksPageCountAC(+valueForSsSr))\r\n    }\r\n\r\n    return <Pagination\r\n        cardPacksTotalCount={cardPacksTotalCount}\r\n        pageCount={pageCount}\r\n        onClickSelectHandler={onClickSelectHandler}\r\n        superSelect={{\r\n            valueForSsSr,\r\n            onChangeOption,\r\n            arr\r\n        }}\r\n        page = {page}\r\n        currentPageHandler={currentPageHandler}\r\n    />\r\n}","import React from 'react';\r\nimport SuperButton from \"../../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport s from \"./Sort.module.scss\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../n1-main/m2-bll/store\";\r\nimport {RequestStatusType} from \"../../../../n1-main/m2-bll/appReducer\";\r\n\r\nexport function Sort(props: PropsType) {\r\n    const appStatus = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n\r\n    return <div className={s.container}>\r\n        <SuperButton className={s.btn} onClick={props.upperSortHandler}\r\n                     disabled={appStatus === \"loading\"}>^</SuperButton>\r\n        <SuperButton className={s.btn} onClick={props.lowerSortHandler}\r\n                     disabled={appStatus === \"loading\"}>v</SuperButton>\r\n    </div>\r\n}\r\n\r\ntype PropsType = {\r\n    upperSortHandler: () => void\r\n    lowerSortHandler: () => void\r\n}\r\n\r\n","import React from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setSortPacksAC, SortPackType} from \"../../../../n1-main/m2-bll/findAndPaginationReducer\";\r\nimport {Sort} from \"../SortMain/Sort\";\r\n\r\nexport const SortCardPacksContainer: React.FC<PropsType> = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const upperSortHandler = () => {\r\n        dispatch(setSortPacksAC(props.upperSort))\r\n    }\r\n    const lowerSortHandler = () => {\r\n        dispatch(setSortPacksAC(props.lowerCount))\r\n\r\n    }\r\n\r\n    return <Sort upperSortHandler={upperSortHandler} lowerSortHandler={lowerSortHandler}/>\r\n}\r\n\r\ntype PropsType = {\r\n    upperSort: SortPackType\r\n    lowerCount: SortPackType\r\n}\r\n","import React from 'react';\r\nimport {Slider, Typography} from \"@mui/material\";\r\nimport s from './RangeSlider.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../n1-main/m2-bll/store\";\r\nimport {setCardsPacksCountAC} from \"../../../../n1-main/m2-bll/findAndPaginationReducer\";\r\n\r\nexport const RangeSlider = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleChange = (event: Event, newValue: number | number[]) => {\r\n        dispatch(setCardsPacksCountAC(newValue as number[]))\r\n    };\r\n\r\n    const min = useSelector<AppStoreType, number>(state => state.findAndPagination.cardPacks.min)\r\n    const max = useSelector<AppStoreType, number>(state => state.findAndPagination.cardPacks.max)\r\n\r\n    return <div className={s.rangeSlider}>\r\n        <div>\r\n            How much Cards in Pack to show:\r\n        </div>\r\n        <Slider\r\n            getAriaLabel={() => 'Temperature range'}\r\n            value={[min,max]}\r\n            onChange={handleChange}\r\n            valueLabelDisplay=\"on\"\r\n            className={s.slider}\r\n            min={0}\r\n            max={200}\r\n        />\r\n    </div>\r\n}","import React, {ChangeEvent} from 'react';\r\nimport SuperInputText from \"../../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport s from './Search.module.scss'\r\nimport SuperButton from \"../../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {RangeSlider} from \"../RangeSlider/RangeSlider\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../n1-main/m2-bll/store\";\r\nimport {RequestStatusType} from \"../../../../n1-main/m2-bll/appReducer\";\r\n\r\nexport const Search = (props: PropsType) => {\r\n    const appStatus = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n\r\n    return (\r\n        <div className={s.search}>\r\n            <SuperInputText\r\n                value={props.inputValue}\r\n                onChange={props.setInputValueHandler}\r\n                placeholder={props.inputPlaceholder}\r\n                className={s.input}\r\n            />\r\n            {props.showRange && <RangeSlider/>}\r\n            <SuperButton onClick={props.buttonFindHandler} className={s.btn}\r\n                         disabled={appStatus === \"loading\"}>{props.buttonText}</SuperButton>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype PropsType = {\r\n    inputValue: string\r\n    inputPlaceholder: string\r\n    setInputValueHandler: (e: ChangeEvent<HTMLInputElement>) => void\r\n    buttonFindHandler: () => void\r\n    buttonText: string\r\n    showRange: boolean\r\n}\r\n","import React, {ChangeEvent} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../n1-main/m2-bll/store\";\r\nimport {setSearchPackNameAC} from \"../../../../n1-main/m2-bll/findAndPaginationReducer\";\r\nimport {getPacksTC} from \"../../../../n1-main/m2-bll/packsReducer\";\r\nimport {Search} from \"../SearchMain/Search\";\r\n\r\nexport const SearchCardsPacksContainer = () => {\r\n    const dispatch = useDispatch()\r\n    const value = useSelector<AppStoreType, string>(state => state.findAndPagination.cardPacks.packName)\r\n\r\n    const setInputValueHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setSearchPackNameAC(e.currentTarget.value))\r\n    }\r\n\r\n    const buttonFindHandler = () => {\r\n        dispatch(getPacksTC())\r\n    }\r\n\r\n    return <Search\r\n        inputValue={value}\r\n        inputPlaceholder={'Enter Cards Pack name'}\r\n        setInputValueHandler={setInputValueHandler}\r\n        buttonFindHandler={buttonFindHandler}\r\n        buttonText={'Find Cards Packs'}\r\n        showRange={true}\r\n    />\r\n}","const initialState: InitialStateType = {\r\n    modalDelCardsPackShowHide: false,\r\n    modalAddCardsPackShowHide: false,\r\n    modalUpdateCardsPackShowHide: false,\r\n    modalDelCardShowHide: false,\r\n    modalAddCardShowHide: false,\r\n    modalUpdateCardShowHide: false,\r\n    clickedCardsPackId: '',\r\n    clickedCardId: '' \r\n}\r\n\r\nexport const modalReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'MODAL/CLOSE-ALL-MODALS':\r\n            return {...state, modalDelCardsPackShowHide: false, modalAddCardsPackShowHide: false,\r\n                modalUpdateCardsPackShowHide: false, modalDelCardShowHide: false, modalAddCardShowHide: false,\r\n                modalUpdateCardShowHide: false\r\n            }\r\n        case \"MODAL/SHOW-MODAL-ADD-CARDS-PACK\":\r\n        case \"MODAL/SHOW-MODAL-ADD-CARD\":\r\n        case 'MODAL/SHOW-MODAL-DEL-CARDS-PACK':\r\n        case \"MODAL/SET-CLICKED-CARDS-PACK\":\r\n        case \"MODAL/SHOW-MODAL-UPDATE-CARDS-PACK\":\r\n        case \"MODAL/SHOW-MODAL-DEL-CARD\":\r\n        case \"MODAL/SET-CLICKED-CARD\":\r\n        case \"MODAL/SHOW-MODAL-UPDATE-CARD\":\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const closeAllModalsAC = () =>\r\n    ({type: 'MODAL/CLOSE-ALL-MODALS'} as const)\r\nexport const showModalDelCardsPackAC = () =>\r\n    ({type: 'MODAL/SHOW-MODAL-DEL-CARDS-PACK', payload: {modalDelCardsPackShowHide: true}} as const)\r\nexport const showModalAddCardsPackAC = () =>\r\n    ({type: 'MODAL/SHOW-MODAL-ADD-CARDS-PACK', payload: {modalAddCardsPackShowHide: true}} as const)\r\nexport const showModalAddCardAC = () =>\r\n    ({type: 'MODAL/SHOW-MODAL-ADD-CARD', payload: {modalAddCardShowHide: true}} as const)\r\nexport const setClickedCardPackId = (clickedCardsPackId: string) =>\r\n    ({type: 'MODAL/SET-CLICKED-CARDS-PACK', payload: {clickedCardsPackId}} as const)\r\nexport const showModalUpdateCardsPackAC = () =>\r\n    ({type: 'MODAL/SHOW-MODAL-UPDATE-CARDS-PACK', payload: {modalUpdateCardsPackShowHide: true}} as const)\r\nexport const showModalDelCardAC = () =>\r\n    ({type: 'MODAL/SHOW-MODAL-DEL-CARD', payload: {modalDelCardShowHide: true}} as const)\r\nexport const setClickedCardId = (clickedCardId: string) =>\r\n    ({type: 'MODAL/SET-CLICKED-CARD', payload: {clickedCardId}} as const)\r\nexport const showModalUpdateCardAC = () =>\r\n    ({type: 'MODAL/SHOW-MODAL-UPDATE-CARD', payload: {modalUpdateCardShowHide: true}} as const)\r\n\r\ntype InitialStateType = {\r\n    modalDelCardsPackShowHide: boolean\r\n    modalAddCardsPackShowHide: boolean\r\n    modalUpdateCardsPackShowHide: boolean\r\n    modalDelCardShowHide: boolean\r\n    modalAddCardShowHide: boolean\r\n    modalUpdateCardShowHide: boolean\r\n    clickedCardsPackId: string\r\n    clickedCardId: string\r\n}\r\n\r\ntype ActionType =\r\n    | ReturnType<typeof closeAllModalsAC>\r\n    | ReturnType<typeof showModalDelCardsPackAC>\r\n    | ReturnType<typeof showModalAddCardsPackAC>\r\n    | ReturnType<typeof showModalUpdateCardsPackAC>\r\n    | ReturnType<typeof showModalDelCardAC>\r\n    | ReturnType<typeof showModalAddCardAC>\r\n    | ReturnType<typeof showModalUpdateCardAC>\r\n    | ReturnType<typeof setClickedCardPackId>\r\n    | ReturnType<typeof setClickedCardId>","import React from 'react';\r\nimport s from './CommonBackground.module.scss'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {closeAllModalsAC} from \"../../../n1-main/m2-bll/modalReducer\";\r\n\r\ntype ModalPropsType = {\r\n    modalShowHide: boolean\r\n}\r\n\r\nexport const CommonBackground: React.FC<ModalPropsType> = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    if (!props.modalShowHide) return null\r\n\r\n    const onCloseHandler = () => {\r\n        dispatch(closeAllModalsAC())\r\n    }\r\n\r\n    return <div className={s.modalBackground} onClick={onCloseHandler}>\r\n        <div className={s.modalContent} onClick={e => e.stopPropagation()}>\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/close-icon.bd72ece5.svg\";","import s from \"./ModalTitleBlock.module.scss\";\r\n\r\nimport icon from \"./../../../img/close-icon.svg\";\r\n\r\nexport default function ModalTitleBlock(props: PropsType) {\r\n   return (\r\n      <div className={s.modalTitleBlock}>\r\n         <h2 className={s.title}>{props.title}</h2>\r\n         <img className={s.icon} src={icon} alt=\"icon\" onClick={props.onClose}/>\r\n      </div>\r\n   )\r\n}\r\n\r\ntype PropsType = {\r\n    title: string\r\n    onClose: () => void\r\n}\r\n\r\n\r\n\r\n","import s from \"./ModalButtonBlock.module.scss\";\r\nimport {StyleType} from \"../../../../types/types\";\r\nimport Button from \"../button/Button\";\r\n\r\n\r\nexport default function ModalButtonBlock (props: PropsType) {\r\n   return (\r\n      <div className={s.modalButtonBlock}>\r\n            <Button label={props.label1} style={props.style1} onClick={props.callback1}/>\r\n            <Button label={props.label2} style={props.style2} onClick={props.callback2}/>\r\n         </div>\r\n   )\r\n}\r\n\r\ntype PropsType = {\r\n    label1: string\r\n    label2: string\r\n    style1: StyleType\r\n    style2: StyleType\r\n    callback1: () => void\r\n    callback2: () => void\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from \"./CommonAddUpdate.module.scss\";\r\nimport ModalTitleBlock from \"../../../assets/components/common/modal-title-block/ModalTitleBlock\";\r\nimport {Input} from \"../../../assets/components/common/input/Input\";\r\nimport ModalButtonBlock from \"../../../assets/components/common/modal-button-block/ModalButtonBlock\";\r\nimport {StyleType} from \"../../../types/types\";\r\n\r\nexport const CommonAddUpdate = (props: PropsType) => {\r\n    return <div className={s.newPackModal}>\r\n        <div className={s.titleBlock}>\r\n            <ModalTitleBlock title={props.title} onClose={props.closeHandler}/>\r\n        </div>\r\n        <div className={s.content}>\r\n            <div className={s.input}>\r\n                {props.inputs.map(e => {\r\n                    return <Input inputData={e.inputData} value={e.value} onChangeText={e.onChangeText}/>\r\n                })\r\n                }\r\n            </div>\r\n            <ModalButtonBlock\r\n                label1=\"Cancel\"\r\n                style1={props.style1}\r\n                label2={props.yesButtonText}\r\n                style2={props.style2}\r\n                callback1={props.closeHandler}\r\n                callback2={props.yesButtonHandler}\r\n            />\r\n        </div>\r\n    </div>\r\n}\r\n\r\ntype PropsType = {\r\n    title: string\r\n    closeHandler: () => void\r\n    yesButtonText: string\r\n    yesButtonHandler: () => void\r\n    inputs: Array<InputsType>\r\n    style1: StyleType\r\n    style2: StyleType\r\n}\r\n\r\ntype InputsType = {\r\n    inputData: InputDataType,\r\n    value: string\r\n    onChangeText?: ((value: string) => void) | undefined\r\n}\r\n\r\ntype InputDataType = {\r\n    id: string\r\n    type: string\r\n    name: string\r\n    for: string\r\n    label: string\r\n    style: {\r\n        display: string\r\n    }\r\n}","import {CommonBackground} from \"../CommonBackground/CommonBackground\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport React, {useState} from \"react\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {addPacksTC} from \"../../../n1-main/m2-bll/packsReducer\";\r\nimport {closeAllModalsAC} from \"../../../n1-main/m2-bll/modalReducer\";\r\nimport {StyleType} from \"../../../types/types\";\r\nimport {customColor} from \"../../../n1-main/m1-ui/common/components/styles/inlineVariables\";\r\nimport {CommonAddUpdate} from \"../CommonAddUpdate/CommonAddUpdate\";\r\n\r\n// стилизация кнопок\r\nexport const styleNPButton1: StyleType = {\r\n    width: \"127px\",\r\n    backgroundColor: \"#D7D8EF\",\r\n    color: customColor,\r\n    boxShadow: \"none\"\r\n}\r\n\r\nexport const styleNPButton2: StyleType = {\r\n    width: \"127px\"\r\n}\r\n\r\n// данные для инпута\r\nexport const inputNPData = {\r\n    id: \"text\",\r\n    type: \"text\",\r\n    name: \"text\",\r\n    for: \"text\",\r\n    label: \"Name pack\",\r\n    style: {\r\n        display: \"none\"\r\n    }\r\n}\r\n\r\nexport default function ModalAddPack() {\r\n    const dispatch = useDispatch()\r\n    const [cardPackNameInModal, setCardPackNameInModal] = useState('')\r\n\r\n    const modalAddCardPackShowHide = useSelector<AppStoreType, boolean>(state => state.modal.modalAddCardsPackShowHide)\r\n\r\n    const addCardPackInModalButtonHandler = () => {\r\n        dispatch(addPacksTC(cardPackNameInModal))\r\n        dispatch(closeAllModalsAC())\r\n    }\r\n\r\n    const onCloseHandler = () => {\r\n        dispatch(closeAllModalsAC())\r\n    }\r\n\r\n    return (\r\n        <CommonBackground modalShowHide={modalAddCardPackShowHide}>\r\n            <CommonAddUpdate\r\n                title={\"Add new packd\"}\r\n                closeHandler={onCloseHandler}\r\n                yesButtonText={'Add'}\r\n                yesButtonHandler={addCardPackInModalButtonHandler}\r\n                inputs={[\r\n                    {inputData: inputNPData, value: cardPackNameInModal, onChangeText: setCardPackNameInModal},\r\n                ]}\r\n                style1={styleNPButton1}\r\n                style2={styleNPButton2}\r\n            />\r\n        </CommonBackground>\r\n    )\r\n}\r\n\r\n","// color for button:\r\nexport const customColor = \"#454AA2\";","import React from 'react';\r\nimport s from \"./CommonDel.module.scss\";\r\nimport ModalTitleBlock from \"../../../assets/components/common/modal-title-block/ModalTitleBlock\";\r\nimport ModalButtonBlock from \"../../../assets/components/common/modal-button-block/ModalButtonBlock\";\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\n// стилизация кнопок\r\nconst styleDPButton1 = {\r\n    width: \"127px\",\r\n    backgroundColor: \"#D7D8EF\",\r\n    color: \"#454AA2\",\r\n    boxShadow: \"none\"\r\n}\r\n\r\nconst styleDPButton2 = {\r\n    width: \"127px\",\r\n    backgroundColor: \"#F1453D\",\r\n    color: \"#ECECF9\",\r\n    boxShadow: \"0px 4px 18px rgba(241, 69, 61, 0.35), inset 0px 1px 0px rgba(255, 255, 255, 0.3)\"\r\n}\r\n\r\nexport const CommonDel: React.FC<PropsType> = (props) => {\r\n    return <div className={s.deletePackModal}>\r\n        <div className={s.titleBlock}>\r\n            <ModalTitleBlock title={props.title} onClose={props.closeHandler}/>\r\n        </div>\r\n        <div className={s.content}>\r\n            <p className={s.text}>{ReactHtmlParser(props.text)}</p>\r\n            <ModalButtonBlock\r\n                label1=\"Cancel\"\r\n                style1={styleDPButton1}\r\n                label2=\"Delete\"\r\n                style2={styleDPButton2}\r\n                callback1={props.closeHandler}\r\n                callback2={props.delHandler}\r\n            />\r\n        </div>\r\n    </div>\r\n}\r\n\r\ntype PropsType = {\r\n    title: string\r\n    text: string\r\n    closeHandler: () => void\r\n    delHandler: () => void\r\n}","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {closeAllModalsAC} from \"../../../n1-main/m2-bll/modalReducer\";\r\nimport {CommonBackground} from \"../CommonBackground/CommonBackground\";\r\nimport {delPacksTC, PackType} from \"../../../n1-main/m2-bll/packsReducer\";\r\nimport {CommonDel} from \"../CommonDel/CommonDel\";\r\n\r\nexport default function ModalDelPack() {\r\n    const dispatch = useDispatch()\r\n\r\n    const modalDelCardPackShowHide = useSelector<AppStoreType, boolean>(state => state.modal.modalDelCardsPackShowHide)\r\n    const clickedCardPackId = useSelector<AppStoreType, string>(state => state.modal.clickedCardsPackId)\r\n    const cards = useSelector<AppStoreType, PackType[]>(state => state.packs.cardPacks)\r\n    const pack = cards.find(e => e._id === clickedCardPackId)\r\n\r\n    const modalYesDelCardPackHandler = (id: string) => {\r\n        dispatch(closeAllModalsAC())\r\n        dispatch(delPacksTC(id))\r\n        // alert(pack && pack.name + \" Removed \")\r\n    }\r\n\r\n    const onCloseHandler = () => {\r\n        dispatch(closeAllModalsAC())\r\n    }\r\n\r\n    return (\r\n        <CommonBackground modalShowHide={modalDelCardPackShowHide}>\r\n            <CommonDel\r\n                title={'Delete Pack'}\r\n                text={`Do you really want to remove pack <Strong>${pack && pack.name}</strong>? All cards\r\n                        will be excluded from this course.`}\r\n                closeHandler={onCloseHandler}\r\n                delHandler={() => modalYesDelCardPackHandler(clickedCardPackId)}\r\n            />\r\n        </CommonBackground>\r\n    )\r\n}\r\n\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {closeAllModalsAC} from \"../../../n1-main/m2-bll/modalReducer\";\r\nimport {CommonBackground} from \"../CommonBackground/CommonBackground\";\r\nimport {PackType, updatePacksTC} from \"../../../n1-main/m2-bll/packsReducer\";\r\nimport {inputNPData, styleNPButton1, styleNPButton2} from \"../ModalAddPack/ModalAddPack\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {CommonAddUpdate} from \"../CommonAddUpdate/CommonAddUpdate\";\r\n\r\n\r\nexport default function ModalUpdatePack() {\r\n    const dispatch = useDispatch()\r\n\r\n    const [cardsPackName, setCardPackName] = useState('')\r\n\r\n    const modalUpdateCardsPackShowHide = useSelector<AppStoreType, boolean>(state =>\r\n        state.modal.modalUpdateCardsPackShowHide)\r\n    const clickedCardPackId = useSelector<AppStoreType, string>(state => state.modal.clickedCardsPackId)\r\n\r\n    const cardsPacks = useSelector<AppStoreType, Array<PackType>>(state => state.packs.cardPacks)\r\n    const cardsPack = cardsPacks.find(e => e._id === clickedCardPackId)\r\n    let oldCardsPackName = ''\r\n    if (cardsPack) oldCardsPackName = cardsPack.name\r\n\r\n    useEffect(() => {\r\n        setCardPackName(oldCardsPackName)\r\n    }, [oldCardsPackName])\r\n\r\n\r\n    const buttonHandler = (id: string) => {\r\n        dispatch(updatePacksTC(id,cardsPackName))\r\n        dispatch(closeAllModalsAC())\r\n    }\r\n\r\n    const onCloseHandler = () => {\r\n        dispatch(closeAllModalsAC())\r\n    }\r\n\r\n    return (\r\n        <CommonBackground modalShowHide={modalUpdateCardsPackShowHide}>\r\n            <CommonAddUpdate\r\n                title={'Update Cards pack'}\r\n                closeHandler={onCloseHandler}\r\n                yesButtonText={'Save'}\r\n                yesButtonHandler={() => {buttonHandler(clickedCardPackId)}}\r\n                inputs={[\r\n                    {inputData: inputNPData, value: cardsPackName, onChangeText: setCardPackName},\r\n                ]}\r\n                style1={styleNPButton1}\r\n                style2={styleNPButton2}\r\n            />\r\n        </CommonBackground>\r\n    )\r\n}\r\n\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../n1-main/m2-bll/store\";\r\nimport {getPacksTC, getUserIdAC, packsStateType} from \"../../n1-main/m2-bll/packsReducer\";\r\nimport * as React from 'react';\r\nimport {ChangeEvent, useEffect, useState} from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport {NavLink, useNavigate} from \"react-router-dom\";\r\nimport {PaginationPacksContainer} from \"../f2-table/Pagination/PaginationPacksContainer\";\r\nimport {SortCardPacksContainer} from \"../f2-table/Sort/SortCardPacksContainer/SortCardPacksContainer\";\r\nimport s from './Pack.module.scss'\r\nimport {SearchCardsPacksContainer} from \"../f2-table/Search/SearchCardsPacksContainer/SearchCardsPacksContainer\";\r\nimport {SortPackType} from \"../../n1-main/m2-bll/findAndPaginationReducer\";\r\nimport {\r\n    setClickedCardPackId,\r\n    showModalAddCardsPackAC,\r\n    showModalDelCardsPackAC,\r\n    showModalUpdateCardsPackAC\r\n} from \"../../n1-main/m2-bll/modalReducer\";\r\nimport ModalAddPack from \"../f5-modal/ModalAddPack/ModalAddPack\";\r\nimport ModalDelPack from \"../f5-modal/ModalDelPack/ModalDelPack\";\r\nimport {Checkbox} from \"@mui/material\";\r\nimport ModalUpdatePack from \"../f5-modal/ModalUpdatePack/ModalUpdatePack\";\r\nimport {RequestStatusType} from \"../../n1-main/m2-bll/appReducer\";\r\n\r\nexport const Packs = () => {\r\n    const {cardPacks} = useSelector<AppStoreType, packsStateType>(state => state.packs)\r\n    const pageCount = useSelector<AppStoreType, number>(state => state.findAndPagination.cardPacks.pageCount).toString()\r\n    const page = useSelector<AppStoreType, number>(state => state.findAndPagination.cardPacks.page)\r\n    const sortPacks = useSelector<AppStoreType, SortPackType>(state => state.findAndPagination.cardPacks.sortPacks)\r\n    const user_id = useSelector<AppStoreType, string>(state => state.profile._id)\r\n    const packUserId = useSelector<AppStoreType, string>(state => state.packs.packUser_id)\r\n    const appStatus = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n\r\n    const [myPacks, setMyPacks] = useState<boolean>(!!packUserId)\r\n\r\n    const dispatch = useDispatch()\r\n    let navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        dispatch(getPacksTC())\r\n    }, [dispatch, pageCount, page, sortPacks])\r\n\r\n    const addPacksHandler = () => {\r\n        dispatch(showModalAddCardsPackAC())\r\n    }\r\n\r\n    const showModalDelPackHandler = (id: string) => {\r\n        dispatch(setClickedCardPackId(id))\r\n        dispatch(showModalDelCardsPackAC())\r\n    }\r\n\r\n    const showModalUpdatePackHandler = (id: string) => {\r\n        dispatch(setClickedCardPackId(id))\r\n        dispatch(showModalUpdateCardsPackAC())\r\n    }\r\n\r\n    /*useEffect(() => {\r\n        dispatch(InitializeTC())\r\n    }, [])*/\r\n\r\n    const startLearnHandler = (packId: string) => {\r\n        localStorage.setItem('cardsPacks', JSON.stringify(cardPacks)) // this go to LS, to save it on F5 Learn.\r\n\r\n        navigate(`/learn/${packId}`, {replace: true})\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(getUserIdAC(myPacks ? '' : user_id))\r\n        dispatch(getPacksTC())\r\n        setMyPacks(e.target.checked)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ModalUpdatePack/>\r\n            <ModalAddPack/>\r\n            <ModalDelPack/>\r\n            <TableContainer className={s.table} component={Paper}>\r\n                <PaginationPacksContainer/>\r\n                <SearchCardsPacksContainer/>\r\n                <Table sx={{minWidth: 650}} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>\r\n                                <div className={s.cell}>Name<SortCardPacksContainer upperSort={'0name'}\r\n                                                                                    lowerCount={'1name'}/></div>\r\n                            </TableCell>\r\n                            <TableCell align=\"center\" className={s.cell}>\r\n                                <div className={s.cell}>Cards Count<SortCardPacksContainer upperSort={'0cardsCount'}\r\n                                                                                           lowerCount={'1cardsCount'}/>\r\n                                </div>\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                <div className={s.cell}>Updated<SortCardPacksContainer upperSort={'0updated'}\r\n                                                                                       lowerCount={'1updated'}/></div>\r\n\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">My Packs <Checkbox onChange={onChangeHandler}/></TableCell>\r\n                            <TableCell align=\"center\">url</TableCell>\r\n                            <TableCell align='center'>\r\n                                <button onClick={addPacksHandler} disabled={appStatus === \"loading\"}>add</button>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {cardPacks.map((mp) => (\r\n                            <TableRow\r\n                                key={mp._id}\r\n                                sx={{'&:last-child td, &:last-child th': {border: 0}}}>\r\n                                <TableCell component=\"th\" scope=\"row\">{mp.name}\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">{mp.cardsCount}</TableCell>\r\n                                <TableCell align=\"center\">{mp.updated}</TableCell>\r\n                                <TableCell align=\"center\"></TableCell>\r\n                                <TableCell align='center'>\r\n                                    <button onClick={() => showModalDelPackHandler(mp._id)}\r\n                                            disabled={appStatus === \"loading\" || !(user_id === mp.user_id)}>del\r\n                                    </button>\r\n                                </TableCell>\r\n                                <TableCell align='center'>\r\n                                    <button onClick={() => showModalUpdatePackHandler(mp._id)}\r\n                                            disabled={appStatus === \"loading\" || !(user_id === mp.user_id)}>update\r\n                                    </button>\r\n                                </TableCell>\r\n                                <TableCell align='center'>\r\n                                    <button disabled={!mp.cardsCount || appStatus === \"loading\"} onClick={\r\n                                        () => {\r\n                                            startLearnHandler(mp._id)\r\n                                        }\r\n                                    }>learn\r\n                                    </button>\r\n                                </TableCell>\r\n                                <TableCell align=\"center\"> <NavLink to={`/cards/${mp._id}`}>cards</NavLink></TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    );\r\n}","import {Dispatch} from \"redux\";\r\nimport {cardsAPI} from \"./api/api\";\r\nimport {AppStoreType} from \"./store\";\r\nimport {\r\n    setCardsTotalCountAC,\r\n    SetCardsTotalCountType,\r\n    setSelectedCardIdAC,\r\n    SetSelectedCardIdType\r\n} from \"./findAndPaginationReducer\";\r\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {setAppStatusAC, SetAppStatusAT} from \"./appReducer\";\r\n\r\nexport const initialState: InitialStateType = {\r\n    cards: [],\r\n    grade: 1\r\n}\r\n\r\n\r\nexport const cardsReducer = (state = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case 'cards/GET-CARDS':\r\n            return {...state, cards: action.cards}\r\n        case 'cards/UPDATE-GRADE':\r\n            return {...state, grade: action.grade}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const getCardsAC = (cards: CardType[]) => ({type: \"cards/GET-CARDS\", cards} as const)\r\nexport const updateGradeAC = (grade: number) => ({type: \"cards/UPDATE-GRADE\", grade} as const)\r\n\r\nexport const getCardsTC = (id: string): ThunkType => (dispatch: Dispatch<ActionType>, getState: () => AppStoreType) => {\r\n    const {page, sortCards} = getState().findAndPagination.cards\r\n    const cardQuestion = getState().findAndPagination.cards.questionText\r\n    const pageCount = getState().findAndPagination.cards.pageCount.toString()\r\n\r\n    dispatch(setAppStatusAC('loading'))\r\n    cardsAPI.getCards(id, pageCount, page, cardQuestion, sortCards)\r\n        .then((res) => {\r\n            if (res.data.cards) {\r\n                dispatch(getCardsAC(res.data.cards))\r\n                dispatch(setCardsTotalCountAC(res.data.cardsTotalCount))\r\n                dispatch(setSelectedCardIdAC(id))\r\n            }\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\nexport const addCardsTC = (id: string, question: string, answer: string): ThunkType =>\r\n    (dispatch: ThunkDispatch<AppStoreType, unknown, ActionType>) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        cardsAPI.addCards(id, question, answer)\r\n            .then((res) => {\r\n                dispatch(getCardsTC(id))\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n\r\nexport const delCardTC = (id: string, packId: string) => (dispatch: ThunkDispatch<AppStoreType, unknown, ActionType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    cardsAPI.delCard(id)\r\n        .then(() => {\r\n            dispatch(getCardsTC(packId))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\nexport const updateCardTC = (id: string, packId: string, question: string, answer: string) => (dispatch: ThunkDispatch<AppStoreType, unknown, ActionType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    cardsAPI.updateCard(id, question, answer)\r\n        .then(() => {\r\n            dispatch(getCardsTC(packId))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\nexport const updateGradeTC = (grade: number, card_id: string) => (dispatch: ThunkDispatch<AppStoreType, unknown, ActionType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    return cardsAPI.updateGrade(grade, card_id)\r\n        .then(() => {\r\n            dispatch(updateGradeAC(grade))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\n\r\ntype ActionType =\r\n    | ReturnType<typeof getCardsAC>\r\n    | SetCardsTotalCountType\r\n    | SetSelectedCardIdType\r\n    | SetAppStatusAT\r\n    | ReturnType<typeof updateGradeAC>\r\ntype ThunkType = ThunkAction<void, AppStoreType, unknown, ActionType>\r\n\r\nexport type CardType = {\r\n    answer: string\r\n    answerImg: string\r\n    answerVideo: string\r\n    cardsPack_id: string\r\n    comments: string\r\n    created: string\r\n    grade: number\r\n    more_id: string\r\n    question: string\r\n    questionImg: string\r\n    questionVideo: string\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    updated: string\r\n    user_id: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\ntype InitialStateType = {\r\n    cards: Array<CardType>\r\n    grade: number\r\n}\r\n\r\n// todo: add catch\r\n\r\n","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {setCardsPageCountAC, setCardsCurrentPageAC} from \"../../../n1-main/m2-bll/findAndPaginationReducer\";\r\nimport {Pagination} from \"./Pagination\";\r\n\r\nexport const PaginationCardsContainer = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    // count of elements at one page\r\n    let pageCount = useSelector<AppStoreType, number>(state => state.findAndPagination.cards.pageCount)\r\n    // count of Cards\r\n    let cardPacksTotalCount = useSelector<AppStoreType, number>(state => state.findAndPagination.cards.totalCount)\r\n    // selected page\r\n    let page = useSelector<AppStoreType, number>(state => state.findAndPagination.cards.page)\r\n\r\n    const currentPageHandler = (page: number) => {\r\n        dispatch(setCardsCurrentPageAC(page))\r\n    }\r\n\r\n    const arr = ['5', '10', '20', '50', '100'] // for SuperSelect\r\n\r\n    const [valueForSsSr, onChangeOption] = useState(arr[1]) // for SuperSelect\r\n\r\n    const onClickSelectHandler = () => {\r\n        dispatch(setCardsPageCountAC(+valueForSsSr))\r\n    }\r\n\r\n    return <Pagination\r\n        cardPacksTotalCount={cardPacksTotalCount}\r\n        pageCount={pageCount}\r\n        onClickSelectHandler={onClickSelectHandler}\r\n        superSelect={{\r\n            valueForSsSr,\r\n            onChangeOption,\r\n            arr\r\n        }}\r\n        page = {page}\r\n        currentPageHandler={currentPageHandler}\r\n    />\r\n}","import React, {ChangeEvent} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../n1-main/m2-bll/store\";\r\nimport {setSearchQuestionAC} from \"../../../../n1-main/m2-bll/findAndPaginationReducer\";\r\nimport {Search} from \"../SearchMain/Search\";\r\nimport {getCardsTC} from \"../../../../n1-main/m2-bll/cardsReducer\";\r\n\r\nexport const SearchCardsContainer = () => {\r\n    const dispatch = useDispatch()\r\n    const value = useSelector<AppStoreType, string>(state => state.findAndPagination.cards.questionText)\r\n    const cardId = useSelector<AppStoreType, string>(state => state.findAndPagination.cards.selectedCardId)\r\n\r\n    const setInputValueHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setSearchQuestionAC(e.currentTarget.value))\r\n    }\r\n\r\n    const buttonFindHandler = () => {\r\n        dispatch(getCardsTC(cardId))\r\n    }\r\n\r\n    return <Search\r\n        inputValue={value}\r\n        inputPlaceholder={'Enter question text'}\r\n        setInputValueHandler={setInputValueHandler}\r\n        buttonFindHandler={buttonFindHandler}\r\n        buttonText={'Find Cards'}\r\n        showRange={false}\r\n    />\r\n}","import React from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {\r\n    setSortCardsAC,\r\n    setSortPacksAC,\r\n    SortCardsType,\r\n    SortPackType\r\n} from \"../../../../n1-main/m2-bll/findAndPaginationReducer\";\r\nimport {Sort} from \"../SortMain/Sort\";\r\n\r\nexport const SortCardsContainer: React.FC<PropsType> = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const upperSortHandler = () => {\r\n        dispatch(setSortCardsAC(props.upperSort))\r\n    }\r\n    const lowerSortHandler = () => {\r\n        dispatch(setSortCardsAC(props.lowerCount))\r\n\r\n    }\r\n\r\n    return <Sort upperSortHandler={upperSortHandler} lowerSortHandler={lowerSortHandler}/>\r\n}\r\n\r\ntype PropsType = {\r\n    upperSort: SortCardsType\r\n    lowerCount: SortCardsType\r\n}\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {closeAllModalsAC} from \"../../../n1-main/m2-bll/modalReducer\";\r\n\r\nimport {CommonBackground} from \"../CommonBackground/CommonBackground\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {CardType, delCardTC} from \"../../../n1-main/m2-bll/cardsReducer\";\r\nimport {CommonDel} from \"../CommonDel/CommonDel\";\r\n\r\nexport default function ModalDelCard() {\r\n    let {id} = useParams()\r\n\r\n    const dispatch = useDispatch()\r\n    const modalDelCardShowHide = useSelector<AppStoreType, boolean>(state => state.modal.modalDelCardShowHide)\r\n    const clickedCardId = useSelector<AppStoreType, string>(state => state.modal.clickedCardId)\r\n    const cards = useSelector<AppStoreType, Array<CardType>>(state => state.cards.cards)\r\n\r\n    const card = cards.find(e => e._id === clickedCardId)\r\n\r\n    const modalYesDelCardPackHandler = () => {\r\n        if (id)\r\n            dispatch(delCardTC(clickedCardId,id))\r\n        dispatch(closeAllModalsAC())\r\n    }\r\n\r\n    const onCloseHandler = () => {\r\n        dispatch(closeAllModalsAC())\r\n    }\r\n\r\n    return (\r\n        <CommonBackground modalShowHide={modalDelCardShowHide}>\r\n            <CommonDel\r\n                title={\"Delete Card\"}\r\n                text={`Do you really want to remove card <strong>${card && card.question}</strong>?`}\r\n                closeHandler={onCloseHandler}\r\n                delHandler={modalYesDelCardPackHandler}\r\n            />\r\n        </CommonBackground>\r\n    )\r\n}\r\n\r\n","import {CommonBackground} from \"../CommonBackground/CommonBackground\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport React, {useState} from \"react\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {closeAllModalsAC} from \"../../../n1-main/m2-bll/modalReducer\";\r\nimport {styleNPButton1, styleNPButton2} from \"../ModalAddPack/ModalAddPack\";\r\nimport {CommonAddUpdate} from \"../CommonAddUpdate/CommonAddUpdate\";\r\n\r\n// data for inputs\r\nexport const inputNCData1 = {\r\n    id: \"text\",\r\n    type: \"text\",\r\n    name: \"text\",\r\n    for: \"text\",\r\n    label: \"Name question\",\r\n    style: {\r\n        display: \"none\"\r\n    }\r\n}\r\nexport const inputNCData2 = {\r\n    id: \"text\",\r\n    type: \"text\",\r\n    name: \"text\",\r\n    for: \"text\",\r\n    label: \"Name answer\",\r\n    style: {\r\n        display: \"none\"\r\n    }\r\n}\r\n\r\nexport const ModalAddCard: React.FC<PropsType> = (props) => {\r\n    const dispatch = useDispatch()\r\n    const modalAddCardShowHide = useSelector<AppStoreType, boolean>(state => state.modal.modalAddCardShowHide)\r\n\r\n    const [question, setQuestion] = useState('')\r\n    const [answer, setAnswer] = useState('')\r\n\r\n    const buttonHandler = () => {\r\n        props.addCard(question, answer)\r\n        dispatch(closeAllModalsAC())\r\n    }\r\n\r\n    const onCloseHandler = () => {\r\n        dispatch(closeAllModalsAC())\r\n    }\r\n\r\n    return (\r\n        <CommonBackground modalShowHide={modalAddCardShowHide}>\r\n            <CommonAddUpdate\r\n                title={\"Add new carddd\"}\r\n                closeHandler={onCloseHandler}\r\n                yesButtonText={'Add'}\r\n                yesButtonHandler={buttonHandler}\r\n                inputs={[\r\n                    {inputData: inputNCData1, value: question, onChangeText: setQuestion},\r\n                    {inputData: inputNCData2, value: answer, onChangeText: setAnswer}\r\n                ]}\r\n                style1={styleNPButton1}\r\n                style2={styleNPButton2}\r\n            />\r\n        </CommonBackground>\r\n    )\r\n}\r\n\r\ntype PropsType = {\r\n    addCard: (question: string, answer: string) => void\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {closeAllModalsAC} from \"../../../n1-main/m2-bll/modalReducer\";\r\nimport {CommonBackground} from \"../CommonBackground/CommonBackground\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {CardType, updateCardTC} from \"../../../n1-main/m2-bll/cardsReducer\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport s from \"../CommonAddUpdate/CommonAddUpdate.module.scss\";\r\nimport ModalTitleBlock from \"../../../assets/components/common/modal-title-block/ModalTitleBlock\";\r\nimport {Input} from \"../../../assets/components/common/input/Input\";\r\nimport ModalButtonBlock from \"../../../assets/components/common/modal-button-block/ModalButtonBlock\";\r\nimport {inputNPData, styleNPButton1, styleNPButton2} from \"../ModalAddPack/ModalAddPack\";\r\nimport {inputNCData1, inputNCData2} from \"../ModalAddCard/ModalAddCard\";\r\nimport {CommonAddUpdate} from \"../CommonAddUpdate/CommonAddUpdate\";\r\n\r\nexport const ModalUpdateCard = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    let {id} = useParams()\r\n\r\n    const [question, setQuestion] = useState('')\r\n    const [answer, setAnswer] = useState('')\r\n\r\n    const modalUpdateCardShowHide = useSelector<AppStoreType, boolean>(state =>\r\n        state.modal.modalUpdateCardShowHide)\r\n    const clickedCardId = useSelector<AppStoreType, string>(state => state.modal.clickedCardId)\r\n    const cards = useSelector<AppStoreType, Array<CardType>>(state => state.cards.cards)\r\n\r\n    const card = cards.find(e => e._id === clickedCardId)\r\n\r\n    let oldCardQuestion = ''\r\n    let oldCardAnswer = ''\r\n    if (card) {\r\n        oldCardQuestion = card.question\r\n        oldCardAnswer = card.answer\r\n    }\r\n\r\n    useEffect(() => {\r\n        setQuestion(oldCardQuestion)\r\n        setAnswer(oldCardAnswer)\r\n    },[oldCardQuestion, oldCardAnswer])\r\n\r\n    const buttonHandler = () => {\r\n        dispatch(closeAllModalsAC())\r\n        if (id)\r\n        dispatch(updateCardTC(clickedCardId,id,question,answer))\r\n    }\r\n\r\n    const onCloseHandler = () => {\r\n        dispatch(closeAllModalsAC())\r\n    }\r\n\r\n    return <CommonBackground modalShowHide={modalUpdateCardShowHide}>\r\n        <CommonAddUpdate\r\n            title={'Update card'}\r\n            closeHandler={onCloseHandler}\r\n            yesButtonText={'Update'}\r\n            yesButtonHandler={buttonHandler}\r\n            inputs={[\r\n                {inputData: inputNCData1, value: question, onChangeText: setQuestion},\r\n                {inputData: inputNCData2, value: answer, onChangeText: setAnswer},\r\n            ]}\r\n            style1={styleNPButton1}\r\n            style2={styleNPButton2}\r\n        />\r\n    </CommonBackground>\r\n}","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../n1-main/m2-bll/store\";\r\nimport * as React from 'react';\r\nimport {useEffect} from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport {addCardsTC, CardType, getCardsTC} from \"../../n1-main/m2-bll/cardsReducer\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {PaginationCardsContainer} from \"../f2-table/Pagination/PaginationCardsContainer\";\r\nimport {SearchCardsContainer} from \"../f2-table/Search/SeachCardsContainer/SeachCardsContainer\";\r\nimport s from './Cards.module.scss'\r\nimport {SortCardsContainer} from \"../f2-table/Sort/SortCardsContainer/SortCardsContainer\";\r\nimport {SortCardsType} from \"../../n1-main/m2-bll/findAndPaginationReducer\";\r\nimport {\r\n    setClickedCardId,\r\n    showModalAddCardAC,\r\n    showModalDelCardAC,\r\n    showModalUpdateCardAC\r\n} from \"../../n1-main/m2-bll/modalReducer\";\r\nimport ModalDelCard from \"../f5-modal/ModalDelCard/ModalDelCard\";\r\nimport {ModalAddCard} from \"../f5-modal/ModalAddCard/ModalAddCard\";\r\nimport {ModalUpdateCard} from \"../f5-modal/ModalUpdateCard/ModalUpdateCard\";\r\nimport {RequestStatusType} from \"../../n1-main/m2-bll/appReducer\";\r\n\r\n// data for inputs\r\nconst inputNPData1 = {\r\n    id: \"text\",\r\n    type: \"text\",\r\n    name: \"text\",\r\n    for: \"text\",\r\n    label: \"New question\",\r\n    style: {\r\n        display: \"none\"\r\n    }\r\n}\r\n\r\n// data for inputs\r\nconst inputNPData2 = {\r\n    id: \"text\",\r\n    type: \"text\",\r\n    name: \"text\",\r\n    for: \"text\",\r\n    label: \"Name answer\",\r\n    style: {\r\n        display: \"none\"\r\n    }\r\n}\r\n\r\nexport const Cards = () => {\r\n\r\n    let {id} = useParams()\r\n\r\n    const cards = useSelector<AppStoreType, CardType[]>(state => state.cards.cards)\r\n    const pageCount = useSelector<AppStoreType, number>(state => state.findAndPagination.cards.pageCount).toString()\r\n    const page = useSelector<AppStoreType, number>(state => state.findAndPagination.cards.page)\r\n    const sortCards = useSelector<AppStoreType, SortCardsType>(state => state.findAndPagination.cards.sortCards)\r\n    const appStatus = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const user_id = useSelector<AppStoreType, string>(state => state.profile._id)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (id)\r\n            dispatch(getCardsTC(id))\r\n    }, [dispatch, id, pageCount, page, sortCards])\r\n\r\n    const addCardHandler = (question: string, answer: string) => {\r\n        if (id) dispatch(addCardsTC(id, question, answer))\r\n    }\r\n\r\n    const showAddCardModalHandler = () => {\r\n        dispatch(showModalAddCardAC())\r\n    }\r\n\r\n    const showDelCardModalHandler = (id: string) => {\r\n        dispatch(showModalDelCardAC())\r\n        dispatch(setClickedCardId(id))\r\n    }\r\n\r\n    const showUpdateCardModalHandler = (id: string) => {\r\n        dispatch(showModalUpdateCardAC())\r\n        dispatch(setClickedCardId(id))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ModalUpdateCard/>\r\n            <ModalDelCard/>\r\n            <ModalAddCard addCard={addCardHandler}/>\r\n            <TableContainer component={Paper}>\r\n                <PaginationCardsContainer/>\r\n                <SearchCardsContainer/>\r\n                <Table sx={{minWidth: 650}} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>\r\n                                <div className={s.cell}>Question<SortCardsContainer upperSort={'0question'}\r\n                                                                                    lowerCount={'1question'}/>\r\n                                </div>\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                <div className={s.cell}>answer<SortCardsContainer upperSort={'0answer'}\r\n                                                                                  lowerCount={'1answer'}/>\r\n                                </div>\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                <div className={s.cell}>Grade<SortCardsContainer upperSort={'0grade'}\r\n                                                                                 lowerCount={'1grade'}/>\r\n                                </div>\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                <div className={s.cell}>updated<SortCardsContainer upperSort={'0updated'}\r\n                                                                                   lowerCount={'1updated'}/>\r\n                                </div>\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">url</TableCell>\r\n                            <TableCell align=\"center\">\r\n                                <button onClick={showAddCardModalHandler} disabled={appStatus === \"loading\"}>add\r\n                                </button>\r\n                            </TableCell>\r\n\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {cards.map((card: CardType) => (\r\n                            <TableRow\r\n                                key={card.cardsPack_id}\r\n                                sx={{'&:last-child td, &:last-child th': {border: 0}}}\r\n                            >\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {card.question}\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">{card.answer}</TableCell>\r\n                                <TableCell align=\"center\">{card.grade}</TableCell>\r\n                                <TableCell align=\"center\">{card.updated}</TableCell>\r\n                                <TableCell align='center'>\r\n                                    <button onClick={() => {\r\n                                        showDelCardModalHandler(card._id)\r\n                                    }} disabled={appStatus === \"loading\" || user_id !== card.user_id}>del\r\n                                    </button>\r\n                                </TableCell>\r\n                                <TableCell align='center'>\r\n                                    <button onClick={() => {\r\n                                        showUpdateCardModalHandler(card._id)\r\n                                    }} disabled={appStatus === \"loading\" || user_id !== card.user_id}>update\r\n                                    </button>\r\n                                </TableCell>\r\n\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/photo-profile.ae88cd5b.png\";","export default __webpack_public_path__ + \"static/media/photo-icon.c128641c.svg\";","import s from \"./ProfileForm.module.scss\";\r\nimport Subtitle from \"../../../assets/components/common/subtitle/Subtitle.jsx\";\r\nimport { Input } from \"../../../assets/components/common/input/Input\";\r\n\r\nimport img from \"../../../assets/img/photo-profile.png\";\r\nimport icon from \"../../../assets/img/photo-icon.svg\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {AuthResponseType} from \"../../../n1-main/m2-bll/api/api\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Button from \"../../../assets/components/common/button/Button\";\r\n\r\n// данные для input nickname\r\nconst inputData1 = {\r\n   id: \"nickname\",\r\n   type: \"text\",\r\n   name: \"nickname\",\r\n   for: \"nickname\",\r\n   label: \"Nickname\",\r\n   style: {\r\n      display: \"none\"\r\n   }\r\n}\r\n\r\n// данные для input email\r\nconst inputData2 = {\r\n   id: \"email\",\r\n   type: \"email\",\r\n   name: \"email\",\r\n   for: \"email\",\r\n   label: \"Email\",\r\n   style: {\r\n      display: \"none\"\r\n   }\r\n}\r\n\r\n// данные для input publicCardPacksCount\r\nconst inputData3 = {\r\n   id: \"publicCardPacksCount\",\r\n   type: \"text\",\r\n   name: \"publicCardPacksCount\",\r\n   for: \"publicCardPacksCount\",\r\n   label: \"Cards packs count\",\r\n   style: {\r\n      display: \"none\"\r\n   }\r\n}\r\n\r\n\r\n// стилизация кнопок\r\nconst styleButton1 = {\r\n   backgroundColor: \"#D7D8EF\",\r\n   color: \"#21268F\",\r\n   width: \"124px\",\r\n   boxShadow: \"none\"\r\n}\r\n\r\nconst styleButton2 = {\r\n   width: \"124px\"\r\n}\r\n\r\nexport default function ProfileForm() {\r\n   const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.auth.isLoggedIn)\r\n   const { name, email, publicCardPacksCount} = useSelector<AppStoreType, AuthResponseType>(state => state.profile)\r\n\r\n   if (!isLoggedIn) {\r\n      return <Navigate to=\"/login\"/>\r\n   }\r\n\r\n   return (\r\n      <form action=\"\">\r\n         <div className={s.contentWrap}>\r\n            <Subtitle subtitle=\"Personal Information\" />\r\n            <div className={s.img}>\r\n               <img src={img} alt=\"img\" />\r\n               <div className={s.icon}>\r\n                  <img src={icon} alt=\"icon\" />\r\n               </div>\r\n            </div>\r\n            <Input inputData={inputData1} value={name} onChange={() => {}}/>\r\n            <Input inputData={inputData2} value={email} onChange={() => {}}/>\r\n            <Input inputData={inputData3} value={publicCardPacksCount} onChange={() => {}}/>\r\n            <div className={s.block}>\r\n               <Button label=\"Cancel\" style={styleButton1} />\r\n               <Button label=\"Save\" style={styleButton2} />\r\n            </div>\r\n         </div>\r\n      </form >\r\n   );\r\n}\r\n\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {RecoveryAPI} from \"./api/api\";\r\nimport {setAppStatusAC, SetAppStatusAT} from \"./appReducer\";\r\n\r\nconst initialState: InitialStateType = {\r\n    success: false,\r\n    error: null,\r\n    info: null\r\n}\r\n\r\nexport const passwordRecoveryReducer = (state = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case 'recovery/SET-SUCCESS':\r\n            return {...state, success: action.success, error: ''}\r\n        case 'recovery/SET-ERROR':\r\n            return {...state, error: action.error, success: false}\r\n        case 'recovery/SET-PASS':\r\n            return {...state, info: action.info, error: ''}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sendPassRecoveryTC = (email: string) => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    RecoveryAPI.recoveryPass(email)\r\n        .then((res) => {\r\n            if (res.data.success) {\r\n                dispatch(setSuccessAC(true))\r\n                alert('Письмо отправлено')\r\n            }\r\n        })\r\n        .catch(e => {\r\n            dispatch(setErrorAC(e.response.data.error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\nexport const setNewPassTC = (password: string, token: string) => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    RecoveryAPI.newPass(password, token)\r\n        .then((res) => {\r\n            dispatch(setNewPassAC(res.data.info))\r\n            alert('Пароль изменен')\r\n\r\n        })\r\n        .catch(e => {\r\n            dispatch(setErrorAC(e.response.data.error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\nexport const setSuccessAC = (success: boolean) => ({type: 'recovery/SET-SUCCESS', success} as const)\r\nexport const setNewPassAC = (info: string) => ({type: 'recovery/SET-PASS', info} as const)\r\nexport const setErrorAC = (error: string) => ({type: 'recovery/SET-ERROR', error} as const)\r\n\r\n\r\ntype InitialStateType = {\r\n    success: boolean\r\n    error: null | string\r\n    info: null | string\r\n\r\n}\r\n\r\ntype ActionType =\r\n    | ReturnType<typeof setSuccessAC>\r\n    | ReturnType<typeof setErrorAC>\r\n    | ReturnType<typeof setNewPassAC>\r\n    | SetAppStatusAT\r\n\r\n\r\n\r\n\r\n","import s from \"./PasswordRecoveryForm.module.scss\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Title from \"../../../assets/components/common/title/Title.jsx\";\r\nimport Subtitle from \"../../../assets/components/common/subtitle/Subtitle.jsx\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {useFormik} from \"formik\";\r\nimport {sendPassRecoveryTC} from \"../../../n1-main/m2-bll/passwordRecoveryReducer\";\r\nimport React from \"react\";\r\nimport {Input} from \"../../../assets/components/common/input/Input\";\r\nimport Button from \"../../../assets/components/common/button/Button\";\r\n\r\n// данные для input email\r\nconst inputData1:inputDataType = {\r\n    id: \"email\",\r\n    type: \"email\",\r\n    name: \"email\",\r\n    for: \"email\",\r\n    label: \"Email\",\r\n    style: {\r\n        display: \"none\"\r\n    }\r\n}\r\n\r\nexport default function PasswordRecoveryForm() {\r\n\r\n    const dispatch = useDispatch()\r\n    const errorFromServer = useSelector<AppStoreType, string | null>(state => state.recovery.error)\r\n\r\n    const formik = useFormik({\r\n\r\n        initialValues: {\r\n            email: '',\r\n        },\r\n\r\n        validate: (values) => {\r\n            const errors: Partial<FormikErrorType> = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: values => {\r\n            // alert(JSON.stringify(values))\r\n            formik.resetForm()\r\n            dispatch(sendPassRecoveryTC(values.email))\r\n        },\r\n    })\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div className={s.contentWrap}>\r\n                <Title/>\r\n                <Subtitle subtitle=\"Forgot your password?\"/>\r\n                <Input inputData={inputData1}\r\n                       {...formik.getFieldProps('email')}/>\r\n                {formik.touched.email && formik.errors.email ? (\r\n                    <div className={s.error}>{formik.errors.email}</div>) : null}\r\n                {errorFromServer ? <span className={s.error}>{errorFromServer}</span> : null}\r\n                <span className={s.text}>Enter your email address and we will send you further instructions </span>\r\n                <Button label=\"Send Instructions\"/>\r\n                <span className={s.question}>Did you remember your password?</span>\r\n                <NavLink className={s.link} to={'/login'}>Try logging in</NavLink>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\ntype FormikErrorType = {\r\n    email: string\r\n}\r\nexport type inputDataType = {\r\n    id?: string\r\n    type?: string\r\n    name?: string\r\n    for?: string\r\n    label?: string\r\n    style: {\r\n        display: string\r\n    }\r\n}\r\n\r\n\r\n\r\n","import s from \"./PasswordNewForm.module.scss\";\r\nimport Title from \"../../../assets/components/common/title/Title.jsx\";\r\nimport Subtitle from \"../../../assets/components/common/subtitle/Subtitle.jsx\";\r\nimport {Input} from \"../../../assets/components/common/input/Input\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Navigate,useParams} from \"react-router-dom\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {useFormik} from \"formik\";\r\nimport {setNewPassTC} from \"../../../n1-main/m2-bll/passwordRecoveryReducer\";\r\nimport React from \"react\";\r\nimport Button from \"../../../assets/components/common/button/Button\";\r\n\r\n// данные для input password\r\nconst inputData2:inputDataType = {\r\n    id: \"password\",\r\n    type: \"password\",\r\n    name: \"password\",\r\n    for: \"password\",\r\n    label: \"Password\",\r\n    style: {\r\n        display: \"inlineBlock\"\r\n    }\r\n}\r\n\r\nexport default function PasswordNewForm() {\r\n    const dispatch = useDispatch()\r\n    const {token} = useParams<'token'>();\r\n\r\n    const errorFromServer = useSelector<AppStoreType, string | null>(state => state.recovery.error)\r\n    const infoFromServer = useSelector<AppStoreType, string | null>(state => state.recovery.info)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            password: '',\r\n        },\r\n        onSubmit: values => {\r\n            if (token)\r\n                dispatch(setNewPassTC(values.password, token));\r\n        },\r\n        validate: (values) => {\r\n            const errors: Partial<FormikErrorType> = {};\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 7) {\r\n                errors.password = 'Must be 7 characters or more';\r\n            }\r\n            return errors\r\n        },\r\n    },);\r\n\r\n    if (infoFromServer) {\r\n        return <Navigate to={\"/login\"}/>\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div className={s.contentWrap}>\r\n                <Title/>\r\n                <Subtitle subtitle=\"Create new password\"/>\r\n                <Input inputData={inputData2}\r\n                       {...formik.getFieldProps('password')}/>\r\n                {formik.touched.password && formik.errors.password ? (\r\n                    <div className={s.error}>{formik.errors.password}</div>\r\n                ) : null}\r\n                {errorFromServer ? <span className={s.error}>{errorFromServer}</span> : null}\r\n                <span className={s.text}>Create new password and we will send you further instructions to email</span>\r\n                <div className={s.btn}>\r\n                    <Button label=\"Create new password\"/>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\ntype FormikErrorType = {\r\n    password: string\r\n}\r\n\r\nexport type inputDataType = {\r\n    id?: string\r\n    type?: string\r\n    name?: string\r\n    for?: string\r\n    label?: string\r\n    style: {\r\n        display: string\r\n    }\r\n}\r\n\r\n","import s from \"./Search.module.scss\";\r\n\r\n\r\nexport default function Search(props) {\r\n   return (\r\n      <div className={s.search}>\r\n         <input className={s.inputSearch}  name=\"name\" type=\"text\" placeholder=\"Search...\" autofocus />\r\n      </div>\r\n   );\r\n}\r\n","import s from \"./CellCommon.module.scss\";\r\n\r\n\r\nexport default function CellCommon(props) {\r\n   return (\r\n      <td className={s.td}>{props.cellData}</td>        \r\n    );\r\n}\r\n\r\n","import s from \"./TableButton.module.scss\";\r\nimport {CSSProperties} from \"react\";\r\n\r\n// в месте, где используется кнопка, если нужно, стилизуем кнопку\r\n// const styleButton = {\r\n//    padding: \"19px 61px\",\r\n//    fontSize: \"14px\",\r\n//    letterSpacing: \"0.8px\"\r\n// }\r\n\r\n// style={styleButton}\r\n\r\nexport default function TableButton(props: PropsType) {\r\n    return (\r\n        <button className={s.btn} style={props.style} onClick={props.onClick} disabled={props.disabled}>{props.label} </button>\r\n    );\r\n}\r\n\r\ntype PropsType = {\r\n    label: string\r\n    onClick: () => void\r\n    disabled?: boolean\r\n    style: CSSProperties | undefined\r\n}\r\n\r\n\r\n","import { Rating } from \"@mui/material\";\r\nimport { styled } from '@mui/material/styles';\r\nimport StarIcon from '@mui/icons-material/Star';\r\n\r\nconst StyledRating = styled(Rating)({\r\n   '& .MuiRating-icon ': {\r\n      marginRight: 3,\r\n      marginTop: 17,\r\n      fontSize: \"13px\"\r\n   }   \r\n});\r\n\r\nexport default function UseRating(props) {\r\n   return (\r\n      <StyledRating\r\n         readOnly       \r\n         precision={0.5}\r\n         defaultValue={props.data}\r\n         icon={<StarIcon style={{ color: \"#21268F\" }} fontSize=\"13px\" />}\r\n         emptyIcon={<StarIcon style={{ color: \"#D7D8EF\" }} fontSize=\"13px\" />}\r\n      />\r\n   )\r\n}\r\n\r\n\r\n","import s from \"./RatingCell.module.scss\";\r\nimport UseRating from \"./../../common/rating/UseRating.jsx\";\r\n\r\nexport default function RatingCell(props) {\r\n   return (\r\n      <div className={s.ratingCell}>         \r\n            <UseRating data={props.cellData} />         \r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n","import s from \"./TableRow.module.scss\";\r\nimport CellCommon from \"../cell-common/CellCommon.jsx\";\r\nimport TableButton from \"../table-button/TableButton.tsx\";\r\nimport RatingCell from \"./../rating-cell/RatingCell.jsx\";\r\n\r\n\r\n// стилизация кнопки\r\nconst buttonStyle = {\r\n   backgroundColor: \"#F1453D\",\r\n   color: \"#FFFFFF\",\r\n   fontWeight: 500\r\n}\r\n\r\n\r\nexport default function TableRow(props) {\r\n   return (\r\n      <tr className={s.tr}>         \r\n         <CellCommon cellData={props.cellData.td1} />\r\n         <CellCommon cellData={props.cellData.td2} />\r\n         <CellCommon cellData={props.cellData.td3} />\r\n         {/* <CellCommon cellData={props.cellData.td4} /> */}\r\n         <RatingCell cellData={props.cellData.rating}/>\r\n         <td className={s.td}>\r\n            <div className={s.btnBlock}>\r\n               <TableButton label=\"Delete\" style={buttonStyle}/>\r\n               <TableButton label=\"Edit\" />\r\n               {/* <TableButton label=\"Learn\" /> */}\r\n            </div>\r\n         </td>\r\n      </tr>\r\n   );\r\n}\r\n","import s from \"./HeadCell.module.scss\";\r\n\r\n\r\nexport default function TheadCell(props) {\r\n   return (\r\n      <th className={s.th} style={props.cellStyle}>{props.cellData}</th>\r\n   );     \r\n}","export default __webpack_public_path__ + \"static/media/arrow-icon.f30a3c93.svg\";","import s from \"./HeadButtonCell.module.scss\";\r\n\r\nimport icon from \"./../../../img/arrow-icon.svg\";\r\n\r\nexport default function TheadCell(props) {\r\n   return (\r\n      <th className={s.th} style={props.cellStyle}>{props.cellData}<button className={s.btn} ><img className={s.icon} src={icon} alt=\"icon\" /></button></th>\r\n   );     \r\n}","import s from \"./Table.module.scss\";\r\nimport TableRow from \"./table-row/TableRow.jsx\";\r\nimport HeadCell from \"./head-cell/HeadCell.jsx\";\r\nimport HeadButtonCell from \"./head-button-cell/HeadButtonCell.jsx\";\r\n\r\n\r\nexport default function Table(props) {\r\n   return (\r\n      <div className={s.tableWrap}>\r\n         <table className={s.table}>\r\n            <thead className={s.thead}>\r\n               <tr className={s.tr}>\r\n                  <HeadCell cellStyle={props.style.th1} cellData={props.tableData.title1} />\r\n                  <HeadCell cellStyle={props.style.th2} cellData={props.tableData.title2} />\r\n                  <HeadButtonCell cellStyle={props.style.th3} cellData={props.tableData.title3} />\r\n                  <HeadCell cellStyle={props.style.th4} cellData={props.tableData.title4} />\r\n                  <HeadCell cellStyle={props.style.th5} cellData={props.tableData.title5} />\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               <TableRow cellData={props.tableData.dataRow1} />\r\n               {/* <TableRow cellData={props.tableData.dataRow2} />\r\n               <TableRow cellData={props.tableData.dataRow3} />\r\n               <TableRow cellData={props.tableData.dataRow4} />\r\n               <TableRow cellData={props.tableData.dataRow5} />\r\n               <TableRow cellData={props.tableData.dataRow6} />\r\n               <TableRow cellData={props.tableData.dataRow7} />\r\n               <TableRow cellData={props.tableData.dataRow8} /> */}\r\n               {/* <TableRow cellData={props.tableData.dataRow7} />\r\n               <TableRow cellData={props.tableData.dataRow8} /> */}\r\n            </tbody>           \r\n         </table>\r\n      </div>\r\n   );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Slider from '@mui/material/Slider';\r\nimport { styled } from '@mui/material/styles';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nfunction ValueLabelComponent(props) {\r\n   const { children, value } = props;\r\n \r\n   return (\r\n     <Tooltip enterTouchDelay={0} placement=\"top\" title={value}>\r\n       {children}\r\n     </Tooltip>\r\n   );\r\n }\r\n \r\n ValueLabelComponent.propTypes = {\r\n   children: PropTypes.element.isRequired,\r\n   value: PropTypes.number.isRequired,\r\n };\r\n \r\n\r\n const MySlider = styled(Slider)({\r\n   color: '#21268F',\r\n   height: 5,\r\n   '& .MuiSlider-track': {\r\n     border: 'none',\r\n   },\r\n   '& .MuiSlider-thumb': {\r\n     height: 16,\r\n     width: 16,\r\n     backgroundColor: '#fff',\r\n     border: '4px solid currentColor',\r\n     '&:focus, &:hover, &.Mui-active, &.Mui-focusVisible': {\r\n       boxShadow: 'inherit',\r\n     },\r\n     '&:before': {\r\n       display: 'none',\r\n     },\r\n   },\r\n   '& .MuiSlider-valueLabel': {\r\n     lineHeight: 1.2,\r\n     fontSize: 12,\r\n     background: 'unset',\r\n     padding: 0,\r\n     width: 32,\r\n     height: 24,\r\n     borderRadius: 3,\r\n     backgroundColor: '#21268F',    \r\n     '&:before': { display: 'none' },     \r\n   },\r\n });\r\n\r\n\r\n \r\n function valuetext(value) {\r\n   return `${value}number`;\r\n }\r\n \r\n export default function RangeSlider() {\r\n   const [value, setValue] = React.useState([15, 112]);\r\n \r\n   const handleChange = (event, newValue) => {\r\n     setValue(newValue);\r\n   };\r\n \r\n   return (\r\n\r\n     <Box sx={{ width: 195 }}>\r\n       <MySlider         \r\n         max={150}\r\n         getAriaLabel={() => 'Number of cards'}\r\n         value={value}\r\n         onChange={handleChange}\r\n         valueLabelDisplay=\"on\"\r\n         getAriaValueText={valuetext}\r\n       />\r\n     </Box>\r\n   );\r\n }\r\n \r\n\r\n\r\n ","import s from \"./UseSlider.Module.scss\";\r\nimport MySlider from \"./MySlider.jsx\";\r\n\r\nexport default function UseSlider () {\r\n   return (\r\n      <div className={s.useSlider}>\r\n         <span className={s.label}>Number of cards</span>\r\n         <MySlider />\r\n      </div>\r\n   )\r\n}\r\n\r\n","import s from './UsePagination.module.scss';\r\nimport usePagination from '@mui/material/usePagination';\r\nimport { styled } from '@mui/material/styles';\r\n\r\n\r\nconst List = styled('ul')({\r\n   listStyle: 'none',\r\n   margin: 0,\r\n   display: 'flex',\r\n   alignItems: \"center\",\r\n});\r\n\r\n\r\nexport default function UsePagination() {\r\n   const { items } = usePagination({\r\n      count: 10,\r\n   });\r\n\r\n   return (\r\n      <nav className={s.UsePagination}>\r\n         <List >\r\n            {items.map(({ page, type, selected, ...item }, index) => {\r\n               let children = null;\r\n               if (type === 'start-ellipsis' || type === 'end-ellipsis') {\r\n                  children = '…';\r\n               } else if (type === 'page') {\r\n                  children = (\r\n                     <button\r\n                        type=\"button\"\r\n                        style={{\r\n                           borderWidth: 0,\r\n                           backgroundColor: selected ? \"#21268F\" : \"transparent\",\r\n                           color: selected ? \"#F2F5F7\" : \"#2D2E46\",\r\n                           width: \"24px\",\r\n                           height: \"24px\",\r\n                           borderRadius: \"3px\",\r\n                           fontFamily: \"Lato\",\r\n                           fontSize: \"12px\",\r\n                           lineHeight: \"120%\",\r\n                           cursor: \"pointer\",\r\n                        }}\r\n                        {...item}\r\n                     >\r\n                        {page}\r\n                     </button>\r\n                  );\r\n               } else {\r\n                  children = (\r\n                     <button type=\"button\" {...item}>\r\n                        {type}\r\n                     </button>\r\n                  );\r\n               } return <li\r\n                  style={{\r\n                     marginRight: \"15px\",\r\n                  }}\r\n                  key={index}>{children}</li>;\r\n            })}\r\n         </List>\r\n      </nav>\r\n   );\r\n}\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport InputBase from '@mui/material/InputBase';\r\n\r\nconst BootstrapInput = styled(InputBase)(({ theme }) => ({\r\n   'label + &': {\r\n      marginTop: theme.spacing(3),\r\n   },\r\n   '& .MuiInputBase-input': {\r\n      borderRadius: 0,\r\n      position: 'relative',\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '1px solid #C0BECC',\r\n      fontSize: \"12px\",\r\n      padding: '0 0 0 6px',\r\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n      // Use the system font instead of the default Roboto font.\r\n      fontFamily: [\r\n         'Roboto',\r\n      ].join(','),\r\n      '&:focus': {\r\n         // borderColor: '#80bdff',\r\n         // boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n      },\r\n   },\r\n}));\r\n\r\nexport default function CustomizedSelects() {\r\n   const [age, setAge] = React.useState(10);\r\n   const handleChange = (event) => {\r\n      setAge(event.target.value);\r\n   };\r\n   return (\r\n      <div>\r\n         <FormControl sx={{ m: 1 }} variant=\"standard\">\r\n            {/* <InputLabel id=\"demo-customized-select-label\">Age</InputLabel> */}\r\n            <Select\r\n               labelId=\"demo-customized-select-label\"\r\n               id=\"demo-customized-select\"\r\n               value={age}\r\n               onChange={handleChange}\r\n               input={<BootstrapInput />}\r\n            >\r\n               <MenuItem value={10}>10</MenuItem>\r\n               <MenuItem value={20}>20</MenuItem>\r\n               <MenuItem value={30}>30</MenuItem>\r\n            </Select>\r\n         </FormControl>\r\n      </div>\r\n   );\r\n}","import s from \"./BottomBlock.module.scss\";\r\nimport UsePagination from \"../pagination/UsePagination.jsx\";\r\nimport Select from \"../select/Select.jsx\";\r\n\r\n\r\nexport default function BottomBlock() {\r\n   return (\r\n      <div className={s.bottomBlock}>\r\n               <UsePagination />\r\n               <div className={s.selectBlock}>\r\n                  <span className={s.label1}>Show</span>\r\n                  <div className={s.selectWrap}>\r\n                     <Select />\r\n                  </div>\r\n                  <span className={s.label2}>Cards per Page</span>\r\n               </div>\r\n            </div>\r\n   )\r\n}\r\n\r\n\r\n","import s from \"./PacksList.module.scss\";\r\nimport Subtitle from \"./../common/subtitle/Subtitle.jsx\";\r\nimport Button from \"../common/button/Button.tsx\";\r\nimport Search from \"./../common/search/Search.jsx\";\r\nimport Table from \"./../table/Table.jsx\";\r\nimport UseSlider from \"../common/slider/UseSlider.jsx\";\r\nimport BottomBlock from \"./../common/bottom-block/BottomBlock\";\r\n\r\n\r\n// стилизация синей кнопоки\r\nconst buttonStyle = {\r\n   width: \"184px\",\r\n   marginLeft: \"24px\"\r\n}\r\n\r\n// стилизация ширины столбцов таблицы\r\nconst tableStyle = {\r\n   th1: {\r\n     width: \"185px\",\r\n  },\r\n  th2: {\r\n     width: \"77px\",\r\n  },\r\n  th3: {\r\n     width: \"135px\",\r\n  },\r\n  th4: {\r\n     width: \"112px\",\r\n  },\r\n  th5: {\r\n     width: \"160px\",\r\n  }\r\n}\r\n\r\n// данные для таблицы\r\nconst tableData = {\r\n   title1: \"Name\",\r\n   title2: \"Cards\",\r\n   title3: \"Last Updated\",\r\n   title4: \"Created by\",\r\n   title5: \"Actions\",\r\n   dataRow1: {\r\n      td1: \"Pack Name\",\r\n      td2: \"4\",\r\n      td3: \"18.03.2021\",\r\n      td4: \"Ivan Ivanov\"\r\n   },\r\n   dataRow2: {\r\n      td1: \"Pack Name\",\r\n      td2: \"4\",\r\n      td3: \"18.03.2021\",\r\n      td4: \"Ivan Ivanov\"\r\n   },\r\n   dataRow3: {\r\n      td1: \"Pack Name\",\r\n      td2: \"4\",\r\n      td3: \"18.03.2021\",\r\n      td4: \"Ivan Ivanov\"\r\n   },\r\n   dataRow4: {\r\n      td1: \"Pack Name\",\r\n      td2: \"4\",\r\n      td3: \"18.03.2021\",\r\n      td4: \"Ivan Ivanov\"\r\n   },\r\n   dataRow5: {\r\n      td1: \"Pack Name\",\r\n      td2: \"4\",\r\n      td3: \"18.03.2021\",\r\n      td4: \"Ivan Ivanov\"\r\n   },\r\n   dataRow6: {\r\n      td1: \"Pack Name\",\r\n      td2: \"4\",\r\n      td3: \"18.03.2021\",\r\n      td4: \"Ivan Ivanov\"\r\n   },\r\n   dataRow7: {\r\n      td1: \"Pack Name\",\r\n      td2: \"4\",\r\n      td3: \"18.03.2021\",\r\n      td4: \"Ivan Ivanov\"\r\n   },\r\n   dataRow8: {\r\n      td1: \"Pack Name\",\r\n      td2: \"4\",\r\n      td3: \"18.03.2021\",\r\n      td4: \"Ivan Ivanov\"\r\n   }\r\n}\r\n\r\nexport default function PacksList() {\r\n   return (\r\n      <div className={s.packsList}>\r\n         <aside className={s.sidebar}>\r\n            <span className={s.label}>Show packs cards</span>\r\n            <div className={s.btnBlock}>\r\n               <button className={`${s.btn} ${s.active}`}>My</button>\r\n               <button className={s.btn}>All</button>\r\n            </div>\r\n            <UseSlider />\r\n         </aside>\r\n         <main className={s.main}>\r\n            <div className={s.title}>\r\n               <Subtitle subtitle=\"Packs list\" />\r\n            </div>\r\n            <div className={s.searchBlock}>\r\n               <div className={s.search}>\r\n                  <Search />\r\n               </div>\r\n               <Button label=\"Add new pack\" style={buttonStyle} />\r\n            </div>\r\n            <Table tableData={tableData} style={tableStyle} />\r\n            <BottomBlock />\r\n         </main>\r\n      </div>\r\n   );\r\n}\r\n\r\n\r\n","import React, {CSSProperties} from 'react';\r\n\r\ninterface IModal {\r\n    enableBackground?: boolean;\r\n    backgroundStyle?: CSSProperties;\r\n    backgroundOnClick?: () => void;\r\n\r\n    width: number;\r\n    height: number;\r\n    modalStyle?: CSSProperties;\r\n    modalOnClick?: () => void;\r\n\r\n    show: boolean\r\n}\r\n\r\nconst Modal: React.FC<IModal> = (\r\n    {\r\n        enableBackground,\r\n        backgroundStyle,\r\n        backgroundOnClick = () => {},\r\n\r\n        width,\r\n        height,\r\n        modalStyle,\r\n        modalOnClick = () => {},\r\n\r\n        show,\r\n        children,\r\n    }\r\n) => {\r\n    const top = `calc(50vh - ${height / 2}px)`;\r\n    const left = `calc(50vw - ${width / 2}px)`;\r\n\r\n    if (!show) return null;\r\n\r\n    return (\r\n        <>\r\n            {enableBackground && <div\r\n              style={{\r\n                  position: 'fixed',\r\n                  top: '0px',\r\n                  left: '0px',\r\n                  width: '100vw',\r\n                  height: '100vh',\r\n\r\n                  background: 'black',\r\n                  opacity: 0.35,\r\n                  zIndex: 20,\r\n\r\n                  ...backgroundStyle,\r\n              }}\r\n              onClick={backgroundOnClick}\r\n            />}\r\n            <div\r\n                style={{\r\n                    position: 'fixed',\r\n                    top,\r\n                    left,\r\n                    width,\r\n                    height,\r\n                    display: 'flex',\r\n                    flexFlow: 'column',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n\r\n                    background: 'lime',\r\n                    zIndex: 21,\r\n\r\n                    ...modalStyle,\r\n                }}\r\n                onClick={modalOnClick}\r\n            >\r\n                {children}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Modal;","import React, {useEffect, useState} from 'react';\r\nimport Modal from \"./ModalIgn\";\r\n\r\ninterface IModalUp {\r\n    speed?: number // 1 - fast; 100 - slow\r\n}\r\n\r\nconst ModalUp: React.FC<IModalUp> = ({speed = 10}) => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleScroll = () => {\r\n        if (window.pageYOffset > 300) setShow(true);\r\n        else setShow(false);\r\n    };\r\n\r\n    const scroll = () => {\r\n        const step = window.pageYOffset / speed;\r\n        let lastState = window.pageYOffset;\r\n\r\n        const innerTimer = setInterval(() => {\r\n            if (lastState < window.pageYOffset) clearInterval(innerTimer);\r\n            lastState = window.pageYOffset;\r\n\r\n            window.scroll(0, lastState - step);\r\n            if (window.pageYOffset === 0) clearInterval(innerTimer);\r\n        }, 50);\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                enableBackground={false}\r\n\r\n                width={70}\r\n                height={50}\r\n                modalOnClick={scroll}\r\n                modalStyle={{\r\n                    top: '80vh',\r\n                    left: '20px'\r\n                }}\r\n\r\n                show={show}\r\n            >\r\n                Up\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ModalUp;","import s from \"./LearnQuestionAnswer.module.scss\";\r\nimport Subtitle from \"../../assets/components/common/subtitle/Subtitle.jsx\";\r\nimport TableButton from \"../../assets/components/table/table-button/TableButton\";\r\nimport Button from \"../../assets/components/common/button/Button\";\r\nimport {CardType, getCardsTC, updateGradeTC} from \"../../n1-main/m2-bll/cardsReducer\";\r\nimport {NavLink, useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../n1-main/m2-bll/store\";\r\nimport {RequestStatusType} from \"../../n1-main/m2-bll/appReducer\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {PackType} from \"../../n1-main/m2-bll/packsReducer\";\r\nimport {setCardsPageCountAC} from \"../../n1-main/m2-bll/findAndPaginationReducer\";\r\n\r\n// стилизация кнопок\r\nconst tableButtonStyle1 = {\r\n   '.active': {\r\n       border: \"2px solid #21268F\"\r\n   },\r\n   textAligne: \"center\",\r\n   fontWeight: \"400\",\r\n   fontSize: \"16px\",\r\n   width: \"150px\",\r\n   marginBottom: \"12px\"\r\n}\r\n\r\nconst tableButtonStyle2 = {\r\n   //  ':disabled': {\r\n   //      color: '#939597',\r\n   //  }, // this is not working\r\n    width: \"124px\",\r\n    height: \"36px\",\r\n    borderRadius: \"18px\",\r\n    fontWeight: \"500\",\r\n    fontSize: \"16px\"\r\n}\r\n\r\nconst buttonStyle = {\r\n    width: \"187px\"\r\n}\r\n\r\n\r\n// grades for ourselves\r\nconst grades = ['Wrong', 'Did not know', 'Forgot', 'A lot of thought', 'Knew the answer'];\r\n\r\n// clever random\r\nconst getCard = (cards: Array<CardType>) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1});\r\n\r\n    return cards[res.id + 1];\r\n}\r\n\r\nexport default function LearnQuestionAnswer() {\r\n    const cardsPacksFromLS = localStorage.getItem('cardsPacks')  // get CardPacks from LS to save it while F5\r\n\r\n    let cardsPacksFromLSParsed = []\r\n    if (cardsPacksFromLS) cardsPacksFromLSParsed = JSON.parse(cardsPacksFromLS)\r\n\r\n    let {packid} = useParams()\r\n\r\n    const dispatch: Function = useDispatch();\r\n\r\n    const cards = useSelector<AppStoreType, Array<CardType>>(state => state.cards.cards)\r\n\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.auth.isLoggedIn)\r\n    const appStatus = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n\r\n    const [isFirstRun, setIsFirstRun] = useState<boolean>(true)\r\n    const [card, setCard] = useState<CardType>({\r\n        answer: '',\r\n        answerImg: '',\r\n        answerVideo: '',\r\n        cardsPack_id: '',\r\n        comments: '',\r\n        created: '',\r\n        grade: 0,\r\n        more_id: '',\r\n        question: '',\r\n        questionImg: '',\r\n        questionVideo: '',\r\n        rating: 0,\r\n        shots: 0,\r\n        type: '',\r\n        updated: '',\r\n        user_id: '',\r\n        __v: 0,\r\n        _id: '',\r\n    });\r\n    const [isAnswerHidden, setIsAnswerHidden] = useState(true)\r\n\r\n    let selectedCardPack: PackType\r\n    selectedCardPack = cardsPacksFromLSParsed.find((e: PackType) => e._id === packid)\r\n\r\n    useEffect(() => {\r\n        if (isLoggedIn && packid) {\r\n            if (isFirstRun) {\r\n                setIsFirstRun(false);\r\n                dispatch(setCardsPageCountAC(selectedCardPack.cardsCount)) // for playing with all cards in pack\r\n                dispatch(getCardsTC(packid!))\r\n            }\r\n            if (cards.length > 0) {\r\n                setCard(getCard(cards))\r\n            }\r\n\r\n        }\r\n    }, [isLoggedIn, packid, cards.length])\r\n\r\n    let getNextCard = () => {\r\n        setIsAnswerHidden(true)\r\n        setCard(getCard(cards))\r\n    }\r\n\r\n    const sandGradeHandler = (grade: number) => {\r\n        dispatch(updateGradeTC(grade, card._id))\r\n            .then(() => {\r\n                // alert(`Grade: ${grade} for cardId: ${card._id} added` )\r\n                getNextCard()\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className={s.contentWrap}>\r\n            <div className={s.title}>\r\n                <Subtitle subtitle={`Learn “${selectedCardPack && selectedCardPack.name}”`}/>\r\n            </div>\r\n            <span className={s.textTop}><strong>Question</strong>: {`“${card.question}”`}</span>\r\n\r\n            {isAnswerHidden\r\n                ? <div className={s.btn}><Button onClick={() => setIsAnswerHidden(false)}\r\n                               disabled={appStatus === \"loading\"} label={'Answer'}/></div>\r\n                : <div className={s.answerBlock}>\r\n                    <span className={s.textBottom}><strong>Answer</strong>: {`“${card.answer}”`}</span>\r\n                    <div className={s.label}>Rate yourself:</div>\r\n                    <div className={s.topButtonBlock}>\r\n                        {grades.map((g, i) => (\r\n                            <TableButton key={i}\r\n                                         style={tableButtonStyle1}\r\n                                         label={g}\r\n                                         onClick={() => (sandGradeHandler(i + 1))}\r\n                                         disabled={appStatus === \"loading\"}/>\r\n\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            }\r\n            <div className={s.buttonBlock}>\r\n                <NavLink to={`/packs`}>\r\n                    <TableButton onClick = {() => {}} disabled={appStatus === \"loading\"} label=\"Cancel\" style={tableButtonStyle2}/>\r\n                </NavLink>\r\n                <Button disabled={appStatus === \"loading\"} label=\"Next\" style={buttonStyle} onClick={getNextCard}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// todo: speak about disabled style of Cancel Button.\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport \"./../App.css\"\r\nimport {Header} from \"../p1-header/Header\";\r\nimport {Navigate, Route, Routes} from \"react-router-dom\";\r\nimport {Page404} from \"../../../n2-features/f1-auth/Page404\";\r\nimport {Examples} from \"../../../n2-features/f0-test/Examples/Examples\";\r\nimport LoginForm from \"../../../n2-features/f1-auth/a1-login/LoginForm\";\r\nimport RegistrationForm from \"../../../n2-features/f1-auth/a2-register/RegistrationForm\";\r\nimport {Packs} from '../../../n2-features/f3-packs/Packs';\r\nimport {Cards} from '../../../n2-features/f4-cards/Cards';\r\nimport ProfileForm from \"../../../n2-features/f1-auth/a3-profile/ProfileForm\";\r\nimport PasswordRecoveryForm from \"../../../n2-features/f1-auth/a4-password-recovery/PasswordRecoveryForm\";\r\nimport PasswordNewForm from \"../../../n2-features/f1-auth/a4-password-recovery/PasswordNewForm\";\r\nimport PacksList from \"../../../assets/components/packs-list/UsePacksList\";\r\nimport ModalUp from \"../../../n2-features/f5-modal/ModalUp/ModalUp\";\r\nimport {LinearProgress} from \"@mui/material\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../m2-bll/store\";\r\nimport {RequestStatusType} from \"../../m2-bll/appReducer\";\r\nimport LearnQuestionAnswer from \"../../../n2-features/f6-learn/LearnQuestionAnswer\";\r\n\r\nexport const Main = () => {\r\n    const status = useSelector<AppStoreType, RequestStatusType>((state) => state.app.status)\r\n\r\n    return (\r\n        <div className='main'>\r\n            <ModalUp/>\r\n            <Header/>\r\n            {status === 'loading' && <LinearProgress/>}\r\n            <div className='content'>\r\n                <Routes>\r\n                    <Route path={'/registration'} element={<RegistrationForm/>}/>\r\n                    <Route path={'/login'} element={<LoginForm/>}/>\r\n                    <Route path={'/profile'} element={<ProfileForm/>}/>\r\n                    <Route path={'/404'} element={<Page404/>}/>\r\n                    <Route path={'/passwordrecovery'} element={<PasswordRecoveryForm/>}/>\r\n                    <Route path={'/passwordnew/:token'} element={<PasswordNewForm/>}/>\r\n                    <Route path={'/tests'} element={<Examples/>}/>\r\n                    <Route path=\"/\" element={<Navigate to=\"/login\"/>}/>\r\n                    <Route path=\"*\" element={<Navigate to=\"/404\"/>}/>\r\n                    <Route path={'/packs'} element={<Packs/>}/>\r\n                    <Route path={'/cards/:id'} element={<Cards/>}/>\r\n                    <Route path={'/packsdesigned'} element={<PacksList/>}/>\r\n                    <Route path={'/learn/:packid'} element={<LearnQuestionAnswer/>}/>\r\n                    <Route/>\r\n                </Routes>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Main} from \"./p2-main/Main\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../m2-bll/store\";\r\nimport {InitializeTC} from \"../m2-bll/authReducer\";\r\nimport {CircularProgress} from \"@mui/material\";\r\n\r\nexport const App = () => {\r\n    const dispatch = useDispatch()\r\n    const isInitialized = useSelector<AppStoreType, boolean>(state => state.app.isInitilize)\r\n\r\n    useEffect(() => {\r\n        dispatch(InitializeTC())\r\n    }, [])\r\n\r\n    if (!isInitialized) {\r\n        return <div\r\n            style={{position: 'fixed', top: '30%', textAlign: 'center', width: '100%'}}>\r\n            <CircularProgress/>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Main />\r\n        </div>\r\n    );\r\n}\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {testReducer} from \"./testReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {authReducer} from \"./authReducer\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {registrationReducer} from \"./registrationReducer\";\r\nimport {passwordRecoveryReducer} from \"./passwordRecoveryReducer\";\r\nimport {appReducer} from \"./appReducer\";\r\nimport {packsReducer} from \"./packsReducer\";\r\nimport {cardsReducer} from \"./cardsReducer\";\r\nimport {findAndPaginationReducer} from \"./findAndPaginationReducer\";\r\nimport {modalReducer} from \"./modalReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    testReducer: testReducer,\r\n    auth: authReducer,\r\n    profile: profileReducer,\r\n    registration: registrationReducer,\r\n    recovery: passwordRecoveryReducer,\r\n    app: appReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer,\r\n    findAndPagination: findAndPaginationReducer,\r\n    modal: modalReducer,\r\n})\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store; // for dev","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {App} from \"./n1-main/m1-ui/App\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./n1-main/m2-bll/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n// todo: I noticed this error: Encountered two children with the same key, `617ff51fd7b1030004090a1f`\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentWrap\":\"LearnQuestionAnswer_contentWrap__3B6UK\",\"answerBlock\":\"LearnQuestionAnswer_answerBlock__3ZxFl\",\"title\":\"LearnQuestionAnswer_title__k1_GY\",\"textTop\":\"LearnQuestionAnswer_textTop__3Jl8H\",\"textBottom\":\"LearnQuestionAnswer_textBottom__2ISbB\",\"label\":\"LearnQuestionAnswer_label__3Av6D\",\"topButtonBlock\":\"LearnQuestionAnswer_topButtonBlock__2gmKR\",\"buttonBlock\":\"LearnQuestionAnswer_buttonBlock__ilOGM\",\"btn\":\"LearnQuestionAnswer_btn__IT7hF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentWrap\":\"LoginForm_contentWrap__3txpI\",\"block\":\"LoginForm_block__3HIHd\",\"linkForgotPass\":\"LoginForm_linkForgotPass__PO7_n\",\"question\":\"LoginForm_question__7yz2w\",\"linkSignUp\":\"LoginForm_linkSignUp__34chF\",\"error\":\"LoginForm_error__2hR6i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentWrap\":\"RegistrationForm_contentWrap__2FBf_\",\"block\":\"RegistrationForm_block__2lXZF\",\"error\":\"RegistrationForm_error__1OiNd\",\"link\":\"RegistrationForm_link__Q_1MX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentWrap\":\"PasswordRecoveryForm_contentWrap__3QE9g\",\"text\":\"PasswordRecoveryForm_text__wXhut\",\"question\":\"PasswordRecoveryForm_question__1ypJA\",\"link\":\"PasswordRecoveryForm_link__1jJhp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Pack_table__lOMXg\",\"cell\":\"Pack_cell__2AO60\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentWrap\":\"PasswordNewForm_contentWrap__2Qv-Q\",\"text\":\"PasswordNewForm_text__2-aRc\",\"btn\":\"PasswordNewForm_btn__2GsD0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bottomBlock\":\"BottomBlock_bottomBlock__1WWD9\",\"label1\":\"BottomBlock_label1__tSCSE\",\"label2\":\"BottomBlock_label2__2LbLH\",\"selectBlock\":\"BottomBlock_selectBlock__2hg-a\",\"selectWrap\":\"BottomBlock_selectWrap__3j-Xo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__pfhQz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__1efK7\",\"superInput\":\"SuperInputText_superInput__-n5r7\",\"errorInput\":\"SuperInputText_errorInput__3ob-2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPackModal\":\"CommonAddUpdate_newPackModal__3ULC6\",\"titleBlock\":\"CommonAddUpdate_titleBlock__18dua\",\"content\":\"CommonAddUpdate_content__3wfOm\",\"input\":\"CommonAddUpdate_input__3HuZY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deletePackModal\":\"CommonDel_deletePackModal__vvop5\",\"titleBlock\":\"CommonDel_titleBlock__1RXL2\",\"content\":\"CommonDel_content__33TKu\",\"text\":\"CommonDel_text__2qwlm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"Cards_cell__1G1oG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentWrap\":\"ProfileForm_contentWrap__39819\",\"img\":\"ProfileForm_img__fZFLY\",\"icon\":\"ProfileForm_icon__3lCcd\",\"block\":\"ProfileForm_block__2NtDA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrap\":\"Table_tableWrap__3r6nh\",\"table\":\"Table_table__3ZPta\",\"thead\":\"Table_thead__2gKMj\",\"tr\":\"Table_tr__8kAES\"};"],"sourceRoot":""}