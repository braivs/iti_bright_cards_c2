{"version":3,"sources":["n2-features/f1-auth/a1-login/Login.module.scss","n2-features/f0-test/TestForReducer/TestForReducer.module.scss","n2-features/f0-test/Examples/Examples.module.scss","assets/components/common/login-form/LoginForm.module.scss","n1-main/m1-ui/p1-header/Header.module.scss","reportWebVitals.ts","n1-main/m2-bll/api/api.ts","n1-main/m2-bll/profileReducer.ts","n1-main/m2-bll/appReducer.ts","n1-main/m2-bll/authReducer.ts","n1-main/m1-ui/p1-header/Header.tsx","n1-main/m1-ui/common/c1-SuperInputText/SuperInputText.tsx","n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/common/c2-SuperButton/SuperButton.tsx","n2-features/f1-auth/a1-login/Login.tsx","n2-features/f1-auth/a2-register/RegistrationForm/RegistrationForm.tsx","n1-main/m2-bll/registrationReducer.ts","n2-features/f1-auth/a2-register/Registration.tsx","n2-features/f1-auth/a3-profile/Profile.tsx","n2-features/f1-auth/Page404.tsx","n1-main/m2-bll/passwordRecoveryReducer.ts","n2-features/f1-auth/PasswordRecovery.tsx","n2-features/f1-auth/PasswordNew.tsx","n1-main/m1-ui/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","n1-main/m1-ui/common/c5-SuperSelect/SuperSelect.tsx","n1-main/m1-ui/common/c6-SuperRadio/SuperRadio.tsx","n1-main/m2-bll/testReducer.ts","n2-features/f0-test/TestForReducer/TestForReducer.tsx","n2-features/f0-test/Examples/Examples.tsx","assets/img/shape.svg","assets/components/common/login-form/LoginForm.jsx","n1-main/m1-ui/p2-main/Main.tsx","n1-main/m1-ui/App.tsx","n1-main/m2-bll/store.ts","index.tsx","n1-main/m1-ui/common/c1-SuperInputText/SuperInputText.module.scss","n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox.module.css","n1-main/m1-ui/common/c2-SuperButton/SuperButton.module.scss","n2-features/f1-auth/a3-profile/Profile.module.scss","n1-main/m1-ui/common/c5-SuperSelect/SuperSelect.module.scss","n1-main/m1-ui/common/c6-SuperRadio/SuperRadio.module.scss","n1-main/m1-ui/common/c4-SuperEditableSpan/SuperEditableSpan.module.scss"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","withCredentials","authAPI","data","post","delete","registrationAPI","email","password","RecoveryAPI","from","message","initialState","avatar","name","publicCardPacksCount","_id","setProfileAC","type","isInitilize","error","loading","isLoggedIn","setIsLoggedInAC","value","setIsErrorAC","Header","dispatch","useDispatch","useSelector","state","auth","className","s","header","logo","links","item","to","link","onClick","catch","e","response","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","currentTarget","key","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","SuperButton","red","finalClassName","button","default","Login","errorFromServer","formik","useFormik","initialValues","rememberMe","onSubmit","values","res","validate","errors","test","form","handleSubmit","border","text","id","placeholder","getFieldProps","touched","RegistrationForm","props","useState","setError","showPas","setShowPass","checkPassword","trim","resetForm","callBack","setTimeout","validationSchema","yup","shape","required","matches","min","onKeypressHandler","status","registration","handleChange","disabled","setRegisterStatus","setRegisterError","setRegisterMessage","Registration","style","color","createNewUser","Profile","profile","profileContainer","Page404","success","setSuccessAC","setErrorAC","PasswordRecovery","recovery","alert","textAlign","PasswordNew","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","editableSpan","SuperSelect","options","onChangeOption","mappedOptions","map","o","i","option","select","SuperRadio","onChangeCallback","radio","testValue","TestForReducer","reducerValue","testReducer","testForReducer","newValue","Examples","setText","setChecked","setValue","arr","valueForSsSr","showAlert","examples","column","inputContainer","testSpanError","blue","superButton","SuperEditableSpanContainer","undefined","radioContainer","LoginForm","loginForm","action","contentWrap","title","subtitle","customField","htmlFor","icon","src","alt","linkForgotPass","btn","question","linkSignUp","Main","path","element","App","isInitialize","app","useEffect","finally","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55dc2e2d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__2JRD0\",\"border\":\"Login_border__17tOh\",\"text\":\"Login_text__3Z0TF\",\"error\":\"Login_error__1bBGI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testForReducer\":\"TestForReducer_testForReducer__1y3D7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"examples\":\"Examples_examples__3mQdr\",\"column\":\"Examples_column__3t11r\",\"testSpanError\":\"Examples_testSpanError__3fxpu\",\"blue\":\"Examples_blue__30Fno\",\"superButton\":\"Examples_superButton__3TncY\",\"inputContainer\":\"Examples_inputContainer__3v9e7\",\"SuperEditableSpanContainer\":\"Examples_SuperEditableSpanContainer__oujEe\",\"radioContainer\":\"Examples_radioContainer__11Z2z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"LoginForm_loginForm__1XP8L\",\"contentWrap\":\"LoginForm_contentWrap__1FmMr\",\"title\":\"LoginForm_title__20tOD\",\"subtitle\":\"LoginForm_subtitle__1jOi-\",\"customField\":\"LoginForm_customField__25_ke\",\"placeholder\":\"LoginForm_placeholder__1_RRq\",\"icon\":\"LoginForm_icon__2M-AZ\",\"linkForgotPass\":\"LoginForm_linkForgotPass__1Z24k\",\"btn\":\"LoginForm_btn__3CPPH\",\"question\":\"LoginForm_question__2AeQe\",\"linkSignUp\":\"LoginForm_linkSignUp__12tbF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2LBWd\",\"links\":\"Header_links__1ciEN\",\"link\":\"Header_link__1Es1h\",\"logo\":\"Header_logo__Tdvix\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import axios, {AxiosResponse} from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\nexport const authAPI = {\r\n    login(data: LoginType) {\r\n        return instance.post<AuthResponseType>('auth/login', data);\r\n    },\r\n    me() {\r\n        return instance.post<AuthResponseType>('/auth/me', {})\r\n    },\r\n    logout() {\r\n        return instance.delete('/auth/me')\r\n    }\r\n}\r\nexport const registrationAPI = {\r\n    registerUser(email: string, password: string) {\r\n        return instance.post<{ title: string }, AxiosResponse<ResponseType>>('auth/register', {\r\n            email: email,\r\n            password: password\r\n        });\r\n    },\r\n}\r\nexport const RecoveryAPI = {\r\n    recoveryPass(email: string) {\r\n        return instance.post<recoveryType>('/auth/forgot', {\r\n            email,\r\n            from: \"test-front-admin <ivanin.jay@gmail.com>\",\r\n            message: `<div style=\"background-color: lime; padding: 15px\">password recovery link: \r\n                            <a href='http://localhost:3000/tests/$token$'>link</a></div>`\r\n        })\r\n    }\r\n};\r\n\r\nexport type LoginType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n}\r\nexport type AuthResponseType = {\r\n    avatar: string\r\n    email: string\r\n    name: string\r\n    publicCardPacksCount: number\r\n    _id: string\r\n}\r\nexport type ResponseType<D = {}> = {\r\n    resultCode: number\r\n    messages: Array<string>\r\n    fieldsErrors: Array<string>\r\n    data: D\r\n}\r\nexport type recoveryType = {\r\n    error: string\r\n    success: boolean\r\n}\r\n","import {AuthResponseType} from \"./api/api\";\r\n\r\nlet initialState: AuthResponseType = {\r\n    avatar: '',\r\n    email: '',\r\n    name: '',\r\n    publicCardPacksCount: 0,\r\n    _id: '',\r\n}\r\n\r\nexport const profileReducer = (state = initialState, action: ActionsType): AuthResponseType => {\r\n    switch (action.type) {\r\n        case 'PROFILE/SET-PROFILE':\r\n            return {...state, ...action.data}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n// ActionsCreators\r\nexport const setProfileAC = (data: AuthResponseType) => {\r\n    return ({type: 'PROFILE/SET-PROFILE', data} as const)\r\n}\r\n\r\n// Types\r\nexport type SetProfileType = ReturnType<typeof setProfileAC>\r\ntype ActionsType = SetProfileType","// todo: add Loader here\r\n\r\nlet initialState: InitialStateType = {\r\n    isInitilize: false,\r\n    error:null,\r\n    message:null,\r\n    loading:false,\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-IS-INITIALIZE':\r\n            return {...state, isInitilize: action.isInitilize}\r\n        case 'APP/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        case 'APP/SET-MESSAGE':\r\n            return {...state, message: action.message}\r\n        case 'APP/SET-LOADING':\r\n            return {...state, loading: action.loading}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport const setIsInitializeAC = (isInitilize: boolean) => {\r\n    return ({type: 'APP/SET-IS-INITIALIZE', isInitilize} as const)\r\n}\r\n\r\nexport const setAppError = (error: string) => {\r\n    return ({type: 'APP/SET-ERROR', error} as const)\r\n}\r\n\r\nexport const setAppMessage = (message: string) => {\r\n    return ({type: 'APP/SET-MESSAGE', message} as const)\r\n}\r\n\r\nexport const setAppLoading = (loading: boolean) => {\r\n    return ({type: 'APP/SET-LOADING', loading} as const)\r\n}\r\n\r\n// Types\r\ntype InitialStateType = {\r\n    isInitilize: boolean\r\n    error: null | string\r\n    message: null | string\r\n    loading: boolean\r\n}\r\n\r\ntype ActionsType =\r\n    | ReturnType<typeof setIsInitializeAC>\r\n    | ReturnType<typeof setAppError>\r\n    | ReturnType<typeof setAppMessage>\r\n    | ReturnType<typeof setAppLoading>\r\n\r\n\r\n","import {authAPI} from \"./api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {setProfileAC, SetProfileType} from \"./profileReducer\";\r\nimport {setIsInitializeAC} from \"./appReducer\";\r\n\r\nlet initialState: InitialStateType = {\r\n    isLoggedIn: false,\r\n    error: null,\r\n}\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'AUTH/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.value}\r\n        case 'AUTH/SET-IS-ERROR':\r\n            return {...state, error: action.error}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n// ActionsCreators\r\nexport const setIsLoggedInAC = (value: boolean) => {\r\n    return ({type: 'AUTH/SET-IS-LOGGED-IN', value} as const)\r\n}\r\nexport const setIsErrorAC = (error: string | null) => {\r\n    return ({type: 'AUTH/SET-IS-ERROR', error} as const)\r\n}\r\n\r\n\r\n// Thunks\r\nexport const LoginTC = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch<ActionsType>) => {\r\n    authAPI.login({email, password, rememberMe})\r\n        .then(res => {\r\n                dispatch(setIsLoggedInAC(true))\r\n                dispatch(setProfileAC(res.data))\r\n            }\r\n        )\r\n        .catch(e => {\r\n                dispatch(setIsErrorAC(e.response.data.error))\r\n            }\r\n        )\r\n}\r\nexport const InitializeTC = () => (dispatch: Dispatch) => {\r\n    authAPI.me()\r\n        .then(res => {\r\n                dispatch(setIsLoggedInAC(true))\r\n                dispatch(setProfileAC(res.data))\r\n            }\r\n        )\r\n        .catch(() => {\r\n                dispatch(setIsLoggedInAC(false))\r\n            }\r\n        )\r\n        .finally(() => {\r\n            dispatch(setIsInitializeAC(true))\r\n        })\r\n}\r\nexport const LogoutTC = () => (dispatch: Dispatch) => {\r\n    authAPI.logout()\r\n        .then(() => {\r\n                dispatch(setIsLoggedInAC(false))\r\n                dispatch(setIsErrorAC(null))\r\n            }\r\n        )\r\n        .catch(e => {\r\n                dispatch(setIsErrorAC(e.response.data.error))\r\n            }\r\n        )\r\n}\r\n\r\n// Types\r\ntype InitialStateType = {\r\n    isLoggedIn: boolean\r\n    error: string | null\r\n}\r\ntype ActionsType =\r\n    | ReturnType<typeof setIsLoggedInAC>\r\n    | ReturnType<typeof setIsErrorAC>\r\n    | SetProfileType\r\n\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Header.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {LogoutTC} from \"../../m2-bll/authReducer\";\r\nimport {AppStoreType} from \"../../m2-bll/store\";\r\n\r\nexport const Header = () => {\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const onLogout = () => {\r\n        dispatch(LogoutTC())\r\n    }\r\n\r\n    return (\r\n        <div className={s.header}>\r\n            <div className={s.logo}>BrightCards</div>\r\n            <div className={s.links}>\r\n                {isLoggedIn\r\n                    ? <>\r\n                        <NavLink className={s.item} to={'/profile'}>Profile</NavLink>\r\n                        <a className={s.link} onClick={onLogout}>Log out</a>\r\n                    </>\r\n                    : <>\r\n                        <NavLink className={s.item} to={'/login'}>Login</NavLink>\r\n                        <NavLink className={s.item} to={'/loginform'}>Login Form</NavLink>\r\n                        <NavLink className={s.item} to={'/registration'}>Registration</NavLink>\r\n                        <NavLink className={s.item} to={'/passwordrecovery'}>Recovery Password</NavLink>\r\n                    </>\r\n                }\r\n                <NavLink className={s.item} to={'/tests'}>Tests</NavLink>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.scss'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        //type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n  onChangeChecked?: (checked: boolean) => void\r\n  spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n  {\r\n    type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n    onChange, onChangeChecked,\r\n    className, spanClassName,\r\n    children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n    ...restProps// все остальные пропсы попадут в объект restProps\r\n  }\r\n) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e)\r\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n  }\r\n\r\n  const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      <input\r\n        type={'checkbox'}\r\n        onChange={onChangeCallback}\r\n        className={finalInputClassName}\r\n\r\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n      />\r\n      {children && <span className={s.spanClassName}>{children}</span>}\r\n    </label> // благодаря label нажатие на спан передастся в инпут\r\n  )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.scss'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React from 'react';\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../../../n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {Navigate, NavLink} from \"react-router-dom\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport s from './Login.module.scss'\r\nimport {LoginTC} from \"../../../n1-main/m2-bll/authReducer\";\r\nimport {useFormik} from \"formik\";\r\n\r\nexport const Login = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.auth.isLoggedIn)\r\n    const errorFromServer = useSelector<AppStoreType, string | null>(state => state.auth.error)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(LoginTC(values.email, values.password, values.rememberMe));\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            }\r\n            return errors\r\n        },\r\n    },);\r\n\r\n    if (isLoggedIn) {\r\n        return <Navigate to=\"/profile\"/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.form}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                    <div className={s.border}>\r\n                        <div className={s.text}>Sign In</div>\r\n                        <div><SuperInputText\r\n                            id=\"email\"\r\n                            placeholder={'email'}\r\n                            {...formik.getFieldProps('email')}\r\n                        /></div>\r\n                        {formik.touched.email && formik.errors.email ? (\r\n                            <div className={s.error}>{formik.errors.email}</div>\r\n                        ) : null}\r\n                        <div><SuperInputText\r\n                            id=\"password\"\r\n                            placeholder={'password'}\r\n                            type={'password'}\r\n                            {...formik.getFieldProps('password')}\r\n                        /></div>\r\n                        {formik.touched.password && formik.errors.password ? (\r\n                            <div className={s.error}>{formik.errors.password}</div>\r\n                        ) : null}\r\n                        {errorFromServer ? <span className={s.error}>{errorFromServer}</span> : null}\r\n                        <div><SuperCheckbox\r\n                            id=\"rememberMe\"\r\n                            className={s.checkbox}\r\n                            {...formik.getFieldProps('rememberMe')}\r\n                        >\r\n                            Remember Me\r\n                        </SuperCheckbox></div>\r\n                        <SuperButton type={'submit'}>Login</SuperButton>\r\n                        <NavLink to={'/passwordrecovery'}>Forgot password</NavLink>\r\n                    </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport {Field, FormikProvider, useFormik} from 'formik';\r\nimport * as yup from 'yup'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../n1-main/m2-bll/store\";\r\nimport {RequestStatusType} from \"../../../../n1-main/m2-bll/registrationReducer\";\r\nimport SuperCheckbox from \"../../../../n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\ntype TitleFormPropsType = {\r\n    callBack: (email: string, password: string) => void\r\n}\r\n\r\n\r\nexport const RegistrationForm = (props: TitleFormPropsType) => {\r\n\r\n    const schemeCreator = () => {\r\n        return yup.object().shape({\r\n            email: yup.string().email('Invalid email').required('Required').trim(),\r\n            password: yup.string()\r\n                .matches(/^[a-zA-Z0-9]+/, 'Password can only contain Latin letters and numbers.')\r\n                .required('Required')\r\n                .min(7,'Password must be more than 7 characters...'),\r\n            checkPassword: yup.string()\r\n                .required('Required'),\r\n        })\r\n    }\r\n\r\n    const [error, setError] = useState<string | null>(null)\r\n    const [showPas, setShowPass] = useState(false)\r\n\r\n    const showPasswordHandler = (value: ChangeEvent<HTMLInputElement>) => {\r\n        setShowPass(value.currentTarget.checked)\r\n    }\r\n\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            checkPassword: '',\r\n        },\r\n        onSubmit: (values) => {\r\n            if (values.email.trim() !== \"\" && values.password === values.checkPassword) {\r\n                formik.resetForm()\r\n                props.callBack(values.email, values.password)\r\n            } else {\r\n                if (values.password !== values.checkPassword) {\r\n                    setError('password dont equal')\r\n                    setTimeout(()=>{\r\n                        setError(null)\r\n                    },2000)\r\n                }\r\n            }\r\n        },\r\n        validationSchema: schemeCreator()\r\n    });\r\n\r\n    const onKeypressHandler = () => {\r\n        setError(null)\r\n    }\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.registration.status)\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <FormikProvider value={formik}>\r\n                    <div>\r\n                        <Field\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            placeholder={'example@gmail.com'}\r\n                            value={formik.values.email}\r\n                            onChange={formik.handleChange}\r\n                            onKeyPress={onKeypressHandler}\r\n                        />\r\n                        <span>{formik.touched.email ? formik.errors.email : ''}</span>\r\n                    </div>\r\n                    <div>\r\n                        <Field\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            type={showPas ? 'text' : 'password'}\r\n                            placeholder={'enter password'}\r\n                            value={formik.values.password}\r\n                            onChange={formik.handleChange}\r\n                            onKeyPress={onKeypressHandler}\r\n                        />\r\n                        <span>{formik.touched.password && formik.errors.password ? formik.errors.password : ''}</span>\r\n                    </div>\r\n                    <div>\r\n                        <Field\r\n                            id=\"checkPassword\"\r\n                            name=\"checkPassword\"\r\n                            type={showPas ? 'text' : 'password'}\r\n                            placeholder={'repeat your password'}\r\n                            value={formik.values.checkPassword}\r\n                            onChange={formik.handleChange}\r\n                            onKeyPress={onKeypressHandler}\r\n                        />\r\n                        <span>{formik.touched.checkPassword && formik.errors.checkPassword ? formik.errors.checkPassword : ''}</span>\r\n                    </div>\r\n                    <div>\r\n                        <button\r\n                            type=\"submit\"\r\n                            disabled={!!formik.errors.email || !!formik.errors.password || !!formik.errors.checkPassword || !!error || status === 'loading'}\r\n                        >registration\r\n                        </button>\r\n                    </div>\r\n                    <div>\r\n                        <SuperCheckbox onChange={showPasswordHandler}/>\r\n                        <span>show password</span>\r\n                    </div>\r\n                    <div>\r\n                        {error}\r\n                    </div>\r\n                </FormikProvider>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {registrationAPI} from \"./api/api\";\r\n\r\nconst initialState: InitialStateType = {\r\n    status: 'idle',\r\n    error: null,\r\n    message: null,\r\n}\r\n\r\nexport const registrationReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"registrationReducer/SET-REGISTER-STATUS\":\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        case \"registrationReducer/SET-REGISTER-ERROR\":\r\n            return {\r\n                ...state, error: action.error\r\n            }\r\n        case \"registrationReducer/SET-REGISTER-MESSAGE\":\r\n            return {\r\n                ...state, message: action.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setRegisterStatus = (status: RequestStatusType) =>\r\n    ({type: \"registrationReducer/SET-REGISTER-STATUS\", status} as const)\r\nexport const setRegisterError = (error: string | null) =>\r\n    ({type: \"registrationReducer/SET-REGISTER-ERROR\", error} as const)\r\nexport const setRegisterMessage = (message: string | null) =>\r\n    ({type: \"registrationReducer/SET-REGISTER-MESSAGE\", message} as const)\r\n\r\n\r\nexport const createNewUser = (email: string, password: string) => (dispatch: Dispatch<ActionsType /*| SetAppErrorActionType | SetAppStatusActionType*/>) => {\r\n    dispatch(setRegisterStatus('loading'))\r\n    registrationAPI.registerUser(email, password)\r\n        .then(res => {\r\n            dispatch(setRegisterMessage('success!'))\r\n            dispatch(setRegisterStatus('succeeded'))\r\n            setTimeout(() => {\r\n                dispatch(setRegisterStatus('register_success'))\r\n                dispatch(setRegisterMessage(null))\r\n                dispatch(setRegisterStatus('idle'))\r\n            }, 2000)\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setRegisterError(error.response.data.error))\r\n            dispatch(setRegisterStatus('failed'))\r\n            setTimeout(() => {\r\n                dispatch(setRegisterError(null))\r\n            }, 2000)\r\n        })\r\n}\r\n\r\n\r\ntype InitialStateType = {\r\n    status: RequestStatusType\r\n    error: string | null\r\n    message: string | null\r\n}\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed' | 'register_success'\r\n\r\ntype ActionsType =\r\n    | ReturnType<typeof setRegisterStatus>\r\n    | ReturnType<typeof setRegisterError>\r\n    | ReturnType<typeof setRegisterMessage>\r\n","import React from 'react';\r\nimport {RegistrationForm} from \"./RegistrationForm/RegistrationForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Link, Navigate} from \"react-router-dom\";\r\nimport {createNewUser, RequestStatusType} from \"../../../n1-main/m2-bll/registrationReducer\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\n\r\nexport const Registration = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const error = useSelector<AppStoreType, string | null>(state => state.registration.error)\r\n    const message = useSelector<AppStoreType, string | null>(state => state.registration.message)\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.registration.status)\r\n\r\n\r\n    const createNewUserHandler = (email: string, password: string) => {\r\n        dispatch(createNewUser(email, password))\r\n    }\r\n\r\n    if (status === 'register_success') {\r\n        return <Navigate to={\"/login\"}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {status === 'loading'\r\n                ? <h1>...loading</h1>\r\n                : <div>\r\n                    <span style={{color: 'red'}}>{error && error}</span>\r\n                    <span style={{color: 'green'}}>{message && message}</span>\r\n                    <RegistrationForm callBack={createNewUserHandler}/>\r\n                    <Link to=\"/login\">\r\n                        login\r\n                    </Link>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport s from './Profile.module.scss'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {AuthResponseType} from \"../../../n1-main/m2-bll/api/api\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nexport const Profile = () => {\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const { name, publicCardPacksCount} = useSelector<AppStoreType, AuthResponseType>(state => state.profile)\r\n\r\n    if (!isLoggedIn) {\r\n        return <Navigate to=\"/login\"/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className={s.profileContainer}>\r\n                <div className={s.profile}>\r\n                    <span>{name}</span>\r\n                    <span>Cards packs count: {publicCardPacksCount}</span>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n}","import React from 'react';\r\n\r\nexport const Page404 = () => {\r\n    return (\r\n        <div>Page404</div>\r\n    );\r\n}","import {Dispatch} from \"redux\";\r\nimport {RecoveryAPI} from \"./api/api\";\r\n\r\nconst initialState: InitialStateType = {\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const passwordRecoveryReducer = (state = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case 'recovery/SET-SUCCESS':\r\n            return {...state, success: action.success, error: ''}\r\n        case 'recovery/SET-ERROR':\r\n            return {...state, error: action.error, success: false}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sendPassRecoveryTC = (email: string) => (dispatch: Dispatch<ActionType>) => {\r\n    RecoveryAPI.recoveryPass(email)\r\n        .then((res) => {\r\n            if (res.data.success) {\r\n                dispatch(setSuccessAC(true))\r\n                alert('Письмо отправлено')\r\n            }\r\n        })\r\n        .catch(e => {\r\n            dispatch(setErrorAC(e.response.data.error))\r\n        })\r\n}\r\n\r\nexport const setSuccessAC = (success: boolean) => ({type: 'recovery/SET-SUCCESS', success} as const)\r\nexport const setErrorAC = (error: string) => ({type: 'recovery/SET-ERROR', error} as const)\r\n\r\ntype InitialStateType = {\r\n    success: boolean\r\n    error: null | string\r\n}\r\n\r\ntype ActionType =\r\n    | ReturnType<typeof setSuccessAC>\r\n    | ReturnType<typeof setErrorAC>\r\n\r\n\r\n\r\n\r\n","import {useFormik} from 'formik';\r\nimport React from 'react';\r\nimport SuperInputText from \"../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from '../../n1-main/m1-ui/common/c2-SuperButton/SuperButton';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {sendPassRecoveryTC} from \"../../n1-main/m2-bll/passwordRecoveryReducer\";\r\nimport s from \"./a1-login/Login.module.scss\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {AppStoreType} from \"../../n1-main/m2-bll/store\";\r\n\r\nexport const PasswordRecovery = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const errorFromServer = useSelector<AppStoreType, string | null>(state => state.recovery.error)\r\n\r\n    const formik = useFormik({\r\n\r\n        initialValues: {\r\n            email: '',\r\n        },\r\n\r\n        validate: (values) => {\r\n            const errors: Partial<FormikErrorType> = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: values => {\r\n            // alert(JSON.stringify(values))\r\n            formik.resetForm()\r\n            dispatch(sendPassRecoveryTC(values.email))\r\n        },\r\n    })\r\n\r\n    return (\r\n\r\n        <div className={s.form}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <div className={s.border}>\r\n                    <div className={s.text}>Forgot password?</div>\r\n                    <div><SuperInputText\r\n                        id=\"email\"\r\n                        placeholder={'email'}\r\n                        {...formik.getFieldProps('email')}\r\n                    />\r\n                    </div>\r\n                    {formik.touched.email && formik.errors.email ? (\r\n                        <div className={s.error}>{formik.errors.email}</div>) : null}\r\n                    {errorFromServer ? <span className={s.error}>{errorFromServer}</span> : null}\r\n                    <SuperButton type={'submit'}>Send instruction</SuperButton>\r\n                    <div style={{textAlign: 'center'}}><NavLink to={'/login'}>Try logging in</NavLink></div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\ntype FormikErrorType = {\r\n    email: string\r\n}","import React from 'react';\r\n\r\nexport const PasswordNew = () => {\r\n    return (\r\n        <div>PasswordNew</div>\r\n    );\r\n}","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport s from './SuperEditableSpan.module.scss'\r\nimport SuperInputText from \"../c1-SuperInputText/SuperInputText\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n  onChangeText?: (value: string) => void\r\n  onEnter?: () => void\r\n  error?: string\r\n  spanClassName?: string\r\n\r\n  spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n  {\r\n    autoFocus, // игнорировать изменение этого пропса\r\n    onBlur,\r\n    onEnter,\r\n    spanProps,\r\n\r\n    ...restProps// все остальные пропсы попадут в объект restProps\r\n  }\r\n) => {\r\n  const [editMode, setEditMode] = useState<boolean>(false)\r\n  const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n  const onEnterCallback = () => {\r\n    setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n    onEnter && onEnter() // оставлено на будущее, чтобы можно было возвращать событие по enter\r\n  }\r\n  const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n    onBlur && onBlur(e)\r\n  }\r\n  const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n    setEditMode(true) // включить editMode при двойном клике\r\n\r\n    onDoubleClick && onDoubleClick(e)\r\n  }\r\n\r\n  const spanClassName = `${s.editableSpan} ${className}`\r\n\r\n  return (\r\n    <>\r\n      {editMode\r\n        ? (\r\n          <SuperInputText\r\n            autoFocus // пропсу с булевым значением не обязательно указывать true\r\n            onBlur={onBlurCallback}\r\n            onEnter={onEnterCallback}\r\n\r\n            {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n          />\r\n        ) : (\r\n          <span\r\n            onDoubleClick={onDoubleClickCallBack}\r\n            className={spanClassName}\r\n\r\n            {...restSpanProps}\r\n          >\r\n            {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n            ✎ {children || restProps.value}\r\n                    </span>\r\n        )\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","import React, {ChangeEvent, DetailedHTMLProps, SelectHTMLAttributes} from 'react'\r\nimport s from './SuperSelect.module.scss'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n  options?: string[]\r\n  onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n  {\r\n    options,\r\n    onChange, onChangeOption,\r\n    ...restProps\r\n  }\r\n) => {\r\n  const mappedOptions: any[] = options ? options.map((o, i) => (\r\n    <option className={s.option} key={'option-' + i} value={o}>{o}</option>\r\n  )) : []\r\n\r\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    onChange && onChange(e)\r\n    onChangeOption && onChangeOption(e.currentTarget.value)\r\n\r\n  }\r\n\r\n  return (\r\n    <select className={s.select} onChange={onChangeCallback} {...restProps}>\r\n      {mappedOptions}\r\n    </select>\r\n  )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperRadio.module.scss'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: string[]\r\n    onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n      onChange && onChange(e)\r\n      onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => { // map options with key\r\n        return <label className={s.label} key={name + '-' + i}>\r\n            <input\r\n                className={s.radio}\r\n                type={'radio'}\r\n                name={name}\r\n                checked={o === value}\r\n                value={o}\r\n                onChange={onChangeCallback}\r\n            />\r\n            {o}\r\n        </label>\r\n    }) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","const initialState: InitialStateType = {\r\n    testValue: ''\r\n}\r\n\r\nexport const testReducer = (state = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case 'SET-TEST-VALUE':\r\n            return {...state, testValue: action.newValue}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setTestValueAC = (newValue: string) =>\r\n    ({type: 'SET-TEST-VALUE', newValue} as const)\r\n\r\n\r\ntype InitialStateType = {\r\n    testValue: string\r\n}\r\n\r\ntype ActionType = ReturnType<typeof setTestValueAC>","import React from 'react';\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {setTestValueAC} from \"../../../n1-main/m2-bll/testReducer\";\r\nimport s from './TestForReducer.module.scss'\r\n\r\nexport const TestForReducer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    let reducerValue = useSelector<AppStoreType, string>(state => state.testReducer.testValue)\r\n\r\n    return <div className={s.testForReducer}>\r\n        <div>Hi, I am test for reducer. I will set 'test value' to state and will show it at the input, if you click the\r\n            button.\r\n        </div>\r\n        <div>\r\n            <SuperInputText value={reducerValue}/>\r\n            <SuperButton onClick={() => {dispatch(setTestValueAC('test value'))}}>Click Me</SuperButton>\r\n        </div>\r\n    </div>\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport s from './Examples.module.scss'\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../../n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperEditableSpan from \"../../../n1-main/m1-ui/common/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperSelect from \"../../../n1-main/m1-ui/common/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"../../../n1-main/m1-ui/common/c6-SuperRadio/SuperRadio\";\r\nimport {TestForReducer} from \"../TestForReducer/TestForReducer\";\r\n\r\nexport const Examples = () => {\r\n    const [text, setText] = useState<string>('') // for SuperInputText\r\n    const [checked, setChecked] = useState<boolean>(false) // for SuperCheckbox\r\n    const [value, setValue] = useState<string>('') // for SuperEditableSpan\r\n    const arr = ['x', 'y', 'z'] // for SuperSelect & SuperRadio\r\n    const [valueForSsSr, onChangeOption] = useState(arr[1]) // for SuperSelect & SuperRadio\r\n\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => { // for SuperButton\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div className={s.examples}>\r\n            <TestForReducer />\r\n            <h1>This is examples of common components.</h1>\r\n            <hr/>\r\n            <div className={s.column}>\r\n                <h2>с1-SuperInputText:</h2>\r\n                <div className={s.inputContainer}>\r\n                    <SuperInputText\r\n                        value={text}\r\n                        onChangeText={setText}\r\n                        onEnter={showAlert}\r\n                        error={error}\r\n                        spanClassName={s.testSpanError}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <SuperInputText\r\n                        className={s.blue} // проверьте, работает ли смешивание классов\r\n                    />\r\n                </div>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div className={s.column}>\r\n                <h2>с2-SuperButton:</h2>\r\n                <SuperButton className={s.superButton}>\r\n                    default\r\n                </SuperButton>\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                    className={s.superButton}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n                <SuperButton disabled className={s.superButton}>\r\n                    disabled\r\n                </SuperButton>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div className={s.column}>\r\n                <h2>с3-SuperCheckbox:</h2>\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div>\r\n                <h2>с4-SuperEditableSpan:</h2>\r\n                <div className={s.SuperEditableSpanContainer}>\r\n                    <SuperEditableSpan\r\n                        value={value}\r\n                        onChangeText={setValue}\r\n                        spanProps={{children: value ? undefined : 'enter text...'}}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div className={s.column}>\r\n                <h2>с5-SuperSelect and SuperRadio:</h2>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={valueForSsSr}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n                <div className={s.radioContainer}>\r\n                    <SuperRadio\r\n                        options={arr}\r\n                        value={valueForSsSr}\r\n                        onChangeOption={onChangeOption}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/shape.109a1739.svg\";","import { NavLink } from \"react-router-dom\";\r\nimport s from \"./LoginForm.module.scss\";\r\n\r\nimport icon from './../../../img/shape.svg';\r\n\r\nfunction LoginForm() {\r\n   return (\r\n      <div className={s.loginForm}>\r\n         <form action=\"\">\r\n            <div className={s.contentWrap}>\r\n               <h1 className={s.title}>It-incubator</h1>\r\n               <h2 className={s.subtitle}>Sign In</h2>\r\n               <div className={s.customField}>\r\n                  <input id=\"email\" type=\"email\" name=\"email\" />\r\n                  <label className={s.placeholder} htmlFor=\"email\">Email</label>\r\n               </div>\r\n               <div className={s.customField}>\r\n                  <input id=\"password\" type=\"password\" name=\"password\" />\r\n                  <label className={s.placeholder} htmlFor=\"password\">Password</label>\r\n                  <img className={s.icon} src={icon} alt=\"image\" />\r\n               </div>\r\n               <NavLink className={s.linkForgotPass} to={'/'}>Forgot password</NavLink>\r\n               <button className={s.btn} type=\"submit\">Login</button>\r\n               <span className={s.question}>Don’t have an account?</span>\r\n               <NavLink className={s.linkSignUp} to={'/'}>Sign Up</NavLink>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport {Header} from \"../p1-header/Header\";\r\nimport {Navigate, Route, Routes} from \"react-router-dom\";\r\nimport {Login} from \"../../../n2-features/f1-auth/a1-login/Login\";\r\nimport {Registration} from \"../../../n2-features/f1-auth/a2-register/Registration\";\r\nimport {Profile} from \"../../../n2-features/f1-auth/a3-profile/Profile\";\r\nimport {Page404} from \"../../../n2-features/f1-auth/Page404\";\r\nimport {PasswordRecovery} from \"../../../n2-features/f1-auth/PasswordRecovery\";\r\nimport {PasswordNew} from \"../../../n2-features/f1-auth/PasswordNew\";\r\nimport {Examples} from \"../../../n2-features/f0-test/Examples/Examples\";\r\n\r\nimport LoginForm from \"../../../assets/components/common/login-form/LoginForm.jsx\";\r\n\r\nexport const Main = () => {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <Routes>\r\n                <Route path={'/login'} element={<Login/>}/>\r\n                 <Route path={'/registration'} element={<Registration/>}/>\r\n                <Route path={'/loginform'} element={<LoginForm/>}/>\r\n                <Route path={'/profile'} element={<Profile/>}/>\r\n                <Route path={'/404'} element={<Page404/>}/>\r\n                <Route path={'/passwordrecovery'} element={<PasswordRecovery/>}/>\r\n                <Route path={'/passwordnew'} element={<PasswordNew/>}/>\r\n                <Route path={'/tests/:token'} element={<Examples/>}/>\r\n                <Route path=\"/\" element={<Navigate to=\"/login\" />} />\r\n                <Route path=\"*\" element={<Navigate to=\"/404\" />} />\r\n            </Routes>\r\n        </div>\r\n    );\r\n}","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Main} from \"./p2-main/Main\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../m2-bll/store\";\r\nimport {InitializeTC} from \"../m2-bll/authReducer\";\r\n\r\nexport const App = () => {\r\n    const dispatch = useDispatch()\r\n    const isInitialize = useSelector<AppStoreType, boolean>(state => state.app.isInitilize)\r\n    useEffect(() => {\r\n        dispatch(InitializeTC())\r\n    }, [])\r\n    return (\r\n        <div className=\"App\">\r\n            {isInitialize && <Main />}\r\n        </div>\r\n    );\r\n}\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {testReducer} from \"./testReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {authReducer} from \"./authReducer\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {registrationReducer} from \"./registrationReducer\";\r\nimport {passwordRecoveryReducer} from \"./passwordRecoveryReducer\";\r\nimport {appReducer} from \"./appReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    testReducer: testReducer,\r\n    auth: authReducer,\r\n    profile: profileReducer,\r\n    registration: registrationReducer,\r\n    recovery: passwordRecoveryReducer,\r\n    app: appReducer,\r\n})\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store; // for dev","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {App} from \"./n1-main/m1-ui/App\";\r\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./n1-main/m2-bll/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__1efK7\",\"superInput\":\"SuperInputText_superInput__-n5r7\",\"errorInput\":\"SuperInputText_errorInput__3ob-2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__21TBZ\",\"checkbox\":\"SuperCheckbox_checkbox__1-frT\",\"spanClassName\":\"SuperCheckbox_spanClassName__1f-hD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SuperButton_button__1EGkW\",\"default\":\"SuperButton_default__2WfoH\",\"red\":\"SuperButton_red__3OyBy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"Profile_profileContainer__39QHs\",\"profile\":\"Profile_profile__lzKUQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__pfhQz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"SuperRadio_radio__32PFz\",\"label\":\"SuperRadio_label__3f7xm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableSpan\":\"SuperEditableSpan_editableSpan__2Cx5J\"};"],"sourceRoot":""}